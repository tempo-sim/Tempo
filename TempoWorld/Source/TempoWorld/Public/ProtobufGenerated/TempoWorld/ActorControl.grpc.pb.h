// Generated by the gRPC C++ plugin.
// If you make any local change, they will be lost.
// source: TempoWorld/ActorControl.proto
// Original file comments:
// Copyright Tempo Simulation, LLC. All Rights Reserved
//
#ifndef GRPC_TempoWorld_2fActorControl_2eproto__INCLUDED
#define GRPC_TempoWorld_2fActorControl_2eproto__INCLUDED

#include "TempoWorld/ActorControl.pb.h"

#include <functional>
#include <grpcpp/generic/async_generic_service.h>
#include <grpcpp/support/async_stream.h>
#include <grpcpp/support/async_unary_call.h>
#include <grpcpp/support/client_callback.h>
#include <grpcpp/client_context.h>
#include <grpcpp/completion_queue.h>
#include <grpcpp/support/message_allocator.h>
#include <grpcpp/support/method_handler.h>
#include <grpcpp/impl/proto_utils.h>
#include <grpcpp/impl/rpc_method.h>
#include <grpcpp/support/server_callback.h>
#include <grpcpp/impl/server_callback_handlers.h>
#include <grpcpp/server_context.h>
#include <grpcpp/impl/service_type.h>
#include <grpcpp/support/status.h>
#include <grpcpp/support/stub_options.h>
#include <grpcpp/support/sync_stream.h>

namespace TempoWorld {

class ActorControlService final {
 public:
  static constexpr char const* service_full_name() {
    return "TempoWorld.ActorControlService";
  }
  class StubInterface {
   public:
    virtual ~StubInterface() {}
    virtual ::grpc::Status SpawnActor(::grpc::ClientContext* context, const ::TempoWorld::SpawnActorRequest& request, ::TempoWorld::SpawnActorResponse* response) = 0;
    std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::TempoWorld::SpawnActorResponse>> AsyncSpawnActor(::grpc::ClientContext* context, const ::TempoWorld::SpawnActorRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::TempoWorld::SpawnActorResponse>>(AsyncSpawnActorRaw(context, request, cq));
    }
    std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::TempoWorld::SpawnActorResponse>> PrepareAsyncSpawnActor(::grpc::ClientContext* context, const ::TempoWorld::SpawnActorRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::TempoWorld::SpawnActorResponse>>(PrepareAsyncSpawnActorRaw(context, request, cq));
    }
    virtual ::grpc::Status FinishSpawningActor(::grpc::ClientContext* context, const ::TempoWorld::FinishSpawningActorRequest& request, ::TempoWorld::FinishSpawningActorResponse* response) = 0;
    std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::TempoWorld::FinishSpawningActorResponse>> AsyncFinishSpawningActor(::grpc::ClientContext* context, const ::TempoWorld::FinishSpawningActorRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::TempoWorld::FinishSpawningActorResponse>>(AsyncFinishSpawningActorRaw(context, request, cq));
    }
    std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::TempoWorld::FinishSpawningActorResponse>> PrepareAsyncFinishSpawningActor(::grpc::ClientContext* context, const ::TempoWorld::FinishSpawningActorRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::TempoWorld::FinishSpawningActorResponse>>(PrepareAsyncFinishSpawningActorRaw(context, request, cq));
    }
    virtual ::grpc::Status DestroyActor(::grpc::ClientContext* context, const ::TempoWorld::DestroyActorRequest& request, ::TempoScripting::Empty* response) = 0;
    std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::TempoScripting::Empty>> AsyncDestroyActor(::grpc::ClientContext* context, const ::TempoWorld::DestroyActorRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::TempoScripting::Empty>>(AsyncDestroyActorRaw(context, request, cq));
    }
    std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::TempoScripting::Empty>> PrepareAsyncDestroyActor(::grpc::ClientContext* context, const ::TempoWorld::DestroyActorRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::TempoScripting::Empty>>(PrepareAsyncDestroyActorRaw(context, request, cq));
    }
    virtual ::grpc::Status AddComponent(::grpc::ClientContext* context, const ::TempoWorld::AddComponentRequest& request, ::TempoWorld::AddComponentResponse* response) = 0;
    std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::TempoWorld::AddComponentResponse>> AsyncAddComponent(::grpc::ClientContext* context, const ::TempoWorld::AddComponentRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::TempoWorld::AddComponentResponse>>(AsyncAddComponentRaw(context, request, cq));
    }
    std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::TempoWorld::AddComponentResponse>> PrepareAsyncAddComponent(::grpc::ClientContext* context, const ::TempoWorld::AddComponentRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::TempoWorld::AddComponentResponse>>(PrepareAsyncAddComponentRaw(context, request, cq));
    }
    virtual ::grpc::Status DestroyComponent(::grpc::ClientContext* context, const ::TempoWorld::DestroyComponentRequest& request, ::TempoScripting::Empty* response) = 0;
    std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::TempoScripting::Empty>> AsyncDestroyComponent(::grpc::ClientContext* context, const ::TempoWorld::DestroyComponentRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::TempoScripting::Empty>>(AsyncDestroyComponentRaw(context, request, cq));
    }
    std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::TempoScripting::Empty>> PrepareAsyncDestroyComponent(::grpc::ClientContext* context, const ::TempoWorld::DestroyComponentRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::TempoScripting::Empty>>(PrepareAsyncDestroyComponentRaw(context, request, cq));
    }
    virtual ::grpc::Status SetActorTransform(::grpc::ClientContext* context, const ::TempoWorld::SetActorTransformRequest& request, ::TempoScripting::Empty* response) = 0;
    std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::TempoScripting::Empty>> AsyncSetActorTransform(::grpc::ClientContext* context, const ::TempoWorld::SetActorTransformRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::TempoScripting::Empty>>(AsyncSetActorTransformRaw(context, request, cq));
    }
    std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::TempoScripting::Empty>> PrepareAsyncSetActorTransform(::grpc::ClientContext* context, const ::TempoWorld::SetActorTransformRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::TempoScripting::Empty>>(PrepareAsyncSetActorTransformRaw(context, request, cq));
    }
    virtual ::grpc::Status SetComponentTransform(::grpc::ClientContext* context, const ::TempoWorld::SetComponentTransformRequest& request, ::TempoScripting::Empty* response) = 0;
    std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::TempoScripting::Empty>> AsyncSetComponentTransform(::grpc::ClientContext* context, const ::TempoWorld::SetComponentTransformRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::TempoScripting::Empty>>(AsyncSetComponentTransformRaw(context, request, cq));
    }
    std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::TempoScripting::Empty>> PrepareAsyncSetComponentTransform(::grpc::ClientContext* context, const ::TempoWorld::SetComponentTransformRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::TempoScripting::Empty>>(PrepareAsyncSetComponentTransformRaw(context, request, cq));
    }
    virtual ::grpc::Status ActivateComponent(::grpc::ClientContext* context, const ::TempoWorld::ActivateComponentRequest& request, ::TempoScripting::Empty* response) = 0;
    std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::TempoScripting::Empty>> AsyncActivateComponent(::grpc::ClientContext* context, const ::TempoWorld::ActivateComponentRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::TempoScripting::Empty>>(AsyncActivateComponentRaw(context, request, cq));
    }
    std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::TempoScripting::Empty>> PrepareAsyncActivateComponent(::grpc::ClientContext* context, const ::TempoWorld::ActivateComponentRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::TempoScripting::Empty>>(PrepareAsyncActivateComponentRaw(context, request, cq));
    }
    virtual ::grpc::Status DeactivateComponent(::grpc::ClientContext* context, const ::TempoWorld::DeactivateComponentRequest& request, ::TempoScripting::Empty* response) = 0;
    std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::TempoScripting::Empty>> AsyncDeactivateComponent(::grpc::ClientContext* context, const ::TempoWorld::DeactivateComponentRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::TempoScripting::Empty>>(AsyncDeactivateComponentRaw(context, request, cq));
    }
    std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::TempoScripting::Empty>> PrepareAsyncDeactivateComponent(::grpc::ClientContext* context, const ::TempoWorld::DeactivateComponentRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::TempoScripting::Empty>>(PrepareAsyncDeactivateComponentRaw(context, request, cq));
    }
    virtual ::grpc::Status GetAllActors(::grpc::ClientContext* context, const ::TempoWorld::GetAllActorsRequest& request, ::TempoWorld::GetAllActorsResponse* response) = 0;
    std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::TempoWorld::GetAllActorsResponse>> AsyncGetAllActors(::grpc::ClientContext* context, const ::TempoWorld::GetAllActorsRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::TempoWorld::GetAllActorsResponse>>(AsyncGetAllActorsRaw(context, request, cq));
    }
    std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::TempoWorld::GetAllActorsResponse>> PrepareAsyncGetAllActors(::grpc::ClientContext* context, const ::TempoWorld::GetAllActorsRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::TempoWorld::GetAllActorsResponse>>(PrepareAsyncGetAllActorsRaw(context, request, cq));
    }
    virtual ::grpc::Status GetAllComponents(::grpc::ClientContext* context, const ::TempoWorld::GetAllComponentsRequest& request, ::TempoWorld::GetAllComponentsResponse* response) = 0;
    std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::TempoWorld::GetAllComponentsResponse>> AsyncGetAllComponents(::grpc::ClientContext* context, const ::TempoWorld::GetAllComponentsRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::TempoWorld::GetAllComponentsResponse>>(AsyncGetAllComponentsRaw(context, request, cq));
    }
    std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::TempoWorld::GetAllComponentsResponse>> PrepareAsyncGetAllComponents(::grpc::ClientContext* context, const ::TempoWorld::GetAllComponentsRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::TempoWorld::GetAllComponentsResponse>>(PrepareAsyncGetAllComponentsRaw(context, request, cq));
    }
    virtual ::grpc::Status GetActorProperties(::grpc::ClientContext* context, const ::TempoWorld::GetActorPropertiesRequest& request, ::TempoWorld::GetPropertiesResponse* response) = 0;
    std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::TempoWorld::GetPropertiesResponse>> AsyncGetActorProperties(::grpc::ClientContext* context, const ::TempoWorld::GetActorPropertiesRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::TempoWorld::GetPropertiesResponse>>(AsyncGetActorPropertiesRaw(context, request, cq));
    }
    std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::TempoWorld::GetPropertiesResponse>> PrepareAsyncGetActorProperties(::grpc::ClientContext* context, const ::TempoWorld::GetActorPropertiesRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::TempoWorld::GetPropertiesResponse>>(PrepareAsyncGetActorPropertiesRaw(context, request, cq));
    }
    virtual ::grpc::Status GetComponentProperties(::grpc::ClientContext* context, const ::TempoWorld::GetComponentPropertiesRequest& request, ::TempoWorld::GetPropertiesResponse* response) = 0;
    std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::TempoWorld::GetPropertiesResponse>> AsyncGetComponentProperties(::grpc::ClientContext* context, const ::TempoWorld::GetComponentPropertiesRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::TempoWorld::GetPropertiesResponse>>(AsyncGetComponentPropertiesRaw(context, request, cq));
    }
    std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::TempoWorld::GetPropertiesResponse>> PrepareAsyncGetComponentProperties(::grpc::ClientContext* context, const ::TempoWorld::GetComponentPropertiesRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::TempoWorld::GetPropertiesResponse>>(PrepareAsyncGetComponentPropertiesRaw(context, request, cq));
    }
    virtual ::grpc::Status SetBoolProperty(::grpc::ClientContext* context, const ::TempoWorld::SetBoolPropertyRequest& request, ::TempoScripting::Empty* response) = 0;
    std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::TempoScripting::Empty>> AsyncSetBoolProperty(::grpc::ClientContext* context, const ::TempoWorld::SetBoolPropertyRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::TempoScripting::Empty>>(AsyncSetBoolPropertyRaw(context, request, cq));
    }
    std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::TempoScripting::Empty>> PrepareAsyncSetBoolProperty(::grpc::ClientContext* context, const ::TempoWorld::SetBoolPropertyRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::TempoScripting::Empty>>(PrepareAsyncSetBoolPropertyRaw(context, request, cq));
    }
    virtual ::grpc::Status SetStringProperty(::grpc::ClientContext* context, const ::TempoWorld::SetStringPropertyRequest& request, ::TempoScripting::Empty* response) = 0;
    std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::TempoScripting::Empty>> AsyncSetStringProperty(::grpc::ClientContext* context, const ::TempoWorld::SetStringPropertyRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::TempoScripting::Empty>>(AsyncSetStringPropertyRaw(context, request, cq));
    }
    std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::TempoScripting::Empty>> PrepareAsyncSetStringProperty(::grpc::ClientContext* context, const ::TempoWorld::SetStringPropertyRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::TempoScripting::Empty>>(PrepareAsyncSetStringPropertyRaw(context, request, cq));
    }
    virtual ::grpc::Status SetEnumProperty(::grpc::ClientContext* context, const ::TempoWorld::SetEnumPropertyRequest& request, ::TempoScripting::Empty* response) = 0;
    std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::TempoScripting::Empty>> AsyncSetEnumProperty(::grpc::ClientContext* context, const ::TempoWorld::SetEnumPropertyRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::TempoScripting::Empty>>(AsyncSetEnumPropertyRaw(context, request, cq));
    }
    std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::TempoScripting::Empty>> PrepareAsyncSetEnumProperty(::grpc::ClientContext* context, const ::TempoWorld::SetEnumPropertyRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::TempoScripting::Empty>>(PrepareAsyncSetEnumPropertyRaw(context, request, cq));
    }
    virtual ::grpc::Status SetIntProperty(::grpc::ClientContext* context, const ::TempoWorld::SetIntPropertyRequest& request, ::TempoScripting::Empty* response) = 0;
    std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::TempoScripting::Empty>> AsyncSetIntProperty(::grpc::ClientContext* context, const ::TempoWorld::SetIntPropertyRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::TempoScripting::Empty>>(AsyncSetIntPropertyRaw(context, request, cq));
    }
    std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::TempoScripting::Empty>> PrepareAsyncSetIntProperty(::grpc::ClientContext* context, const ::TempoWorld::SetIntPropertyRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::TempoScripting::Empty>>(PrepareAsyncSetIntPropertyRaw(context, request, cq));
    }
    virtual ::grpc::Status SetFloatProperty(::grpc::ClientContext* context, const ::TempoWorld::SetFloatPropertyRequest& request, ::TempoScripting::Empty* response) = 0;
    std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::TempoScripting::Empty>> AsyncSetFloatProperty(::grpc::ClientContext* context, const ::TempoWorld::SetFloatPropertyRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::TempoScripting::Empty>>(AsyncSetFloatPropertyRaw(context, request, cq));
    }
    std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::TempoScripting::Empty>> PrepareAsyncSetFloatProperty(::grpc::ClientContext* context, const ::TempoWorld::SetFloatPropertyRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::TempoScripting::Empty>>(PrepareAsyncSetFloatPropertyRaw(context, request, cq));
    }
    virtual ::grpc::Status SetVectorProperty(::grpc::ClientContext* context, const ::TempoWorld::SetVectorPropertyRequest& request, ::TempoScripting::Empty* response) = 0;
    std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::TempoScripting::Empty>> AsyncSetVectorProperty(::grpc::ClientContext* context, const ::TempoWorld::SetVectorPropertyRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::TempoScripting::Empty>>(AsyncSetVectorPropertyRaw(context, request, cq));
    }
    std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::TempoScripting::Empty>> PrepareAsyncSetVectorProperty(::grpc::ClientContext* context, const ::TempoWorld::SetVectorPropertyRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::TempoScripting::Empty>>(PrepareAsyncSetVectorPropertyRaw(context, request, cq));
    }
    virtual ::grpc::Status SetRotatorProperty(::grpc::ClientContext* context, const ::TempoWorld::SetRotatorPropertyRequest& request, ::TempoScripting::Empty* response) = 0;
    std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::TempoScripting::Empty>> AsyncSetRotatorProperty(::grpc::ClientContext* context, const ::TempoWorld::SetRotatorPropertyRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::TempoScripting::Empty>>(AsyncSetRotatorPropertyRaw(context, request, cq));
    }
    std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::TempoScripting::Empty>> PrepareAsyncSetRotatorProperty(::grpc::ClientContext* context, const ::TempoWorld::SetRotatorPropertyRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::TempoScripting::Empty>>(PrepareAsyncSetRotatorPropertyRaw(context, request, cq));
    }
    virtual ::grpc::Status SetColorProperty(::grpc::ClientContext* context, const ::TempoWorld::SetColorPropertyRequest& request, ::TempoScripting::Empty* response) = 0;
    std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::TempoScripting::Empty>> AsyncSetColorProperty(::grpc::ClientContext* context, const ::TempoWorld::SetColorPropertyRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::TempoScripting::Empty>>(AsyncSetColorPropertyRaw(context, request, cq));
    }
    std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::TempoScripting::Empty>> PrepareAsyncSetColorProperty(::grpc::ClientContext* context, const ::TempoWorld::SetColorPropertyRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::TempoScripting::Empty>>(PrepareAsyncSetColorPropertyRaw(context, request, cq));
    }
    virtual ::grpc::Status SetClassProperty(::grpc::ClientContext* context, const ::TempoWorld::SetClassPropertyRequest& request, ::TempoScripting::Empty* response) = 0;
    std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::TempoScripting::Empty>> AsyncSetClassProperty(::grpc::ClientContext* context, const ::TempoWorld::SetClassPropertyRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::TempoScripting::Empty>>(AsyncSetClassPropertyRaw(context, request, cq));
    }
    std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::TempoScripting::Empty>> PrepareAsyncSetClassProperty(::grpc::ClientContext* context, const ::TempoWorld::SetClassPropertyRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::TempoScripting::Empty>>(PrepareAsyncSetClassPropertyRaw(context, request, cq));
    }
    virtual ::grpc::Status SetAssetProperty(::grpc::ClientContext* context, const ::TempoWorld::SetAssetPropertyRequest& request, ::TempoScripting::Empty* response) = 0;
    std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::TempoScripting::Empty>> AsyncSetAssetProperty(::grpc::ClientContext* context, const ::TempoWorld::SetAssetPropertyRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::TempoScripting::Empty>>(AsyncSetAssetPropertyRaw(context, request, cq));
    }
    std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::TempoScripting::Empty>> PrepareAsyncSetAssetProperty(::grpc::ClientContext* context, const ::TempoWorld::SetAssetPropertyRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::TempoScripting::Empty>>(PrepareAsyncSetAssetPropertyRaw(context, request, cq));
    }
    virtual ::grpc::Status SetActorProperty(::grpc::ClientContext* context, const ::TempoWorld::SetActorPropertyRequest& request, ::TempoScripting::Empty* response) = 0;
    std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::TempoScripting::Empty>> AsyncSetActorProperty(::grpc::ClientContext* context, const ::TempoWorld::SetActorPropertyRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::TempoScripting::Empty>>(AsyncSetActorPropertyRaw(context, request, cq));
    }
    std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::TempoScripting::Empty>> PrepareAsyncSetActorProperty(::grpc::ClientContext* context, const ::TempoWorld::SetActorPropertyRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::TempoScripting::Empty>>(PrepareAsyncSetActorPropertyRaw(context, request, cq));
    }
    virtual ::grpc::Status SetComponentProperty(::grpc::ClientContext* context, const ::TempoWorld::SetComponentPropertyRequest& request, ::TempoScripting::Empty* response) = 0;
    std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::TempoScripting::Empty>> AsyncSetComponentProperty(::grpc::ClientContext* context, const ::TempoWorld::SetComponentPropertyRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::TempoScripting::Empty>>(AsyncSetComponentPropertyRaw(context, request, cq));
    }
    std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::TempoScripting::Empty>> PrepareAsyncSetComponentProperty(::grpc::ClientContext* context, const ::TempoWorld::SetComponentPropertyRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::TempoScripting::Empty>>(PrepareAsyncSetComponentPropertyRaw(context, request, cq));
    }
    virtual ::grpc::Status SetBoolArrayProperty(::grpc::ClientContext* context, const ::TempoWorld::SetBoolArrayPropertyRequest& request, ::TempoScripting::Empty* response) = 0;
    std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::TempoScripting::Empty>> AsyncSetBoolArrayProperty(::grpc::ClientContext* context, const ::TempoWorld::SetBoolArrayPropertyRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::TempoScripting::Empty>>(AsyncSetBoolArrayPropertyRaw(context, request, cq));
    }
    std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::TempoScripting::Empty>> PrepareAsyncSetBoolArrayProperty(::grpc::ClientContext* context, const ::TempoWorld::SetBoolArrayPropertyRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::TempoScripting::Empty>>(PrepareAsyncSetBoolArrayPropertyRaw(context, request, cq));
    }
    virtual ::grpc::Status SetStringArrayProperty(::grpc::ClientContext* context, const ::TempoWorld::SetStringArrayPropertyRequest& request, ::TempoScripting::Empty* response) = 0;
    std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::TempoScripting::Empty>> AsyncSetStringArrayProperty(::grpc::ClientContext* context, const ::TempoWorld::SetStringArrayPropertyRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::TempoScripting::Empty>>(AsyncSetStringArrayPropertyRaw(context, request, cq));
    }
    std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::TempoScripting::Empty>> PrepareAsyncSetStringArrayProperty(::grpc::ClientContext* context, const ::TempoWorld::SetStringArrayPropertyRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::TempoScripting::Empty>>(PrepareAsyncSetStringArrayPropertyRaw(context, request, cq));
    }
    virtual ::grpc::Status SetEnumArrayProperty(::grpc::ClientContext* context, const ::TempoWorld::SetEnumArrayPropertyRequest& request, ::TempoScripting::Empty* response) = 0;
    std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::TempoScripting::Empty>> AsyncSetEnumArrayProperty(::grpc::ClientContext* context, const ::TempoWorld::SetEnumArrayPropertyRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::TempoScripting::Empty>>(AsyncSetEnumArrayPropertyRaw(context, request, cq));
    }
    std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::TempoScripting::Empty>> PrepareAsyncSetEnumArrayProperty(::grpc::ClientContext* context, const ::TempoWorld::SetEnumArrayPropertyRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::TempoScripting::Empty>>(PrepareAsyncSetEnumArrayPropertyRaw(context, request, cq));
    }
    virtual ::grpc::Status SetIntArrayProperty(::grpc::ClientContext* context, const ::TempoWorld::SetIntArrayPropertyRequest& request, ::TempoScripting::Empty* response) = 0;
    std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::TempoScripting::Empty>> AsyncSetIntArrayProperty(::grpc::ClientContext* context, const ::TempoWorld::SetIntArrayPropertyRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::TempoScripting::Empty>>(AsyncSetIntArrayPropertyRaw(context, request, cq));
    }
    std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::TempoScripting::Empty>> PrepareAsyncSetIntArrayProperty(::grpc::ClientContext* context, const ::TempoWorld::SetIntArrayPropertyRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::TempoScripting::Empty>>(PrepareAsyncSetIntArrayPropertyRaw(context, request, cq));
    }
    virtual ::grpc::Status SetFloatArrayProperty(::grpc::ClientContext* context, const ::TempoWorld::SetFloatArrayPropertyRequest& request, ::TempoScripting::Empty* response) = 0;
    std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::TempoScripting::Empty>> AsyncSetFloatArrayProperty(::grpc::ClientContext* context, const ::TempoWorld::SetFloatArrayPropertyRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::TempoScripting::Empty>>(AsyncSetFloatArrayPropertyRaw(context, request, cq));
    }
    std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::TempoScripting::Empty>> PrepareAsyncSetFloatArrayProperty(::grpc::ClientContext* context, const ::TempoWorld::SetFloatArrayPropertyRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::TempoScripting::Empty>>(PrepareAsyncSetFloatArrayPropertyRaw(context, request, cq));
    }
    virtual ::grpc::Status SetClassArrayProperty(::grpc::ClientContext* context, const ::TempoWorld::SetClassArrayPropertyRequest& request, ::TempoScripting::Empty* response) = 0;
    std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::TempoScripting::Empty>> AsyncSetClassArrayProperty(::grpc::ClientContext* context, const ::TempoWorld::SetClassArrayPropertyRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::TempoScripting::Empty>>(AsyncSetClassArrayPropertyRaw(context, request, cq));
    }
    std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::TempoScripting::Empty>> PrepareAsyncSetClassArrayProperty(::grpc::ClientContext* context, const ::TempoWorld::SetClassArrayPropertyRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::TempoScripting::Empty>>(PrepareAsyncSetClassArrayPropertyRaw(context, request, cq));
    }
    virtual ::grpc::Status SetAssetArrayProperty(::grpc::ClientContext* context, const ::TempoWorld::SetAssetArrayPropertyRequest& request, ::TempoScripting::Empty* response) = 0;
    std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::TempoScripting::Empty>> AsyncSetAssetArrayProperty(::grpc::ClientContext* context, const ::TempoWorld::SetAssetArrayPropertyRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::TempoScripting::Empty>>(AsyncSetAssetArrayPropertyRaw(context, request, cq));
    }
    std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::TempoScripting::Empty>> PrepareAsyncSetAssetArrayProperty(::grpc::ClientContext* context, const ::TempoWorld::SetAssetArrayPropertyRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::TempoScripting::Empty>>(PrepareAsyncSetAssetArrayPropertyRaw(context, request, cq));
    }
    virtual ::grpc::Status SetActorArrayProperty(::grpc::ClientContext* context, const ::TempoWorld::SetActorArrayPropertyRequest& request, ::TempoScripting::Empty* response) = 0;
    std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::TempoScripting::Empty>> AsyncSetActorArrayProperty(::grpc::ClientContext* context, const ::TempoWorld::SetActorArrayPropertyRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::TempoScripting::Empty>>(AsyncSetActorArrayPropertyRaw(context, request, cq));
    }
    std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::TempoScripting::Empty>> PrepareAsyncSetActorArrayProperty(::grpc::ClientContext* context, const ::TempoWorld::SetActorArrayPropertyRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::TempoScripting::Empty>>(PrepareAsyncSetActorArrayPropertyRaw(context, request, cq));
    }
    virtual ::grpc::Status SetComponentArrayProperty(::grpc::ClientContext* context, const ::TempoWorld::SetComponentArrayPropertyRequest& request, ::TempoScripting::Empty* response) = 0;
    std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::TempoScripting::Empty>> AsyncSetComponentArrayProperty(::grpc::ClientContext* context, const ::TempoWorld::SetComponentArrayPropertyRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::TempoScripting::Empty>>(AsyncSetComponentArrayPropertyRaw(context, request, cq));
    }
    std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::TempoScripting::Empty>> PrepareAsyncSetComponentArrayProperty(::grpc::ClientContext* context, const ::TempoWorld::SetComponentArrayPropertyRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::TempoScripting::Empty>>(PrepareAsyncSetComponentArrayPropertyRaw(context, request, cq));
    }
    virtual ::grpc::Status CallFunction(::grpc::ClientContext* context, const ::TempoWorld::CallFunctionRequest& request, ::TempoScripting::Empty* response) = 0;
    std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::TempoScripting::Empty>> AsyncCallFunction(::grpc::ClientContext* context, const ::TempoWorld::CallFunctionRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::TempoScripting::Empty>>(AsyncCallFunctionRaw(context, request, cq));
    }
    std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::TempoScripting::Empty>> PrepareAsyncCallFunction(::grpc::ClientContext* context, const ::TempoWorld::CallFunctionRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::TempoScripting::Empty>>(PrepareAsyncCallFunctionRaw(context, request, cq));
    }
    class async_interface {
     public:
      virtual ~async_interface() {}
      virtual void SpawnActor(::grpc::ClientContext* context, const ::TempoWorld::SpawnActorRequest* request, ::TempoWorld::SpawnActorResponse* response, std::function<void(::grpc::Status)>) = 0;
      virtual void SpawnActor(::grpc::ClientContext* context, const ::TempoWorld::SpawnActorRequest* request, ::TempoWorld::SpawnActorResponse* response, ::grpc::ClientUnaryReactor* reactor) = 0;
      virtual void FinishSpawningActor(::grpc::ClientContext* context, const ::TempoWorld::FinishSpawningActorRequest* request, ::TempoWorld::FinishSpawningActorResponse* response, std::function<void(::grpc::Status)>) = 0;
      virtual void FinishSpawningActor(::grpc::ClientContext* context, const ::TempoWorld::FinishSpawningActorRequest* request, ::TempoWorld::FinishSpawningActorResponse* response, ::grpc::ClientUnaryReactor* reactor) = 0;
      virtual void DestroyActor(::grpc::ClientContext* context, const ::TempoWorld::DestroyActorRequest* request, ::TempoScripting::Empty* response, std::function<void(::grpc::Status)>) = 0;
      virtual void DestroyActor(::grpc::ClientContext* context, const ::TempoWorld::DestroyActorRequest* request, ::TempoScripting::Empty* response, ::grpc::ClientUnaryReactor* reactor) = 0;
      virtual void AddComponent(::grpc::ClientContext* context, const ::TempoWorld::AddComponentRequest* request, ::TempoWorld::AddComponentResponse* response, std::function<void(::grpc::Status)>) = 0;
      virtual void AddComponent(::grpc::ClientContext* context, const ::TempoWorld::AddComponentRequest* request, ::TempoWorld::AddComponentResponse* response, ::grpc::ClientUnaryReactor* reactor) = 0;
      virtual void DestroyComponent(::grpc::ClientContext* context, const ::TempoWorld::DestroyComponentRequest* request, ::TempoScripting::Empty* response, std::function<void(::grpc::Status)>) = 0;
      virtual void DestroyComponent(::grpc::ClientContext* context, const ::TempoWorld::DestroyComponentRequest* request, ::TempoScripting::Empty* response, ::grpc::ClientUnaryReactor* reactor) = 0;
      virtual void SetActorTransform(::grpc::ClientContext* context, const ::TempoWorld::SetActorTransformRequest* request, ::TempoScripting::Empty* response, std::function<void(::grpc::Status)>) = 0;
      virtual void SetActorTransform(::grpc::ClientContext* context, const ::TempoWorld::SetActorTransformRequest* request, ::TempoScripting::Empty* response, ::grpc::ClientUnaryReactor* reactor) = 0;
      virtual void SetComponentTransform(::grpc::ClientContext* context, const ::TempoWorld::SetComponentTransformRequest* request, ::TempoScripting::Empty* response, std::function<void(::grpc::Status)>) = 0;
      virtual void SetComponentTransform(::grpc::ClientContext* context, const ::TempoWorld::SetComponentTransformRequest* request, ::TempoScripting::Empty* response, ::grpc::ClientUnaryReactor* reactor) = 0;
      virtual void ActivateComponent(::grpc::ClientContext* context, const ::TempoWorld::ActivateComponentRequest* request, ::TempoScripting::Empty* response, std::function<void(::grpc::Status)>) = 0;
      virtual void ActivateComponent(::grpc::ClientContext* context, const ::TempoWorld::ActivateComponentRequest* request, ::TempoScripting::Empty* response, ::grpc::ClientUnaryReactor* reactor) = 0;
      virtual void DeactivateComponent(::grpc::ClientContext* context, const ::TempoWorld::DeactivateComponentRequest* request, ::TempoScripting::Empty* response, std::function<void(::grpc::Status)>) = 0;
      virtual void DeactivateComponent(::grpc::ClientContext* context, const ::TempoWorld::DeactivateComponentRequest* request, ::TempoScripting::Empty* response, ::grpc::ClientUnaryReactor* reactor) = 0;
      virtual void GetAllActors(::grpc::ClientContext* context, const ::TempoWorld::GetAllActorsRequest* request, ::TempoWorld::GetAllActorsResponse* response, std::function<void(::grpc::Status)>) = 0;
      virtual void GetAllActors(::grpc::ClientContext* context, const ::TempoWorld::GetAllActorsRequest* request, ::TempoWorld::GetAllActorsResponse* response, ::grpc::ClientUnaryReactor* reactor) = 0;
      virtual void GetAllComponents(::grpc::ClientContext* context, const ::TempoWorld::GetAllComponentsRequest* request, ::TempoWorld::GetAllComponentsResponse* response, std::function<void(::grpc::Status)>) = 0;
      virtual void GetAllComponents(::grpc::ClientContext* context, const ::TempoWorld::GetAllComponentsRequest* request, ::TempoWorld::GetAllComponentsResponse* response, ::grpc::ClientUnaryReactor* reactor) = 0;
      virtual void GetActorProperties(::grpc::ClientContext* context, const ::TempoWorld::GetActorPropertiesRequest* request, ::TempoWorld::GetPropertiesResponse* response, std::function<void(::grpc::Status)>) = 0;
      virtual void GetActorProperties(::grpc::ClientContext* context, const ::TempoWorld::GetActorPropertiesRequest* request, ::TempoWorld::GetPropertiesResponse* response, ::grpc::ClientUnaryReactor* reactor) = 0;
      virtual void GetComponentProperties(::grpc::ClientContext* context, const ::TempoWorld::GetComponentPropertiesRequest* request, ::TempoWorld::GetPropertiesResponse* response, std::function<void(::grpc::Status)>) = 0;
      virtual void GetComponentProperties(::grpc::ClientContext* context, const ::TempoWorld::GetComponentPropertiesRequest* request, ::TempoWorld::GetPropertiesResponse* response, ::grpc::ClientUnaryReactor* reactor) = 0;
      virtual void SetBoolProperty(::grpc::ClientContext* context, const ::TempoWorld::SetBoolPropertyRequest* request, ::TempoScripting::Empty* response, std::function<void(::grpc::Status)>) = 0;
      virtual void SetBoolProperty(::grpc::ClientContext* context, const ::TempoWorld::SetBoolPropertyRequest* request, ::TempoScripting::Empty* response, ::grpc::ClientUnaryReactor* reactor) = 0;
      virtual void SetStringProperty(::grpc::ClientContext* context, const ::TempoWorld::SetStringPropertyRequest* request, ::TempoScripting::Empty* response, std::function<void(::grpc::Status)>) = 0;
      virtual void SetStringProperty(::grpc::ClientContext* context, const ::TempoWorld::SetStringPropertyRequest* request, ::TempoScripting::Empty* response, ::grpc::ClientUnaryReactor* reactor) = 0;
      virtual void SetEnumProperty(::grpc::ClientContext* context, const ::TempoWorld::SetEnumPropertyRequest* request, ::TempoScripting::Empty* response, std::function<void(::grpc::Status)>) = 0;
      virtual void SetEnumProperty(::grpc::ClientContext* context, const ::TempoWorld::SetEnumPropertyRequest* request, ::TempoScripting::Empty* response, ::grpc::ClientUnaryReactor* reactor) = 0;
      virtual void SetIntProperty(::grpc::ClientContext* context, const ::TempoWorld::SetIntPropertyRequest* request, ::TempoScripting::Empty* response, std::function<void(::grpc::Status)>) = 0;
      virtual void SetIntProperty(::grpc::ClientContext* context, const ::TempoWorld::SetIntPropertyRequest* request, ::TempoScripting::Empty* response, ::grpc::ClientUnaryReactor* reactor) = 0;
      virtual void SetFloatProperty(::grpc::ClientContext* context, const ::TempoWorld::SetFloatPropertyRequest* request, ::TempoScripting::Empty* response, std::function<void(::grpc::Status)>) = 0;
      virtual void SetFloatProperty(::grpc::ClientContext* context, const ::TempoWorld::SetFloatPropertyRequest* request, ::TempoScripting::Empty* response, ::grpc::ClientUnaryReactor* reactor) = 0;
      virtual void SetVectorProperty(::grpc::ClientContext* context, const ::TempoWorld::SetVectorPropertyRequest* request, ::TempoScripting::Empty* response, std::function<void(::grpc::Status)>) = 0;
      virtual void SetVectorProperty(::grpc::ClientContext* context, const ::TempoWorld::SetVectorPropertyRequest* request, ::TempoScripting::Empty* response, ::grpc::ClientUnaryReactor* reactor) = 0;
      virtual void SetRotatorProperty(::grpc::ClientContext* context, const ::TempoWorld::SetRotatorPropertyRequest* request, ::TempoScripting::Empty* response, std::function<void(::grpc::Status)>) = 0;
      virtual void SetRotatorProperty(::grpc::ClientContext* context, const ::TempoWorld::SetRotatorPropertyRequest* request, ::TempoScripting::Empty* response, ::grpc::ClientUnaryReactor* reactor) = 0;
      virtual void SetColorProperty(::grpc::ClientContext* context, const ::TempoWorld::SetColorPropertyRequest* request, ::TempoScripting::Empty* response, std::function<void(::grpc::Status)>) = 0;
      virtual void SetColorProperty(::grpc::ClientContext* context, const ::TempoWorld::SetColorPropertyRequest* request, ::TempoScripting::Empty* response, ::grpc::ClientUnaryReactor* reactor) = 0;
      virtual void SetClassProperty(::grpc::ClientContext* context, const ::TempoWorld::SetClassPropertyRequest* request, ::TempoScripting::Empty* response, std::function<void(::grpc::Status)>) = 0;
      virtual void SetClassProperty(::grpc::ClientContext* context, const ::TempoWorld::SetClassPropertyRequest* request, ::TempoScripting::Empty* response, ::grpc::ClientUnaryReactor* reactor) = 0;
      virtual void SetAssetProperty(::grpc::ClientContext* context, const ::TempoWorld::SetAssetPropertyRequest* request, ::TempoScripting::Empty* response, std::function<void(::grpc::Status)>) = 0;
      virtual void SetAssetProperty(::grpc::ClientContext* context, const ::TempoWorld::SetAssetPropertyRequest* request, ::TempoScripting::Empty* response, ::grpc::ClientUnaryReactor* reactor) = 0;
      virtual void SetActorProperty(::grpc::ClientContext* context, const ::TempoWorld::SetActorPropertyRequest* request, ::TempoScripting::Empty* response, std::function<void(::grpc::Status)>) = 0;
      virtual void SetActorProperty(::grpc::ClientContext* context, const ::TempoWorld::SetActorPropertyRequest* request, ::TempoScripting::Empty* response, ::grpc::ClientUnaryReactor* reactor) = 0;
      virtual void SetComponentProperty(::grpc::ClientContext* context, const ::TempoWorld::SetComponentPropertyRequest* request, ::TempoScripting::Empty* response, std::function<void(::grpc::Status)>) = 0;
      virtual void SetComponentProperty(::grpc::ClientContext* context, const ::TempoWorld::SetComponentPropertyRequest* request, ::TempoScripting::Empty* response, ::grpc::ClientUnaryReactor* reactor) = 0;
      virtual void SetBoolArrayProperty(::grpc::ClientContext* context, const ::TempoWorld::SetBoolArrayPropertyRequest* request, ::TempoScripting::Empty* response, std::function<void(::grpc::Status)>) = 0;
      virtual void SetBoolArrayProperty(::grpc::ClientContext* context, const ::TempoWorld::SetBoolArrayPropertyRequest* request, ::TempoScripting::Empty* response, ::grpc::ClientUnaryReactor* reactor) = 0;
      virtual void SetStringArrayProperty(::grpc::ClientContext* context, const ::TempoWorld::SetStringArrayPropertyRequest* request, ::TempoScripting::Empty* response, std::function<void(::grpc::Status)>) = 0;
      virtual void SetStringArrayProperty(::grpc::ClientContext* context, const ::TempoWorld::SetStringArrayPropertyRequest* request, ::TempoScripting::Empty* response, ::grpc::ClientUnaryReactor* reactor) = 0;
      virtual void SetEnumArrayProperty(::grpc::ClientContext* context, const ::TempoWorld::SetEnumArrayPropertyRequest* request, ::TempoScripting::Empty* response, std::function<void(::grpc::Status)>) = 0;
      virtual void SetEnumArrayProperty(::grpc::ClientContext* context, const ::TempoWorld::SetEnumArrayPropertyRequest* request, ::TempoScripting::Empty* response, ::grpc::ClientUnaryReactor* reactor) = 0;
      virtual void SetIntArrayProperty(::grpc::ClientContext* context, const ::TempoWorld::SetIntArrayPropertyRequest* request, ::TempoScripting::Empty* response, std::function<void(::grpc::Status)>) = 0;
      virtual void SetIntArrayProperty(::grpc::ClientContext* context, const ::TempoWorld::SetIntArrayPropertyRequest* request, ::TempoScripting::Empty* response, ::grpc::ClientUnaryReactor* reactor) = 0;
      virtual void SetFloatArrayProperty(::grpc::ClientContext* context, const ::TempoWorld::SetFloatArrayPropertyRequest* request, ::TempoScripting::Empty* response, std::function<void(::grpc::Status)>) = 0;
      virtual void SetFloatArrayProperty(::grpc::ClientContext* context, const ::TempoWorld::SetFloatArrayPropertyRequest* request, ::TempoScripting::Empty* response, ::grpc::ClientUnaryReactor* reactor) = 0;
      virtual void SetClassArrayProperty(::grpc::ClientContext* context, const ::TempoWorld::SetClassArrayPropertyRequest* request, ::TempoScripting::Empty* response, std::function<void(::grpc::Status)>) = 0;
      virtual void SetClassArrayProperty(::grpc::ClientContext* context, const ::TempoWorld::SetClassArrayPropertyRequest* request, ::TempoScripting::Empty* response, ::grpc::ClientUnaryReactor* reactor) = 0;
      virtual void SetAssetArrayProperty(::grpc::ClientContext* context, const ::TempoWorld::SetAssetArrayPropertyRequest* request, ::TempoScripting::Empty* response, std::function<void(::grpc::Status)>) = 0;
      virtual void SetAssetArrayProperty(::grpc::ClientContext* context, const ::TempoWorld::SetAssetArrayPropertyRequest* request, ::TempoScripting::Empty* response, ::grpc::ClientUnaryReactor* reactor) = 0;
      virtual void SetActorArrayProperty(::grpc::ClientContext* context, const ::TempoWorld::SetActorArrayPropertyRequest* request, ::TempoScripting::Empty* response, std::function<void(::grpc::Status)>) = 0;
      virtual void SetActorArrayProperty(::grpc::ClientContext* context, const ::TempoWorld::SetActorArrayPropertyRequest* request, ::TempoScripting::Empty* response, ::grpc::ClientUnaryReactor* reactor) = 0;
      virtual void SetComponentArrayProperty(::grpc::ClientContext* context, const ::TempoWorld::SetComponentArrayPropertyRequest* request, ::TempoScripting::Empty* response, std::function<void(::grpc::Status)>) = 0;
      virtual void SetComponentArrayProperty(::grpc::ClientContext* context, const ::TempoWorld::SetComponentArrayPropertyRequest* request, ::TempoScripting::Empty* response, ::grpc::ClientUnaryReactor* reactor) = 0;
      virtual void CallFunction(::grpc::ClientContext* context, const ::TempoWorld::CallFunctionRequest* request, ::TempoScripting::Empty* response, std::function<void(::grpc::Status)>) = 0;
      virtual void CallFunction(::grpc::ClientContext* context, const ::TempoWorld::CallFunctionRequest* request, ::TempoScripting::Empty* response, ::grpc::ClientUnaryReactor* reactor) = 0;
    };
    typedef class async_interface experimental_async_interface;
    virtual class async_interface* async() { return nullptr; }
    class async_interface* experimental_async() { return async(); }
   private:
    virtual ::grpc::ClientAsyncResponseReaderInterface< ::TempoWorld::SpawnActorResponse>* AsyncSpawnActorRaw(::grpc::ClientContext* context, const ::TempoWorld::SpawnActorRequest& request, ::grpc::CompletionQueue* cq) = 0;
    virtual ::grpc::ClientAsyncResponseReaderInterface< ::TempoWorld::SpawnActorResponse>* PrepareAsyncSpawnActorRaw(::grpc::ClientContext* context, const ::TempoWorld::SpawnActorRequest& request, ::grpc::CompletionQueue* cq) = 0;
    virtual ::grpc::ClientAsyncResponseReaderInterface< ::TempoWorld::FinishSpawningActorResponse>* AsyncFinishSpawningActorRaw(::grpc::ClientContext* context, const ::TempoWorld::FinishSpawningActorRequest& request, ::grpc::CompletionQueue* cq) = 0;
    virtual ::grpc::ClientAsyncResponseReaderInterface< ::TempoWorld::FinishSpawningActorResponse>* PrepareAsyncFinishSpawningActorRaw(::grpc::ClientContext* context, const ::TempoWorld::FinishSpawningActorRequest& request, ::grpc::CompletionQueue* cq) = 0;
    virtual ::grpc::ClientAsyncResponseReaderInterface< ::TempoScripting::Empty>* AsyncDestroyActorRaw(::grpc::ClientContext* context, const ::TempoWorld::DestroyActorRequest& request, ::grpc::CompletionQueue* cq) = 0;
    virtual ::grpc::ClientAsyncResponseReaderInterface< ::TempoScripting::Empty>* PrepareAsyncDestroyActorRaw(::grpc::ClientContext* context, const ::TempoWorld::DestroyActorRequest& request, ::grpc::CompletionQueue* cq) = 0;
    virtual ::grpc::ClientAsyncResponseReaderInterface< ::TempoWorld::AddComponentResponse>* AsyncAddComponentRaw(::grpc::ClientContext* context, const ::TempoWorld::AddComponentRequest& request, ::grpc::CompletionQueue* cq) = 0;
    virtual ::grpc::ClientAsyncResponseReaderInterface< ::TempoWorld::AddComponentResponse>* PrepareAsyncAddComponentRaw(::grpc::ClientContext* context, const ::TempoWorld::AddComponentRequest& request, ::grpc::CompletionQueue* cq) = 0;
    virtual ::grpc::ClientAsyncResponseReaderInterface< ::TempoScripting::Empty>* AsyncDestroyComponentRaw(::grpc::ClientContext* context, const ::TempoWorld::DestroyComponentRequest& request, ::grpc::CompletionQueue* cq) = 0;
    virtual ::grpc::ClientAsyncResponseReaderInterface< ::TempoScripting::Empty>* PrepareAsyncDestroyComponentRaw(::grpc::ClientContext* context, const ::TempoWorld::DestroyComponentRequest& request, ::grpc::CompletionQueue* cq) = 0;
    virtual ::grpc::ClientAsyncResponseReaderInterface< ::TempoScripting::Empty>* AsyncSetActorTransformRaw(::grpc::ClientContext* context, const ::TempoWorld::SetActorTransformRequest& request, ::grpc::CompletionQueue* cq) = 0;
    virtual ::grpc::ClientAsyncResponseReaderInterface< ::TempoScripting::Empty>* PrepareAsyncSetActorTransformRaw(::grpc::ClientContext* context, const ::TempoWorld::SetActorTransformRequest& request, ::grpc::CompletionQueue* cq) = 0;
    virtual ::grpc::ClientAsyncResponseReaderInterface< ::TempoScripting::Empty>* AsyncSetComponentTransformRaw(::grpc::ClientContext* context, const ::TempoWorld::SetComponentTransformRequest& request, ::grpc::CompletionQueue* cq) = 0;
    virtual ::grpc::ClientAsyncResponseReaderInterface< ::TempoScripting::Empty>* PrepareAsyncSetComponentTransformRaw(::grpc::ClientContext* context, const ::TempoWorld::SetComponentTransformRequest& request, ::grpc::CompletionQueue* cq) = 0;
    virtual ::grpc::ClientAsyncResponseReaderInterface< ::TempoScripting::Empty>* AsyncActivateComponentRaw(::grpc::ClientContext* context, const ::TempoWorld::ActivateComponentRequest& request, ::grpc::CompletionQueue* cq) = 0;
    virtual ::grpc::ClientAsyncResponseReaderInterface< ::TempoScripting::Empty>* PrepareAsyncActivateComponentRaw(::grpc::ClientContext* context, const ::TempoWorld::ActivateComponentRequest& request, ::grpc::CompletionQueue* cq) = 0;
    virtual ::grpc::ClientAsyncResponseReaderInterface< ::TempoScripting::Empty>* AsyncDeactivateComponentRaw(::grpc::ClientContext* context, const ::TempoWorld::DeactivateComponentRequest& request, ::grpc::CompletionQueue* cq) = 0;
    virtual ::grpc::ClientAsyncResponseReaderInterface< ::TempoScripting::Empty>* PrepareAsyncDeactivateComponentRaw(::grpc::ClientContext* context, const ::TempoWorld::DeactivateComponentRequest& request, ::grpc::CompletionQueue* cq) = 0;
    virtual ::grpc::ClientAsyncResponseReaderInterface< ::TempoWorld::GetAllActorsResponse>* AsyncGetAllActorsRaw(::grpc::ClientContext* context, const ::TempoWorld::GetAllActorsRequest& request, ::grpc::CompletionQueue* cq) = 0;
    virtual ::grpc::ClientAsyncResponseReaderInterface< ::TempoWorld::GetAllActorsResponse>* PrepareAsyncGetAllActorsRaw(::grpc::ClientContext* context, const ::TempoWorld::GetAllActorsRequest& request, ::grpc::CompletionQueue* cq) = 0;
    virtual ::grpc::ClientAsyncResponseReaderInterface< ::TempoWorld::GetAllComponentsResponse>* AsyncGetAllComponentsRaw(::grpc::ClientContext* context, const ::TempoWorld::GetAllComponentsRequest& request, ::grpc::CompletionQueue* cq) = 0;
    virtual ::grpc::ClientAsyncResponseReaderInterface< ::TempoWorld::GetAllComponentsResponse>* PrepareAsyncGetAllComponentsRaw(::grpc::ClientContext* context, const ::TempoWorld::GetAllComponentsRequest& request, ::grpc::CompletionQueue* cq) = 0;
    virtual ::grpc::ClientAsyncResponseReaderInterface< ::TempoWorld::GetPropertiesResponse>* AsyncGetActorPropertiesRaw(::grpc::ClientContext* context, const ::TempoWorld::GetActorPropertiesRequest& request, ::grpc::CompletionQueue* cq) = 0;
    virtual ::grpc::ClientAsyncResponseReaderInterface< ::TempoWorld::GetPropertiesResponse>* PrepareAsyncGetActorPropertiesRaw(::grpc::ClientContext* context, const ::TempoWorld::GetActorPropertiesRequest& request, ::grpc::CompletionQueue* cq) = 0;
    virtual ::grpc::ClientAsyncResponseReaderInterface< ::TempoWorld::GetPropertiesResponse>* AsyncGetComponentPropertiesRaw(::grpc::ClientContext* context, const ::TempoWorld::GetComponentPropertiesRequest& request, ::grpc::CompletionQueue* cq) = 0;
    virtual ::grpc::ClientAsyncResponseReaderInterface< ::TempoWorld::GetPropertiesResponse>* PrepareAsyncGetComponentPropertiesRaw(::grpc::ClientContext* context, const ::TempoWorld::GetComponentPropertiesRequest& request, ::grpc::CompletionQueue* cq) = 0;
    virtual ::grpc::ClientAsyncResponseReaderInterface< ::TempoScripting::Empty>* AsyncSetBoolPropertyRaw(::grpc::ClientContext* context, const ::TempoWorld::SetBoolPropertyRequest& request, ::grpc::CompletionQueue* cq) = 0;
    virtual ::grpc::ClientAsyncResponseReaderInterface< ::TempoScripting::Empty>* PrepareAsyncSetBoolPropertyRaw(::grpc::ClientContext* context, const ::TempoWorld::SetBoolPropertyRequest& request, ::grpc::CompletionQueue* cq) = 0;
    virtual ::grpc::ClientAsyncResponseReaderInterface< ::TempoScripting::Empty>* AsyncSetStringPropertyRaw(::grpc::ClientContext* context, const ::TempoWorld::SetStringPropertyRequest& request, ::grpc::CompletionQueue* cq) = 0;
    virtual ::grpc::ClientAsyncResponseReaderInterface< ::TempoScripting::Empty>* PrepareAsyncSetStringPropertyRaw(::grpc::ClientContext* context, const ::TempoWorld::SetStringPropertyRequest& request, ::grpc::CompletionQueue* cq) = 0;
    virtual ::grpc::ClientAsyncResponseReaderInterface< ::TempoScripting::Empty>* AsyncSetEnumPropertyRaw(::grpc::ClientContext* context, const ::TempoWorld::SetEnumPropertyRequest& request, ::grpc::CompletionQueue* cq) = 0;
    virtual ::grpc::ClientAsyncResponseReaderInterface< ::TempoScripting::Empty>* PrepareAsyncSetEnumPropertyRaw(::grpc::ClientContext* context, const ::TempoWorld::SetEnumPropertyRequest& request, ::grpc::CompletionQueue* cq) = 0;
    virtual ::grpc::ClientAsyncResponseReaderInterface< ::TempoScripting::Empty>* AsyncSetIntPropertyRaw(::grpc::ClientContext* context, const ::TempoWorld::SetIntPropertyRequest& request, ::grpc::CompletionQueue* cq) = 0;
    virtual ::grpc::ClientAsyncResponseReaderInterface< ::TempoScripting::Empty>* PrepareAsyncSetIntPropertyRaw(::grpc::ClientContext* context, const ::TempoWorld::SetIntPropertyRequest& request, ::grpc::CompletionQueue* cq) = 0;
    virtual ::grpc::ClientAsyncResponseReaderInterface< ::TempoScripting::Empty>* AsyncSetFloatPropertyRaw(::grpc::ClientContext* context, const ::TempoWorld::SetFloatPropertyRequest& request, ::grpc::CompletionQueue* cq) = 0;
    virtual ::grpc::ClientAsyncResponseReaderInterface< ::TempoScripting::Empty>* PrepareAsyncSetFloatPropertyRaw(::grpc::ClientContext* context, const ::TempoWorld::SetFloatPropertyRequest& request, ::grpc::CompletionQueue* cq) = 0;
    virtual ::grpc::ClientAsyncResponseReaderInterface< ::TempoScripting::Empty>* AsyncSetVectorPropertyRaw(::grpc::ClientContext* context, const ::TempoWorld::SetVectorPropertyRequest& request, ::grpc::CompletionQueue* cq) = 0;
    virtual ::grpc::ClientAsyncResponseReaderInterface< ::TempoScripting::Empty>* PrepareAsyncSetVectorPropertyRaw(::grpc::ClientContext* context, const ::TempoWorld::SetVectorPropertyRequest& request, ::grpc::CompletionQueue* cq) = 0;
    virtual ::grpc::ClientAsyncResponseReaderInterface< ::TempoScripting::Empty>* AsyncSetRotatorPropertyRaw(::grpc::ClientContext* context, const ::TempoWorld::SetRotatorPropertyRequest& request, ::grpc::CompletionQueue* cq) = 0;
    virtual ::grpc::ClientAsyncResponseReaderInterface< ::TempoScripting::Empty>* PrepareAsyncSetRotatorPropertyRaw(::grpc::ClientContext* context, const ::TempoWorld::SetRotatorPropertyRequest& request, ::grpc::CompletionQueue* cq) = 0;
    virtual ::grpc::ClientAsyncResponseReaderInterface< ::TempoScripting::Empty>* AsyncSetColorPropertyRaw(::grpc::ClientContext* context, const ::TempoWorld::SetColorPropertyRequest& request, ::grpc::CompletionQueue* cq) = 0;
    virtual ::grpc::ClientAsyncResponseReaderInterface< ::TempoScripting::Empty>* PrepareAsyncSetColorPropertyRaw(::grpc::ClientContext* context, const ::TempoWorld::SetColorPropertyRequest& request, ::grpc::CompletionQueue* cq) = 0;
    virtual ::grpc::ClientAsyncResponseReaderInterface< ::TempoScripting::Empty>* AsyncSetClassPropertyRaw(::grpc::ClientContext* context, const ::TempoWorld::SetClassPropertyRequest& request, ::grpc::CompletionQueue* cq) = 0;
    virtual ::grpc::ClientAsyncResponseReaderInterface< ::TempoScripting::Empty>* PrepareAsyncSetClassPropertyRaw(::grpc::ClientContext* context, const ::TempoWorld::SetClassPropertyRequest& request, ::grpc::CompletionQueue* cq) = 0;
    virtual ::grpc::ClientAsyncResponseReaderInterface< ::TempoScripting::Empty>* AsyncSetAssetPropertyRaw(::grpc::ClientContext* context, const ::TempoWorld::SetAssetPropertyRequest& request, ::grpc::CompletionQueue* cq) = 0;
    virtual ::grpc::ClientAsyncResponseReaderInterface< ::TempoScripting::Empty>* PrepareAsyncSetAssetPropertyRaw(::grpc::ClientContext* context, const ::TempoWorld::SetAssetPropertyRequest& request, ::grpc::CompletionQueue* cq) = 0;
    virtual ::grpc::ClientAsyncResponseReaderInterface< ::TempoScripting::Empty>* AsyncSetActorPropertyRaw(::grpc::ClientContext* context, const ::TempoWorld::SetActorPropertyRequest& request, ::grpc::CompletionQueue* cq) = 0;
    virtual ::grpc::ClientAsyncResponseReaderInterface< ::TempoScripting::Empty>* PrepareAsyncSetActorPropertyRaw(::grpc::ClientContext* context, const ::TempoWorld::SetActorPropertyRequest& request, ::grpc::CompletionQueue* cq) = 0;
    virtual ::grpc::ClientAsyncResponseReaderInterface< ::TempoScripting::Empty>* AsyncSetComponentPropertyRaw(::grpc::ClientContext* context, const ::TempoWorld::SetComponentPropertyRequest& request, ::grpc::CompletionQueue* cq) = 0;
    virtual ::grpc::ClientAsyncResponseReaderInterface< ::TempoScripting::Empty>* PrepareAsyncSetComponentPropertyRaw(::grpc::ClientContext* context, const ::TempoWorld::SetComponentPropertyRequest& request, ::grpc::CompletionQueue* cq) = 0;
    virtual ::grpc::ClientAsyncResponseReaderInterface< ::TempoScripting::Empty>* AsyncSetBoolArrayPropertyRaw(::grpc::ClientContext* context, const ::TempoWorld::SetBoolArrayPropertyRequest& request, ::grpc::CompletionQueue* cq) = 0;
    virtual ::grpc::ClientAsyncResponseReaderInterface< ::TempoScripting::Empty>* PrepareAsyncSetBoolArrayPropertyRaw(::grpc::ClientContext* context, const ::TempoWorld::SetBoolArrayPropertyRequest& request, ::grpc::CompletionQueue* cq) = 0;
    virtual ::grpc::ClientAsyncResponseReaderInterface< ::TempoScripting::Empty>* AsyncSetStringArrayPropertyRaw(::grpc::ClientContext* context, const ::TempoWorld::SetStringArrayPropertyRequest& request, ::grpc::CompletionQueue* cq) = 0;
    virtual ::grpc::ClientAsyncResponseReaderInterface< ::TempoScripting::Empty>* PrepareAsyncSetStringArrayPropertyRaw(::grpc::ClientContext* context, const ::TempoWorld::SetStringArrayPropertyRequest& request, ::grpc::CompletionQueue* cq) = 0;
    virtual ::grpc::ClientAsyncResponseReaderInterface< ::TempoScripting::Empty>* AsyncSetEnumArrayPropertyRaw(::grpc::ClientContext* context, const ::TempoWorld::SetEnumArrayPropertyRequest& request, ::grpc::CompletionQueue* cq) = 0;
    virtual ::grpc::ClientAsyncResponseReaderInterface< ::TempoScripting::Empty>* PrepareAsyncSetEnumArrayPropertyRaw(::grpc::ClientContext* context, const ::TempoWorld::SetEnumArrayPropertyRequest& request, ::grpc::CompletionQueue* cq) = 0;
    virtual ::grpc::ClientAsyncResponseReaderInterface< ::TempoScripting::Empty>* AsyncSetIntArrayPropertyRaw(::grpc::ClientContext* context, const ::TempoWorld::SetIntArrayPropertyRequest& request, ::grpc::CompletionQueue* cq) = 0;
    virtual ::grpc::ClientAsyncResponseReaderInterface< ::TempoScripting::Empty>* PrepareAsyncSetIntArrayPropertyRaw(::grpc::ClientContext* context, const ::TempoWorld::SetIntArrayPropertyRequest& request, ::grpc::CompletionQueue* cq) = 0;
    virtual ::grpc::ClientAsyncResponseReaderInterface< ::TempoScripting::Empty>* AsyncSetFloatArrayPropertyRaw(::grpc::ClientContext* context, const ::TempoWorld::SetFloatArrayPropertyRequest& request, ::grpc::CompletionQueue* cq) = 0;
    virtual ::grpc::ClientAsyncResponseReaderInterface< ::TempoScripting::Empty>* PrepareAsyncSetFloatArrayPropertyRaw(::grpc::ClientContext* context, const ::TempoWorld::SetFloatArrayPropertyRequest& request, ::grpc::CompletionQueue* cq) = 0;
    virtual ::grpc::ClientAsyncResponseReaderInterface< ::TempoScripting::Empty>* AsyncSetClassArrayPropertyRaw(::grpc::ClientContext* context, const ::TempoWorld::SetClassArrayPropertyRequest& request, ::grpc::CompletionQueue* cq) = 0;
    virtual ::grpc::ClientAsyncResponseReaderInterface< ::TempoScripting::Empty>* PrepareAsyncSetClassArrayPropertyRaw(::grpc::ClientContext* context, const ::TempoWorld::SetClassArrayPropertyRequest& request, ::grpc::CompletionQueue* cq) = 0;
    virtual ::grpc::ClientAsyncResponseReaderInterface< ::TempoScripting::Empty>* AsyncSetAssetArrayPropertyRaw(::grpc::ClientContext* context, const ::TempoWorld::SetAssetArrayPropertyRequest& request, ::grpc::CompletionQueue* cq) = 0;
    virtual ::grpc::ClientAsyncResponseReaderInterface< ::TempoScripting::Empty>* PrepareAsyncSetAssetArrayPropertyRaw(::grpc::ClientContext* context, const ::TempoWorld::SetAssetArrayPropertyRequest& request, ::grpc::CompletionQueue* cq) = 0;
    virtual ::grpc::ClientAsyncResponseReaderInterface< ::TempoScripting::Empty>* AsyncSetActorArrayPropertyRaw(::grpc::ClientContext* context, const ::TempoWorld::SetActorArrayPropertyRequest& request, ::grpc::CompletionQueue* cq) = 0;
    virtual ::grpc::ClientAsyncResponseReaderInterface< ::TempoScripting::Empty>* PrepareAsyncSetActorArrayPropertyRaw(::grpc::ClientContext* context, const ::TempoWorld::SetActorArrayPropertyRequest& request, ::grpc::CompletionQueue* cq) = 0;
    virtual ::grpc::ClientAsyncResponseReaderInterface< ::TempoScripting::Empty>* AsyncSetComponentArrayPropertyRaw(::grpc::ClientContext* context, const ::TempoWorld::SetComponentArrayPropertyRequest& request, ::grpc::CompletionQueue* cq) = 0;
    virtual ::grpc::ClientAsyncResponseReaderInterface< ::TempoScripting::Empty>* PrepareAsyncSetComponentArrayPropertyRaw(::grpc::ClientContext* context, const ::TempoWorld::SetComponentArrayPropertyRequest& request, ::grpc::CompletionQueue* cq) = 0;
    virtual ::grpc::ClientAsyncResponseReaderInterface< ::TempoScripting::Empty>* AsyncCallFunctionRaw(::grpc::ClientContext* context, const ::TempoWorld::CallFunctionRequest& request, ::grpc::CompletionQueue* cq) = 0;
    virtual ::grpc::ClientAsyncResponseReaderInterface< ::TempoScripting::Empty>* PrepareAsyncCallFunctionRaw(::grpc::ClientContext* context, const ::TempoWorld::CallFunctionRequest& request, ::grpc::CompletionQueue* cq) = 0;
  };
  class Stub final : public StubInterface {
   public:
    Stub(const std::shared_ptr< ::grpc::ChannelInterface>& channel, const ::grpc::StubOptions& options = ::grpc::StubOptions());
    ::grpc::Status SpawnActor(::grpc::ClientContext* context, const ::TempoWorld::SpawnActorRequest& request, ::TempoWorld::SpawnActorResponse* response) override;
    std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::TempoWorld::SpawnActorResponse>> AsyncSpawnActor(::grpc::ClientContext* context, const ::TempoWorld::SpawnActorRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::TempoWorld::SpawnActorResponse>>(AsyncSpawnActorRaw(context, request, cq));
    }
    std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::TempoWorld::SpawnActorResponse>> PrepareAsyncSpawnActor(::grpc::ClientContext* context, const ::TempoWorld::SpawnActorRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::TempoWorld::SpawnActorResponse>>(PrepareAsyncSpawnActorRaw(context, request, cq));
    }
    ::grpc::Status FinishSpawningActor(::grpc::ClientContext* context, const ::TempoWorld::FinishSpawningActorRequest& request, ::TempoWorld::FinishSpawningActorResponse* response) override;
    std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::TempoWorld::FinishSpawningActorResponse>> AsyncFinishSpawningActor(::grpc::ClientContext* context, const ::TempoWorld::FinishSpawningActorRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::TempoWorld::FinishSpawningActorResponse>>(AsyncFinishSpawningActorRaw(context, request, cq));
    }
    std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::TempoWorld::FinishSpawningActorResponse>> PrepareAsyncFinishSpawningActor(::grpc::ClientContext* context, const ::TempoWorld::FinishSpawningActorRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::TempoWorld::FinishSpawningActorResponse>>(PrepareAsyncFinishSpawningActorRaw(context, request, cq));
    }
    ::grpc::Status DestroyActor(::grpc::ClientContext* context, const ::TempoWorld::DestroyActorRequest& request, ::TempoScripting::Empty* response) override;
    std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::TempoScripting::Empty>> AsyncDestroyActor(::grpc::ClientContext* context, const ::TempoWorld::DestroyActorRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::TempoScripting::Empty>>(AsyncDestroyActorRaw(context, request, cq));
    }
    std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::TempoScripting::Empty>> PrepareAsyncDestroyActor(::grpc::ClientContext* context, const ::TempoWorld::DestroyActorRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::TempoScripting::Empty>>(PrepareAsyncDestroyActorRaw(context, request, cq));
    }
    ::grpc::Status AddComponent(::grpc::ClientContext* context, const ::TempoWorld::AddComponentRequest& request, ::TempoWorld::AddComponentResponse* response) override;
    std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::TempoWorld::AddComponentResponse>> AsyncAddComponent(::grpc::ClientContext* context, const ::TempoWorld::AddComponentRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::TempoWorld::AddComponentResponse>>(AsyncAddComponentRaw(context, request, cq));
    }
    std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::TempoWorld::AddComponentResponse>> PrepareAsyncAddComponent(::grpc::ClientContext* context, const ::TempoWorld::AddComponentRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::TempoWorld::AddComponentResponse>>(PrepareAsyncAddComponentRaw(context, request, cq));
    }
    ::grpc::Status DestroyComponent(::grpc::ClientContext* context, const ::TempoWorld::DestroyComponentRequest& request, ::TempoScripting::Empty* response) override;
    std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::TempoScripting::Empty>> AsyncDestroyComponent(::grpc::ClientContext* context, const ::TempoWorld::DestroyComponentRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::TempoScripting::Empty>>(AsyncDestroyComponentRaw(context, request, cq));
    }
    std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::TempoScripting::Empty>> PrepareAsyncDestroyComponent(::grpc::ClientContext* context, const ::TempoWorld::DestroyComponentRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::TempoScripting::Empty>>(PrepareAsyncDestroyComponentRaw(context, request, cq));
    }
    ::grpc::Status SetActorTransform(::grpc::ClientContext* context, const ::TempoWorld::SetActorTransformRequest& request, ::TempoScripting::Empty* response) override;
    std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::TempoScripting::Empty>> AsyncSetActorTransform(::grpc::ClientContext* context, const ::TempoWorld::SetActorTransformRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::TempoScripting::Empty>>(AsyncSetActorTransformRaw(context, request, cq));
    }
    std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::TempoScripting::Empty>> PrepareAsyncSetActorTransform(::grpc::ClientContext* context, const ::TempoWorld::SetActorTransformRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::TempoScripting::Empty>>(PrepareAsyncSetActorTransformRaw(context, request, cq));
    }
    ::grpc::Status SetComponentTransform(::grpc::ClientContext* context, const ::TempoWorld::SetComponentTransformRequest& request, ::TempoScripting::Empty* response) override;
    std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::TempoScripting::Empty>> AsyncSetComponentTransform(::grpc::ClientContext* context, const ::TempoWorld::SetComponentTransformRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::TempoScripting::Empty>>(AsyncSetComponentTransformRaw(context, request, cq));
    }
    std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::TempoScripting::Empty>> PrepareAsyncSetComponentTransform(::grpc::ClientContext* context, const ::TempoWorld::SetComponentTransformRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::TempoScripting::Empty>>(PrepareAsyncSetComponentTransformRaw(context, request, cq));
    }
    ::grpc::Status ActivateComponent(::grpc::ClientContext* context, const ::TempoWorld::ActivateComponentRequest& request, ::TempoScripting::Empty* response) override;
    std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::TempoScripting::Empty>> AsyncActivateComponent(::grpc::ClientContext* context, const ::TempoWorld::ActivateComponentRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::TempoScripting::Empty>>(AsyncActivateComponentRaw(context, request, cq));
    }
    std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::TempoScripting::Empty>> PrepareAsyncActivateComponent(::grpc::ClientContext* context, const ::TempoWorld::ActivateComponentRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::TempoScripting::Empty>>(PrepareAsyncActivateComponentRaw(context, request, cq));
    }
    ::grpc::Status DeactivateComponent(::grpc::ClientContext* context, const ::TempoWorld::DeactivateComponentRequest& request, ::TempoScripting::Empty* response) override;
    std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::TempoScripting::Empty>> AsyncDeactivateComponent(::grpc::ClientContext* context, const ::TempoWorld::DeactivateComponentRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::TempoScripting::Empty>>(AsyncDeactivateComponentRaw(context, request, cq));
    }
    std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::TempoScripting::Empty>> PrepareAsyncDeactivateComponent(::grpc::ClientContext* context, const ::TempoWorld::DeactivateComponentRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::TempoScripting::Empty>>(PrepareAsyncDeactivateComponentRaw(context, request, cq));
    }
    ::grpc::Status GetAllActors(::grpc::ClientContext* context, const ::TempoWorld::GetAllActorsRequest& request, ::TempoWorld::GetAllActorsResponse* response) override;
    std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::TempoWorld::GetAllActorsResponse>> AsyncGetAllActors(::grpc::ClientContext* context, const ::TempoWorld::GetAllActorsRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::TempoWorld::GetAllActorsResponse>>(AsyncGetAllActorsRaw(context, request, cq));
    }
    std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::TempoWorld::GetAllActorsResponse>> PrepareAsyncGetAllActors(::grpc::ClientContext* context, const ::TempoWorld::GetAllActorsRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::TempoWorld::GetAllActorsResponse>>(PrepareAsyncGetAllActorsRaw(context, request, cq));
    }
    ::grpc::Status GetAllComponents(::grpc::ClientContext* context, const ::TempoWorld::GetAllComponentsRequest& request, ::TempoWorld::GetAllComponentsResponse* response) override;
    std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::TempoWorld::GetAllComponentsResponse>> AsyncGetAllComponents(::grpc::ClientContext* context, const ::TempoWorld::GetAllComponentsRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::TempoWorld::GetAllComponentsResponse>>(AsyncGetAllComponentsRaw(context, request, cq));
    }
    std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::TempoWorld::GetAllComponentsResponse>> PrepareAsyncGetAllComponents(::grpc::ClientContext* context, const ::TempoWorld::GetAllComponentsRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::TempoWorld::GetAllComponentsResponse>>(PrepareAsyncGetAllComponentsRaw(context, request, cq));
    }
    ::grpc::Status GetActorProperties(::grpc::ClientContext* context, const ::TempoWorld::GetActorPropertiesRequest& request, ::TempoWorld::GetPropertiesResponse* response) override;
    std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::TempoWorld::GetPropertiesResponse>> AsyncGetActorProperties(::grpc::ClientContext* context, const ::TempoWorld::GetActorPropertiesRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::TempoWorld::GetPropertiesResponse>>(AsyncGetActorPropertiesRaw(context, request, cq));
    }
    std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::TempoWorld::GetPropertiesResponse>> PrepareAsyncGetActorProperties(::grpc::ClientContext* context, const ::TempoWorld::GetActorPropertiesRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::TempoWorld::GetPropertiesResponse>>(PrepareAsyncGetActorPropertiesRaw(context, request, cq));
    }
    ::grpc::Status GetComponentProperties(::grpc::ClientContext* context, const ::TempoWorld::GetComponentPropertiesRequest& request, ::TempoWorld::GetPropertiesResponse* response) override;
    std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::TempoWorld::GetPropertiesResponse>> AsyncGetComponentProperties(::grpc::ClientContext* context, const ::TempoWorld::GetComponentPropertiesRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::TempoWorld::GetPropertiesResponse>>(AsyncGetComponentPropertiesRaw(context, request, cq));
    }
    std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::TempoWorld::GetPropertiesResponse>> PrepareAsyncGetComponentProperties(::grpc::ClientContext* context, const ::TempoWorld::GetComponentPropertiesRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::TempoWorld::GetPropertiesResponse>>(PrepareAsyncGetComponentPropertiesRaw(context, request, cq));
    }
    ::grpc::Status SetBoolProperty(::grpc::ClientContext* context, const ::TempoWorld::SetBoolPropertyRequest& request, ::TempoScripting::Empty* response) override;
    std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::TempoScripting::Empty>> AsyncSetBoolProperty(::grpc::ClientContext* context, const ::TempoWorld::SetBoolPropertyRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::TempoScripting::Empty>>(AsyncSetBoolPropertyRaw(context, request, cq));
    }
    std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::TempoScripting::Empty>> PrepareAsyncSetBoolProperty(::grpc::ClientContext* context, const ::TempoWorld::SetBoolPropertyRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::TempoScripting::Empty>>(PrepareAsyncSetBoolPropertyRaw(context, request, cq));
    }
    ::grpc::Status SetStringProperty(::grpc::ClientContext* context, const ::TempoWorld::SetStringPropertyRequest& request, ::TempoScripting::Empty* response) override;
    std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::TempoScripting::Empty>> AsyncSetStringProperty(::grpc::ClientContext* context, const ::TempoWorld::SetStringPropertyRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::TempoScripting::Empty>>(AsyncSetStringPropertyRaw(context, request, cq));
    }
    std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::TempoScripting::Empty>> PrepareAsyncSetStringProperty(::grpc::ClientContext* context, const ::TempoWorld::SetStringPropertyRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::TempoScripting::Empty>>(PrepareAsyncSetStringPropertyRaw(context, request, cq));
    }
    ::grpc::Status SetEnumProperty(::grpc::ClientContext* context, const ::TempoWorld::SetEnumPropertyRequest& request, ::TempoScripting::Empty* response) override;
    std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::TempoScripting::Empty>> AsyncSetEnumProperty(::grpc::ClientContext* context, const ::TempoWorld::SetEnumPropertyRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::TempoScripting::Empty>>(AsyncSetEnumPropertyRaw(context, request, cq));
    }
    std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::TempoScripting::Empty>> PrepareAsyncSetEnumProperty(::grpc::ClientContext* context, const ::TempoWorld::SetEnumPropertyRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::TempoScripting::Empty>>(PrepareAsyncSetEnumPropertyRaw(context, request, cq));
    }
    ::grpc::Status SetIntProperty(::grpc::ClientContext* context, const ::TempoWorld::SetIntPropertyRequest& request, ::TempoScripting::Empty* response) override;
    std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::TempoScripting::Empty>> AsyncSetIntProperty(::grpc::ClientContext* context, const ::TempoWorld::SetIntPropertyRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::TempoScripting::Empty>>(AsyncSetIntPropertyRaw(context, request, cq));
    }
    std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::TempoScripting::Empty>> PrepareAsyncSetIntProperty(::grpc::ClientContext* context, const ::TempoWorld::SetIntPropertyRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::TempoScripting::Empty>>(PrepareAsyncSetIntPropertyRaw(context, request, cq));
    }
    ::grpc::Status SetFloatProperty(::grpc::ClientContext* context, const ::TempoWorld::SetFloatPropertyRequest& request, ::TempoScripting::Empty* response) override;
    std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::TempoScripting::Empty>> AsyncSetFloatProperty(::grpc::ClientContext* context, const ::TempoWorld::SetFloatPropertyRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::TempoScripting::Empty>>(AsyncSetFloatPropertyRaw(context, request, cq));
    }
    std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::TempoScripting::Empty>> PrepareAsyncSetFloatProperty(::grpc::ClientContext* context, const ::TempoWorld::SetFloatPropertyRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::TempoScripting::Empty>>(PrepareAsyncSetFloatPropertyRaw(context, request, cq));
    }
    ::grpc::Status SetVectorProperty(::grpc::ClientContext* context, const ::TempoWorld::SetVectorPropertyRequest& request, ::TempoScripting::Empty* response) override;
    std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::TempoScripting::Empty>> AsyncSetVectorProperty(::grpc::ClientContext* context, const ::TempoWorld::SetVectorPropertyRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::TempoScripting::Empty>>(AsyncSetVectorPropertyRaw(context, request, cq));
    }
    std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::TempoScripting::Empty>> PrepareAsyncSetVectorProperty(::grpc::ClientContext* context, const ::TempoWorld::SetVectorPropertyRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::TempoScripting::Empty>>(PrepareAsyncSetVectorPropertyRaw(context, request, cq));
    }
    ::grpc::Status SetRotatorProperty(::grpc::ClientContext* context, const ::TempoWorld::SetRotatorPropertyRequest& request, ::TempoScripting::Empty* response) override;
    std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::TempoScripting::Empty>> AsyncSetRotatorProperty(::grpc::ClientContext* context, const ::TempoWorld::SetRotatorPropertyRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::TempoScripting::Empty>>(AsyncSetRotatorPropertyRaw(context, request, cq));
    }
    std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::TempoScripting::Empty>> PrepareAsyncSetRotatorProperty(::grpc::ClientContext* context, const ::TempoWorld::SetRotatorPropertyRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::TempoScripting::Empty>>(PrepareAsyncSetRotatorPropertyRaw(context, request, cq));
    }
    ::grpc::Status SetColorProperty(::grpc::ClientContext* context, const ::TempoWorld::SetColorPropertyRequest& request, ::TempoScripting::Empty* response) override;
    std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::TempoScripting::Empty>> AsyncSetColorProperty(::grpc::ClientContext* context, const ::TempoWorld::SetColorPropertyRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::TempoScripting::Empty>>(AsyncSetColorPropertyRaw(context, request, cq));
    }
    std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::TempoScripting::Empty>> PrepareAsyncSetColorProperty(::grpc::ClientContext* context, const ::TempoWorld::SetColorPropertyRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::TempoScripting::Empty>>(PrepareAsyncSetColorPropertyRaw(context, request, cq));
    }
    ::grpc::Status SetClassProperty(::grpc::ClientContext* context, const ::TempoWorld::SetClassPropertyRequest& request, ::TempoScripting::Empty* response) override;
    std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::TempoScripting::Empty>> AsyncSetClassProperty(::grpc::ClientContext* context, const ::TempoWorld::SetClassPropertyRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::TempoScripting::Empty>>(AsyncSetClassPropertyRaw(context, request, cq));
    }
    std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::TempoScripting::Empty>> PrepareAsyncSetClassProperty(::grpc::ClientContext* context, const ::TempoWorld::SetClassPropertyRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::TempoScripting::Empty>>(PrepareAsyncSetClassPropertyRaw(context, request, cq));
    }
    ::grpc::Status SetAssetProperty(::grpc::ClientContext* context, const ::TempoWorld::SetAssetPropertyRequest& request, ::TempoScripting::Empty* response) override;
    std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::TempoScripting::Empty>> AsyncSetAssetProperty(::grpc::ClientContext* context, const ::TempoWorld::SetAssetPropertyRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::TempoScripting::Empty>>(AsyncSetAssetPropertyRaw(context, request, cq));
    }
    std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::TempoScripting::Empty>> PrepareAsyncSetAssetProperty(::grpc::ClientContext* context, const ::TempoWorld::SetAssetPropertyRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::TempoScripting::Empty>>(PrepareAsyncSetAssetPropertyRaw(context, request, cq));
    }
    ::grpc::Status SetActorProperty(::grpc::ClientContext* context, const ::TempoWorld::SetActorPropertyRequest& request, ::TempoScripting::Empty* response) override;
    std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::TempoScripting::Empty>> AsyncSetActorProperty(::grpc::ClientContext* context, const ::TempoWorld::SetActorPropertyRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::TempoScripting::Empty>>(AsyncSetActorPropertyRaw(context, request, cq));
    }
    std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::TempoScripting::Empty>> PrepareAsyncSetActorProperty(::grpc::ClientContext* context, const ::TempoWorld::SetActorPropertyRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::TempoScripting::Empty>>(PrepareAsyncSetActorPropertyRaw(context, request, cq));
    }
    ::grpc::Status SetComponentProperty(::grpc::ClientContext* context, const ::TempoWorld::SetComponentPropertyRequest& request, ::TempoScripting::Empty* response) override;
    std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::TempoScripting::Empty>> AsyncSetComponentProperty(::grpc::ClientContext* context, const ::TempoWorld::SetComponentPropertyRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::TempoScripting::Empty>>(AsyncSetComponentPropertyRaw(context, request, cq));
    }
    std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::TempoScripting::Empty>> PrepareAsyncSetComponentProperty(::grpc::ClientContext* context, const ::TempoWorld::SetComponentPropertyRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::TempoScripting::Empty>>(PrepareAsyncSetComponentPropertyRaw(context, request, cq));
    }
    ::grpc::Status SetBoolArrayProperty(::grpc::ClientContext* context, const ::TempoWorld::SetBoolArrayPropertyRequest& request, ::TempoScripting::Empty* response) override;
    std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::TempoScripting::Empty>> AsyncSetBoolArrayProperty(::grpc::ClientContext* context, const ::TempoWorld::SetBoolArrayPropertyRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::TempoScripting::Empty>>(AsyncSetBoolArrayPropertyRaw(context, request, cq));
    }
    std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::TempoScripting::Empty>> PrepareAsyncSetBoolArrayProperty(::grpc::ClientContext* context, const ::TempoWorld::SetBoolArrayPropertyRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::TempoScripting::Empty>>(PrepareAsyncSetBoolArrayPropertyRaw(context, request, cq));
    }
    ::grpc::Status SetStringArrayProperty(::grpc::ClientContext* context, const ::TempoWorld::SetStringArrayPropertyRequest& request, ::TempoScripting::Empty* response) override;
    std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::TempoScripting::Empty>> AsyncSetStringArrayProperty(::grpc::ClientContext* context, const ::TempoWorld::SetStringArrayPropertyRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::TempoScripting::Empty>>(AsyncSetStringArrayPropertyRaw(context, request, cq));
    }
    std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::TempoScripting::Empty>> PrepareAsyncSetStringArrayProperty(::grpc::ClientContext* context, const ::TempoWorld::SetStringArrayPropertyRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::TempoScripting::Empty>>(PrepareAsyncSetStringArrayPropertyRaw(context, request, cq));
    }
    ::grpc::Status SetEnumArrayProperty(::grpc::ClientContext* context, const ::TempoWorld::SetEnumArrayPropertyRequest& request, ::TempoScripting::Empty* response) override;
    std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::TempoScripting::Empty>> AsyncSetEnumArrayProperty(::grpc::ClientContext* context, const ::TempoWorld::SetEnumArrayPropertyRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::TempoScripting::Empty>>(AsyncSetEnumArrayPropertyRaw(context, request, cq));
    }
    std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::TempoScripting::Empty>> PrepareAsyncSetEnumArrayProperty(::grpc::ClientContext* context, const ::TempoWorld::SetEnumArrayPropertyRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::TempoScripting::Empty>>(PrepareAsyncSetEnumArrayPropertyRaw(context, request, cq));
    }
    ::grpc::Status SetIntArrayProperty(::grpc::ClientContext* context, const ::TempoWorld::SetIntArrayPropertyRequest& request, ::TempoScripting::Empty* response) override;
    std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::TempoScripting::Empty>> AsyncSetIntArrayProperty(::grpc::ClientContext* context, const ::TempoWorld::SetIntArrayPropertyRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::TempoScripting::Empty>>(AsyncSetIntArrayPropertyRaw(context, request, cq));
    }
    std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::TempoScripting::Empty>> PrepareAsyncSetIntArrayProperty(::grpc::ClientContext* context, const ::TempoWorld::SetIntArrayPropertyRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::TempoScripting::Empty>>(PrepareAsyncSetIntArrayPropertyRaw(context, request, cq));
    }
    ::grpc::Status SetFloatArrayProperty(::grpc::ClientContext* context, const ::TempoWorld::SetFloatArrayPropertyRequest& request, ::TempoScripting::Empty* response) override;
    std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::TempoScripting::Empty>> AsyncSetFloatArrayProperty(::grpc::ClientContext* context, const ::TempoWorld::SetFloatArrayPropertyRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::TempoScripting::Empty>>(AsyncSetFloatArrayPropertyRaw(context, request, cq));
    }
    std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::TempoScripting::Empty>> PrepareAsyncSetFloatArrayProperty(::grpc::ClientContext* context, const ::TempoWorld::SetFloatArrayPropertyRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::TempoScripting::Empty>>(PrepareAsyncSetFloatArrayPropertyRaw(context, request, cq));
    }
    ::grpc::Status SetClassArrayProperty(::grpc::ClientContext* context, const ::TempoWorld::SetClassArrayPropertyRequest& request, ::TempoScripting::Empty* response) override;
    std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::TempoScripting::Empty>> AsyncSetClassArrayProperty(::grpc::ClientContext* context, const ::TempoWorld::SetClassArrayPropertyRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::TempoScripting::Empty>>(AsyncSetClassArrayPropertyRaw(context, request, cq));
    }
    std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::TempoScripting::Empty>> PrepareAsyncSetClassArrayProperty(::grpc::ClientContext* context, const ::TempoWorld::SetClassArrayPropertyRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::TempoScripting::Empty>>(PrepareAsyncSetClassArrayPropertyRaw(context, request, cq));
    }
    ::grpc::Status SetAssetArrayProperty(::grpc::ClientContext* context, const ::TempoWorld::SetAssetArrayPropertyRequest& request, ::TempoScripting::Empty* response) override;
    std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::TempoScripting::Empty>> AsyncSetAssetArrayProperty(::grpc::ClientContext* context, const ::TempoWorld::SetAssetArrayPropertyRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::TempoScripting::Empty>>(AsyncSetAssetArrayPropertyRaw(context, request, cq));
    }
    std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::TempoScripting::Empty>> PrepareAsyncSetAssetArrayProperty(::grpc::ClientContext* context, const ::TempoWorld::SetAssetArrayPropertyRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::TempoScripting::Empty>>(PrepareAsyncSetAssetArrayPropertyRaw(context, request, cq));
    }
    ::grpc::Status SetActorArrayProperty(::grpc::ClientContext* context, const ::TempoWorld::SetActorArrayPropertyRequest& request, ::TempoScripting::Empty* response) override;
    std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::TempoScripting::Empty>> AsyncSetActorArrayProperty(::grpc::ClientContext* context, const ::TempoWorld::SetActorArrayPropertyRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::TempoScripting::Empty>>(AsyncSetActorArrayPropertyRaw(context, request, cq));
    }
    std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::TempoScripting::Empty>> PrepareAsyncSetActorArrayProperty(::grpc::ClientContext* context, const ::TempoWorld::SetActorArrayPropertyRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::TempoScripting::Empty>>(PrepareAsyncSetActorArrayPropertyRaw(context, request, cq));
    }
    ::grpc::Status SetComponentArrayProperty(::grpc::ClientContext* context, const ::TempoWorld::SetComponentArrayPropertyRequest& request, ::TempoScripting::Empty* response) override;
    std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::TempoScripting::Empty>> AsyncSetComponentArrayProperty(::grpc::ClientContext* context, const ::TempoWorld::SetComponentArrayPropertyRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::TempoScripting::Empty>>(AsyncSetComponentArrayPropertyRaw(context, request, cq));
    }
    std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::TempoScripting::Empty>> PrepareAsyncSetComponentArrayProperty(::grpc::ClientContext* context, const ::TempoWorld::SetComponentArrayPropertyRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::TempoScripting::Empty>>(PrepareAsyncSetComponentArrayPropertyRaw(context, request, cq));
    }
    ::grpc::Status CallFunction(::grpc::ClientContext* context, const ::TempoWorld::CallFunctionRequest& request, ::TempoScripting::Empty* response) override;
    std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::TempoScripting::Empty>> AsyncCallFunction(::grpc::ClientContext* context, const ::TempoWorld::CallFunctionRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::TempoScripting::Empty>>(AsyncCallFunctionRaw(context, request, cq));
    }
    std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::TempoScripting::Empty>> PrepareAsyncCallFunction(::grpc::ClientContext* context, const ::TempoWorld::CallFunctionRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::TempoScripting::Empty>>(PrepareAsyncCallFunctionRaw(context, request, cq));
    }
    class async final :
      public StubInterface::async_interface {
     public:
      void SpawnActor(::grpc::ClientContext* context, const ::TempoWorld::SpawnActorRequest* request, ::TempoWorld::SpawnActorResponse* response, std::function<void(::grpc::Status)>) override;
      void SpawnActor(::grpc::ClientContext* context, const ::TempoWorld::SpawnActorRequest* request, ::TempoWorld::SpawnActorResponse* response, ::grpc::ClientUnaryReactor* reactor) override;
      void FinishSpawningActor(::grpc::ClientContext* context, const ::TempoWorld::FinishSpawningActorRequest* request, ::TempoWorld::FinishSpawningActorResponse* response, std::function<void(::grpc::Status)>) override;
      void FinishSpawningActor(::grpc::ClientContext* context, const ::TempoWorld::FinishSpawningActorRequest* request, ::TempoWorld::FinishSpawningActorResponse* response, ::grpc::ClientUnaryReactor* reactor) override;
      void DestroyActor(::grpc::ClientContext* context, const ::TempoWorld::DestroyActorRequest* request, ::TempoScripting::Empty* response, std::function<void(::grpc::Status)>) override;
      void DestroyActor(::grpc::ClientContext* context, const ::TempoWorld::DestroyActorRequest* request, ::TempoScripting::Empty* response, ::grpc::ClientUnaryReactor* reactor) override;
      void AddComponent(::grpc::ClientContext* context, const ::TempoWorld::AddComponentRequest* request, ::TempoWorld::AddComponentResponse* response, std::function<void(::grpc::Status)>) override;
      void AddComponent(::grpc::ClientContext* context, const ::TempoWorld::AddComponentRequest* request, ::TempoWorld::AddComponentResponse* response, ::grpc::ClientUnaryReactor* reactor) override;
      void DestroyComponent(::grpc::ClientContext* context, const ::TempoWorld::DestroyComponentRequest* request, ::TempoScripting::Empty* response, std::function<void(::grpc::Status)>) override;
      void DestroyComponent(::grpc::ClientContext* context, const ::TempoWorld::DestroyComponentRequest* request, ::TempoScripting::Empty* response, ::grpc::ClientUnaryReactor* reactor) override;
      void SetActorTransform(::grpc::ClientContext* context, const ::TempoWorld::SetActorTransformRequest* request, ::TempoScripting::Empty* response, std::function<void(::grpc::Status)>) override;
      void SetActorTransform(::grpc::ClientContext* context, const ::TempoWorld::SetActorTransformRequest* request, ::TempoScripting::Empty* response, ::grpc::ClientUnaryReactor* reactor) override;
      void SetComponentTransform(::grpc::ClientContext* context, const ::TempoWorld::SetComponentTransformRequest* request, ::TempoScripting::Empty* response, std::function<void(::grpc::Status)>) override;
      void SetComponentTransform(::grpc::ClientContext* context, const ::TempoWorld::SetComponentTransformRequest* request, ::TempoScripting::Empty* response, ::grpc::ClientUnaryReactor* reactor) override;
      void ActivateComponent(::grpc::ClientContext* context, const ::TempoWorld::ActivateComponentRequest* request, ::TempoScripting::Empty* response, std::function<void(::grpc::Status)>) override;
      void ActivateComponent(::grpc::ClientContext* context, const ::TempoWorld::ActivateComponentRequest* request, ::TempoScripting::Empty* response, ::grpc::ClientUnaryReactor* reactor) override;
      void DeactivateComponent(::grpc::ClientContext* context, const ::TempoWorld::DeactivateComponentRequest* request, ::TempoScripting::Empty* response, std::function<void(::grpc::Status)>) override;
      void DeactivateComponent(::grpc::ClientContext* context, const ::TempoWorld::DeactivateComponentRequest* request, ::TempoScripting::Empty* response, ::grpc::ClientUnaryReactor* reactor) override;
      void GetAllActors(::grpc::ClientContext* context, const ::TempoWorld::GetAllActorsRequest* request, ::TempoWorld::GetAllActorsResponse* response, std::function<void(::grpc::Status)>) override;
      void GetAllActors(::grpc::ClientContext* context, const ::TempoWorld::GetAllActorsRequest* request, ::TempoWorld::GetAllActorsResponse* response, ::grpc::ClientUnaryReactor* reactor) override;
      void GetAllComponents(::grpc::ClientContext* context, const ::TempoWorld::GetAllComponentsRequest* request, ::TempoWorld::GetAllComponentsResponse* response, std::function<void(::grpc::Status)>) override;
      void GetAllComponents(::grpc::ClientContext* context, const ::TempoWorld::GetAllComponentsRequest* request, ::TempoWorld::GetAllComponentsResponse* response, ::grpc::ClientUnaryReactor* reactor) override;
      void GetActorProperties(::grpc::ClientContext* context, const ::TempoWorld::GetActorPropertiesRequest* request, ::TempoWorld::GetPropertiesResponse* response, std::function<void(::grpc::Status)>) override;
      void GetActorProperties(::grpc::ClientContext* context, const ::TempoWorld::GetActorPropertiesRequest* request, ::TempoWorld::GetPropertiesResponse* response, ::grpc::ClientUnaryReactor* reactor) override;
      void GetComponentProperties(::grpc::ClientContext* context, const ::TempoWorld::GetComponentPropertiesRequest* request, ::TempoWorld::GetPropertiesResponse* response, std::function<void(::grpc::Status)>) override;
      void GetComponentProperties(::grpc::ClientContext* context, const ::TempoWorld::GetComponentPropertiesRequest* request, ::TempoWorld::GetPropertiesResponse* response, ::grpc::ClientUnaryReactor* reactor) override;
      void SetBoolProperty(::grpc::ClientContext* context, const ::TempoWorld::SetBoolPropertyRequest* request, ::TempoScripting::Empty* response, std::function<void(::grpc::Status)>) override;
      void SetBoolProperty(::grpc::ClientContext* context, const ::TempoWorld::SetBoolPropertyRequest* request, ::TempoScripting::Empty* response, ::grpc::ClientUnaryReactor* reactor) override;
      void SetStringProperty(::grpc::ClientContext* context, const ::TempoWorld::SetStringPropertyRequest* request, ::TempoScripting::Empty* response, std::function<void(::grpc::Status)>) override;
      void SetStringProperty(::grpc::ClientContext* context, const ::TempoWorld::SetStringPropertyRequest* request, ::TempoScripting::Empty* response, ::grpc::ClientUnaryReactor* reactor) override;
      void SetEnumProperty(::grpc::ClientContext* context, const ::TempoWorld::SetEnumPropertyRequest* request, ::TempoScripting::Empty* response, std::function<void(::grpc::Status)>) override;
      void SetEnumProperty(::grpc::ClientContext* context, const ::TempoWorld::SetEnumPropertyRequest* request, ::TempoScripting::Empty* response, ::grpc::ClientUnaryReactor* reactor) override;
      void SetIntProperty(::grpc::ClientContext* context, const ::TempoWorld::SetIntPropertyRequest* request, ::TempoScripting::Empty* response, std::function<void(::grpc::Status)>) override;
      void SetIntProperty(::grpc::ClientContext* context, const ::TempoWorld::SetIntPropertyRequest* request, ::TempoScripting::Empty* response, ::grpc::ClientUnaryReactor* reactor) override;
      void SetFloatProperty(::grpc::ClientContext* context, const ::TempoWorld::SetFloatPropertyRequest* request, ::TempoScripting::Empty* response, std::function<void(::grpc::Status)>) override;
      void SetFloatProperty(::grpc::ClientContext* context, const ::TempoWorld::SetFloatPropertyRequest* request, ::TempoScripting::Empty* response, ::grpc::ClientUnaryReactor* reactor) override;
      void SetVectorProperty(::grpc::ClientContext* context, const ::TempoWorld::SetVectorPropertyRequest* request, ::TempoScripting::Empty* response, std::function<void(::grpc::Status)>) override;
      void SetVectorProperty(::grpc::ClientContext* context, const ::TempoWorld::SetVectorPropertyRequest* request, ::TempoScripting::Empty* response, ::grpc::ClientUnaryReactor* reactor) override;
      void SetRotatorProperty(::grpc::ClientContext* context, const ::TempoWorld::SetRotatorPropertyRequest* request, ::TempoScripting::Empty* response, std::function<void(::grpc::Status)>) override;
      void SetRotatorProperty(::grpc::ClientContext* context, const ::TempoWorld::SetRotatorPropertyRequest* request, ::TempoScripting::Empty* response, ::grpc::ClientUnaryReactor* reactor) override;
      void SetColorProperty(::grpc::ClientContext* context, const ::TempoWorld::SetColorPropertyRequest* request, ::TempoScripting::Empty* response, std::function<void(::grpc::Status)>) override;
      void SetColorProperty(::grpc::ClientContext* context, const ::TempoWorld::SetColorPropertyRequest* request, ::TempoScripting::Empty* response, ::grpc::ClientUnaryReactor* reactor) override;
      void SetClassProperty(::grpc::ClientContext* context, const ::TempoWorld::SetClassPropertyRequest* request, ::TempoScripting::Empty* response, std::function<void(::grpc::Status)>) override;
      void SetClassProperty(::grpc::ClientContext* context, const ::TempoWorld::SetClassPropertyRequest* request, ::TempoScripting::Empty* response, ::grpc::ClientUnaryReactor* reactor) override;
      void SetAssetProperty(::grpc::ClientContext* context, const ::TempoWorld::SetAssetPropertyRequest* request, ::TempoScripting::Empty* response, std::function<void(::grpc::Status)>) override;
      void SetAssetProperty(::grpc::ClientContext* context, const ::TempoWorld::SetAssetPropertyRequest* request, ::TempoScripting::Empty* response, ::grpc::ClientUnaryReactor* reactor) override;
      void SetActorProperty(::grpc::ClientContext* context, const ::TempoWorld::SetActorPropertyRequest* request, ::TempoScripting::Empty* response, std::function<void(::grpc::Status)>) override;
      void SetActorProperty(::grpc::ClientContext* context, const ::TempoWorld::SetActorPropertyRequest* request, ::TempoScripting::Empty* response, ::grpc::ClientUnaryReactor* reactor) override;
      void SetComponentProperty(::grpc::ClientContext* context, const ::TempoWorld::SetComponentPropertyRequest* request, ::TempoScripting::Empty* response, std::function<void(::grpc::Status)>) override;
      void SetComponentProperty(::grpc::ClientContext* context, const ::TempoWorld::SetComponentPropertyRequest* request, ::TempoScripting::Empty* response, ::grpc::ClientUnaryReactor* reactor) override;
      void SetBoolArrayProperty(::grpc::ClientContext* context, const ::TempoWorld::SetBoolArrayPropertyRequest* request, ::TempoScripting::Empty* response, std::function<void(::grpc::Status)>) override;
      void SetBoolArrayProperty(::grpc::ClientContext* context, const ::TempoWorld::SetBoolArrayPropertyRequest* request, ::TempoScripting::Empty* response, ::grpc::ClientUnaryReactor* reactor) override;
      void SetStringArrayProperty(::grpc::ClientContext* context, const ::TempoWorld::SetStringArrayPropertyRequest* request, ::TempoScripting::Empty* response, std::function<void(::grpc::Status)>) override;
      void SetStringArrayProperty(::grpc::ClientContext* context, const ::TempoWorld::SetStringArrayPropertyRequest* request, ::TempoScripting::Empty* response, ::grpc::ClientUnaryReactor* reactor) override;
      void SetEnumArrayProperty(::grpc::ClientContext* context, const ::TempoWorld::SetEnumArrayPropertyRequest* request, ::TempoScripting::Empty* response, std::function<void(::grpc::Status)>) override;
      void SetEnumArrayProperty(::grpc::ClientContext* context, const ::TempoWorld::SetEnumArrayPropertyRequest* request, ::TempoScripting::Empty* response, ::grpc::ClientUnaryReactor* reactor) override;
      void SetIntArrayProperty(::grpc::ClientContext* context, const ::TempoWorld::SetIntArrayPropertyRequest* request, ::TempoScripting::Empty* response, std::function<void(::grpc::Status)>) override;
      void SetIntArrayProperty(::grpc::ClientContext* context, const ::TempoWorld::SetIntArrayPropertyRequest* request, ::TempoScripting::Empty* response, ::grpc::ClientUnaryReactor* reactor) override;
      void SetFloatArrayProperty(::grpc::ClientContext* context, const ::TempoWorld::SetFloatArrayPropertyRequest* request, ::TempoScripting::Empty* response, std::function<void(::grpc::Status)>) override;
      void SetFloatArrayProperty(::grpc::ClientContext* context, const ::TempoWorld::SetFloatArrayPropertyRequest* request, ::TempoScripting::Empty* response, ::grpc::ClientUnaryReactor* reactor) override;
      void SetClassArrayProperty(::grpc::ClientContext* context, const ::TempoWorld::SetClassArrayPropertyRequest* request, ::TempoScripting::Empty* response, std::function<void(::grpc::Status)>) override;
      void SetClassArrayProperty(::grpc::ClientContext* context, const ::TempoWorld::SetClassArrayPropertyRequest* request, ::TempoScripting::Empty* response, ::grpc::ClientUnaryReactor* reactor) override;
      void SetAssetArrayProperty(::grpc::ClientContext* context, const ::TempoWorld::SetAssetArrayPropertyRequest* request, ::TempoScripting::Empty* response, std::function<void(::grpc::Status)>) override;
      void SetAssetArrayProperty(::grpc::ClientContext* context, const ::TempoWorld::SetAssetArrayPropertyRequest* request, ::TempoScripting::Empty* response, ::grpc::ClientUnaryReactor* reactor) override;
      void SetActorArrayProperty(::grpc::ClientContext* context, const ::TempoWorld::SetActorArrayPropertyRequest* request, ::TempoScripting::Empty* response, std::function<void(::grpc::Status)>) override;
      void SetActorArrayProperty(::grpc::ClientContext* context, const ::TempoWorld::SetActorArrayPropertyRequest* request, ::TempoScripting::Empty* response, ::grpc::ClientUnaryReactor* reactor) override;
      void SetComponentArrayProperty(::grpc::ClientContext* context, const ::TempoWorld::SetComponentArrayPropertyRequest* request, ::TempoScripting::Empty* response, std::function<void(::grpc::Status)>) override;
      void SetComponentArrayProperty(::grpc::ClientContext* context, const ::TempoWorld::SetComponentArrayPropertyRequest* request, ::TempoScripting::Empty* response, ::grpc::ClientUnaryReactor* reactor) override;
      void CallFunction(::grpc::ClientContext* context, const ::TempoWorld::CallFunctionRequest* request, ::TempoScripting::Empty* response, std::function<void(::grpc::Status)>) override;
      void CallFunction(::grpc::ClientContext* context, const ::TempoWorld::CallFunctionRequest* request, ::TempoScripting::Empty* response, ::grpc::ClientUnaryReactor* reactor) override;
     private:
      friend class Stub;
      explicit async(Stub* stub): stub_(stub) { }
      Stub* stub() { return stub_; }
      Stub* stub_;
    };
    class async* async() override { return &async_stub_; }

   private:
    std::shared_ptr< ::grpc::ChannelInterface> channel_;
    class async async_stub_{this};
    ::grpc::ClientAsyncResponseReader< ::TempoWorld::SpawnActorResponse>* AsyncSpawnActorRaw(::grpc::ClientContext* context, const ::TempoWorld::SpawnActorRequest& request, ::grpc::CompletionQueue* cq) override;
    ::grpc::ClientAsyncResponseReader< ::TempoWorld::SpawnActorResponse>* PrepareAsyncSpawnActorRaw(::grpc::ClientContext* context, const ::TempoWorld::SpawnActorRequest& request, ::grpc::CompletionQueue* cq) override;
    ::grpc::ClientAsyncResponseReader< ::TempoWorld::FinishSpawningActorResponse>* AsyncFinishSpawningActorRaw(::grpc::ClientContext* context, const ::TempoWorld::FinishSpawningActorRequest& request, ::grpc::CompletionQueue* cq) override;
    ::grpc::ClientAsyncResponseReader< ::TempoWorld::FinishSpawningActorResponse>* PrepareAsyncFinishSpawningActorRaw(::grpc::ClientContext* context, const ::TempoWorld::FinishSpawningActorRequest& request, ::grpc::CompletionQueue* cq) override;
    ::grpc::ClientAsyncResponseReader< ::TempoScripting::Empty>* AsyncDestroyActorRaw(::grpc::ClientContext* context, const ::TempoWorld::DestroyActorRequest& request, ::grpc::CompletionQueue* cq) override;
    ::grpc::ClientAsyncResponseReader< ::TempoScripting::Empty>* PrepareAsyncDestroyActorRaw(::grpc::ClientContext* context, const ::TempoWorld::DestroyActorRequest& request, ::grpc::CompletionQueue* cq) override;
    ::grpc::ClientAsyncResponseReader< ::TempoWorld::AddComponentResponse>* AsyncAddComponentRaw(::grpc::ClientContext* context, const ::TempoWorld::AddComponentRequest& request, ::grpc::CompletionQueue* cq) override;
    ::grpc::ClientAsyncResponseReader< ::TempoWorld::AddComponentResponse>* PrepareAsyncAddComponentRaw(::grpc::ClientContext* context, const ::TempoWorld::AddComponentRequest& request, ::grpc::CompletionQueue* cq) override;
    ::grpc::ClientAsyncResponseReader< ::TempoScripting::Empty>* AsyncDestroyComponentRaw(::grpc::ClientContext* context, const ::TempoWorld::DestroyComponentRequest& request, ::grpc::CompletionQueue* cq) override;
    ::grpc::ClientAsyncResponseReader< ::TempoScripting::Empty>* PrepareAsyncDestroyComponentRaw(::grpc::ClientContext* context, const ::TempoWorld::DestroyComponentRequest& request, ::grpc::CompletionQueue* cq) override;
    ::grpc::ClientAsyncResponseReader< ::TempoScripting::Empty>* AsyncSetActorTransformRaw(::grpc::ClientContext* context, const ::TempoWorld::SetActorTransformRequest& request, ::grpc::CompletionQueue* cq) override;
    ::grpc::ClientAsyncResponseReader< ::TempoScripting::Empty>* PrepareAsyncSetActorTransformRaw(::grpc::ClientContext* context, const ::TempoWorld::SetActorTransformRequest& request, ::grpc::CompletionQueue* cq) override;
    ::grpc::ClientAsyncResponseReader< ::TempoScripting::Empty>* AsyncSetComponentTransformRaw(::grpc::ClientContext* context, const ::TempoWorld::SetComponentTransformRequest& request, ::grpc::CompletionQueue* cq) override;
    ::grpc::ClientAsyncResponseReader< ::TempoScripting::Empty>* PrepareAsyncSetComponentTransformRaw(::grpc::ClientContext* context, const ::TempoWorld::SetComponentTransformRequest& request, ::grpc::CompletionQueue* cq) override;
    ::grpc::ClientAsyncResponseReader< ::TempoScripting::Empty>* AsyncActivateComponentRaw(::grpc::ClientContext* context, const ::TempoWorld::ActivateComponentRequest& request, ::grpc::CompletionQueue* cq) override;
    ::grpc::ClientAsyncResponseReader< ::TempoScripting::Empty>* PrepareAsyncActivateComponentRaw(::grpc::ClientContext* context, const ::TempoWorld::ActivateComponentRequest& request, ::grpc::CompletionQueue* cq) override;
    ::grpc::ClientAsyncResponseReader< ::TempoScripting::Empty>* AsyncDeactivateComponentRaw(::grpc::ClientContext* context, const ::TempoWorld::DeactivateComponentRequest& request, ::grpc::CompletionQueue* cq) override;
    ::grpc::ClientAsyncResponseReader< ::TempoScripting::Empty>* PrepareAsyncDeactivateComponentRaw(::grpc::ClientContext* context, const ::TempoWorld::DeactivateComponentRequest& request, ::grpc::CompletionQueue* cq) override;
    ::grpc::ClientAsyncResponseReader< ::TempoWorld::GetAllActorsResponse>* AsyncGetAllActorsRaw(::grpc::ClientContext* context, const ::TempoWorld::GetAllActorsRequest& request, ::grpc::CompletionQueue* cq) override;
    ::grpc::ClientAsyncResponseReader< ::TempoWorld::GetAllActorsResponse>* PrepareAsyncGetAllActorsRaw(::grpc::ClientContext* context, const ::TempoWorld::GetAllActorsRequest& request, ::grpc::CompletionQueue* cq) override;
    ::grpc::ClientAsyncResponseReader< ::TempoWorld::GetAllComponentsResponse>* AsyncGetAllComponentsRaw(::grpc::ClientContext* context, const ::TempoWorld::GetAllComponentsRequest& request, ::grpc::CompletionQueue* cq) override;
    ::grpc::ClientAsyncResponseReader< ::TempoWorld::GetAllComponentsResponse>* PrepareAsyncGetAllComponentsRaw(::grpc::ClientContext* context, const ::TempoWorld::GetAllComponentsRequest& request, ::grpc::CompletionQueue* cq) override;
    ::grpc::ClientAsyncResponseReader< ::TempoWorld::GetPropertiesResponse>* AsyncGetActorPropertiesRaw(::grpc::ClientContext* context, const ::TempoWorld::GetActorPropertiesRequest& request, ::grpc::CompletionQueue* cq) override;
    ::grpc::ClientAsyncResponseReader< ::TempoWorld::GetPropertiesResponse>* PrepareAsyncGetActorPropertiesRaw(::grpc::ClientContext* context, const ::TempoWorld::GetActorPropertiesRequest& request, ::grpc::CompletionQueue* cq) override;
    ::grpc::ClientAsyncResponseReader< ::TempoWorld::GetPropertiesResponse>* AsyncGetComponentPropertiesRaw(::grpc::ClientContext* context, const ::TempoWorld::GetComponentPropertiesRequest& request, ::grpc::CompletionQueue* cq) override;
    ::grpc::ClientAsyncResponseReader< ::TempoWorld::GetPropertiesResponse>* PrepareAsyncGetComponentPropertiesRaw(::grpc::ClientContext* context, const ::TempoWorld::GetComponentPropertiesRequest& request, ::grpc::CompletionQueue* cq) override;
    ::grpc::ClientAsyncResponseReader< ::TempoScripting::Empty>* AsyncSetBoolPropertyRaw(::grpc::ClientContext* context, const ::TempoWorld::SetBoolPropertyRequest& request, ::grpc::CompletionQueue* cq) override;
    ::grpc::ClientAsyncResponseReader< ::TempoScripting::Empty>* PrepareAsyncSetBoolPropertyRaw(::grpc::ClientContext* context, const ::TempoWorld::SetBoolPropertyRequest& request, ::grpc::CompletionQueue* cq) override;
    ::grpc::ClientAsyncResponseReader< ::TempoScripting::Empty>* AsyncSetStringPropertyRaw(::grpc::ClientContext* context, const ::TempoWorld::SetStringPropertyRequest& request, ::grpc::CompletionQueue* cq) override;
    ::grpc::ClientAsyncResponseReader< ::TempoScripting::Empty>* PrepareAsyncSetStringPropertyRaw(::grpc::ClientContext* context, const ::TempoWorld::SetStringPropertyRequest& request, ::grpc::CompletionQueue* cq) override;
    ::grpc::ClientAsyncResponseReader< ::TempoScripting::Empty>* AsyncSetEnumPropertyRaw(::grpc::ClientContext* context, const ::TempoWorld::SetEnumPropertyRequest& request, ::grpc::CompletionQueue* cq) override;
    ::grpc::ClientAsyncResponseReader< ::TempoScripting::Empty>* PrepareAsyncSetEnumPropertyRaw(::grpc::ClientContext* context, const ::TempoWorld::SetEnumPropertyRequest& request, ::grpc::CompletionQueue* cq) override;
    ::grpc::ClientAsyncResponseReader< ::TempoScripting::Empty>* AsyncSetIntPropertyRaw(::grpc::ClientContext* context, const ::TempoWorld::SetIntPropertyRequest& request, ::grpc::CompletionQueue* cq) override;
    ::grpc::ClientAsyncResponseReader< ::TempoScripting::Empty>* PrepareAsyncSetIntPropertyRaw(::grpc::ClientContext* context, const ::TempoWorld::SetIntPropertyRequest& request, ::grpc::CompletionQueue* cq) override;
    ::grpc::ClientAsyncResponseReader< ::TempoScripting::Empty>* AsyncSetFloatPropertyRaw(::grpc::ClientContext* context, const ::TempoWorld::SetFloatPropertyRequest& request, ::grpc::CompletionQueue* cq) override;
    ::grpc::ClientAsyncResponseReader< ::TempoScripting::Empty>* PrepareAsyncSetFloatPropertyRaw(::grpc::ClientContext* context, const ::TempoWorld::SetFloatPropertyRequest& request, ::grpc::CompletionQueue* cq) override;
    ::grpc::ClientAsyncResponseReader< ::TempoScripting::Empty>* AsyncSetVectorPropertyRaw(::grpc::ClientContext* context, const ::TempoWorld::SetVectorPropertyRequest& request, ::grpc::CompletionQueue* cq) override;
    ::grpc::ClientAsyncResponseReader< ::TempoScripting::Empty>* PrepareAsyncSetVectorPropertyRaw(::grpc::ClientContext* context, const ::TempoWorld::SetVectorPropertyRequest& request, ::grpc::CompletionQueue* cq) override;
    ::grpc::ClientAsyncResponseReader< ::TempoScripting::Empty>* AsyncSetRotatorPropertyRaw(::grpc::ClientContext* context, const ::TempoWorld::SetRotatorPropertyRequest& request, ::grpc::CompletionQueue* cq) override;
    ::grpc::ClientAsyncResponseReader< ::TempoScripting::Empty>* PrepareAsyncSetRotatorPropertyRaw(::grpc::ClientContext* context, const ::TempoWorld::SetRotatorPropertyRequest& request, ::grpc::CompletionQueue* cq) override;
    ::grpc::ClientAsyncResponseReader< ::TempoScripting::Empty>* AsyncSetColorPropertyRaw(::grpc::ClientContext* context, const ::TempoWorld::SetColorPropertyRequest& request, ::grpc::CompletionQueue* cq) override;
    ::grpc::ClientAsyncResponseReader< ::TempoScripting::Empty>* PrepareAsyncSetColorPropertyRaw(::grpc::ClientContext* context, const ::TempoWorld::SetColorPropertyRequest& request, ::grpc::CompletionQueue* cq) override;
    ::grpc::ClientAsyncResponseReader< ::TempoScripting::Empty>* AsyncSetClassPropertyRaw(::grpc::ClientContext* context, const ::TempoWorld::SetClassPropertyRequest& request, ::grpc::CompletionQueue* cq) override;
    ::grpc::ClientAsyncResponseReader< ::TempoScripting::Empty>* PrepareAsyncSetClassPropertyRaw(::grpc::ClientContext* context, const ::TempoWorld::SetClassPropertyRequest& request, ::grpc::CompletionQueue* cq) override;
    ::grpc::ClientAsyncResponseReader< ::TempoScripting::Empty>* AsyncSetAssetPropertyRaw(::grpc::ClientContext* context, const ::TempoWorld::SetAssetPropertyRequest& request, ::grpc::CompletionQueue* cq) override;
    ::grpc::ClientAsyncResponseReader< ::TempoScripting::Empty>* PrepareAsyncSetAssetPropertyRaw(::grpc::ClientContext* context, const ::TempoWorld::SetAssetPropertyRequest& request, ::grpc::CompletionQueue* cq) override;
    ::grpc::ClientAsyncResponseReader< ::TempoScripting::Empty>* AsyncSetActorPropertyRaw(::grpc::ClientContext* context, const ::TempoWorld::SetActorPropertyRequest& request, ::grpc::CompletionQueue* cq) override;
    ::grpc::ClientAsyncResponseReader< ::TempoScripting::Empty>* PrepareAsyncSetActorPropertyRaw(::grpc::ClientContext* context, const ::TempoWorld::SetActorPropertyRequest& request, ::grpc::CompletionQueue* cq) override;
    ::grpc::ClientAsyncResponseReader< ::TempoScripting::Empty>* AsyncSetComponentPropertyRaw(::grpc::ClientContext* context, const ::TempoWorld::SetComponentPropertyRequest& request, ::grpc::CompletionQueue* cq) override;
    ::grpc::ClientAsyncResponseReader< ::TempoScripting::Empty>* PrepareAsyncSetComponentPropertyRaw(::grpc::ClientContext* context, const ::TempoWorld::SetComponentPropertyRequest& request, ::grpc::CompletionQueue* cq) override;
    ::grpc::ClientAsyncResponseReader< ::TempoScripting::Empty>* AsyncSetBoolArrayPropertyRaw(::grpc::ClientContext* context, const ::TempoWorld::SetBoolArrayPropertyRequest& request, ::grpc::CompletionQueue* cq) override;
    ::grpc::ClientAsyncResponseReader< ::TempoScripting::Empty>* PrepareAsyncSetBoolArrayPropertyRaw(::grpc::ClientContext* context, const ::TempoWorld::SetBoolArrayPropertyRequest& request, ::grpc::CompletionQueue* cq) override;
    ::grpc::ClientAsyncResponseReader< ::TempoScripting::Empty>* AsyncSetStringArrayPropertyRaw(::grpc::ClientContext* context, const ::TempoWorld::SetStringArrayPropertyRequest& request, ::grpc::CompletionQueue* cq) override;
    ::grpc::ClientAsyncResponseReader< ::TempoScripting::Empty>* PrepareAsyncSetStringArrayPropertyRaw(::grpc::ClientContext* context, const ::TempoWorld::SetStringArrayPropertyRequest& request, ::grpc::CompletionQueue* cq) override;
    ::grpc::ClientAsyncResponseReader< ::TempoScripting::Empty>* AsyncSetEnumArrayPropertyRaw(::grpc::ClientContext* context, const ::TempoWorld::SetEnumArrayPropertyRequest& request, ::grpc::CompletionQueue* cq) override;
    ::grpc::ClientAsyncResponseReader< ::TempoScripting::Empty>* PrepareAsyncSetEnumArrayPropertyRaw(::grpc::ClientContext* context, const ::TempoWorld::SetEnumArrayPropertyRequest& request, ::grpc::CompletionQueue* cq) override;
    ::grpc::ClientAsyncResponseReader< ::TempoScripting::Empty>* AsyncSetIntArrayPropertyRaw(::grpc::ClientContext* context, const ::TempoWorld::SetIntArrayPropertyRequest& request, ::grpc::CompletionQueue* cq) override;
    ::grpc::ClientAsyncResponseReader< ::TempoScripting::Empty>* PrepareAsyncSetIntArrayPropertyRaw(::grpc::ClientContext* context, const ::TempoWorld::SetIntArrayPropertyRequest& request, ::grpc::CompletionQueue* cq) override;
    ::grpc::ClientAsyncResponseReader< ::TempoScripting::Empty>* AsyncSetFloatArrayPropertyRaw(::grpc::ClientContext* context, const ::TempoWorld::SetFloatArrayPropertyRequest& request, ::grpc::CompletionQueue* cq) override;
    ::grpc::ClientAsyncResponseReader< ::TempoScripting::Empty>* PrepareAsyncSetFloatArrayPropertyRaw(::grpc::ClientContext* context, const ::TempoWorld::SetFloatArrayPropertyRequest& request, ::grpc::CompletionQueue* cq) override;
    ::grpc::ClientAsyncResponseReader< ::TempoScripting::Empty>* AsyncSetClassArrayPropertyRaw(::grpc::ClientContext* context, const ::TempoWorld::SetClassArrayPropertyRequest& request, ::grpc::CompletionQueue* cq) override;
    ::grpc::ClientAsyncResponseReader< ::TempoScripting::Empty>* PrepareAsyncSetClassArrayPropertyRaw(::grpc::ClientContext* context, const ::TempoWorld::SetClassArrayPropertyRequest& request, ::grpc::CompletionQueue* cq) override;
    ::grpc::ClientAsyncResponseReader< ::TempoScripting::Empty>* AsyncSetAssetArrayPropertyRaw(::grpc::ClientContext* context, const ::TempoWorld::SetAssetArrayPropertyRequest& request, ::grpc::CompletionQueue* cq) override;
    ::grpc::ClientAsyncResponseReader< ::TempoScripting::Empty>* PrepareAsyncSetAssetArrayPropertyRaw(::grpc::ClientContext* context, const ::TempoWorld::SetAssetArrayPropertyRequest& request, ::grpc::CompletionQueue* cq) override;
    ::grpc::ClientAsyncResponseReader< ::TempoScripting::Empty>* AsyncSetActorArrayPropertyRaw(::grpc::ClientContext* context, const ::TempoWorld::SetActorArrayPropertyRequest& request, ::grpc::CompletionQueue* cq) override;
    ::grpc::ClientAsyncResponseReader< ::TempoScripting::Empty>* PrepareAsyncSetActorArrayPropertyRaw(::grpc::ClientContext* context, const ::TempoWorld::SetActorArrayPropertyRequest& request, ::grpc::CompletionQueue* cq) override;
    ::grpc::ClientAsyncResponseReader< ::TempoScripting::Empty>* AsyncSetComponentArrayPropertyRaw(::grpc::ClientContext* context, const ::TempoWorld::SetComponentArrayPropertyRequest& request, ::grpc::CompletionQueue* cq) override;
    ::grpc::ClientAsyncResponseReader< ::TempoScripting::Empty>* PrepareAsyncSetComponentArrayPropertyRaw(::grpc::ClientContext* context, const ::TempoWorld::SetComponentArrayPropertyRequest& request, ::grpc::CompletionQueue* cq) override;
    ::grpc::ClientAsyncResponseReader< ::TempoScripting::Empty>* AsyncCallFunctionRaw(::grpc::ClientContext* context, const ::TempoWorld::CallFunctionRequest& request, ::grpc::CompletionQueue* cq) override;
    ::grpc::ClientAsyncResponseReader< ::TempoScripting::Empty>* PrepareAsyncCallFunctionRaw(::grpc::ClientContext* context, const ::TempoWorld::CallFunctionRequest& request, ::grpc::CompletionQueue* cq) override;
    const ::grpc::internal::RpcMethod rpcmethod_SpawnActor_;
    const ::grpc::internal::RpcMethod rpcmethod_FinishSpawningActor_;
    const ::grpc::internal::RpcMethod rpcmethod_DestroyActor_;
    const ::grpc::internal::RpcMethod rpcmethod_AddComponent_;
    const ::grpc::internal::RpcMethod rpcmethod_DestroyComponent_;
    const ::grpc::internal::RpcMethod rpcmethod_SetActorTransform_;
    const ::grpc::internal::RpcMethod rpcmethod_SetComponentTransform_;
    const ::grpc::internal::RpcMethod rpcmethod_ActivateComponent_;
    const ::grpc::internal::RpcMethod rpcmethod_DeactivateComponent_;
    const ::grpc::internal::RpcMethod rpcmethod_GetAllActors_;
    const ::grpc::internal::RpcMethod rpcmethod_GetAllComponents_;
    const ::grpc::internal::RpcMethod rpcmethod_GetActorProperties_;
    const ::grpc::internal::RpcMethod rpcmethod_GetComponentProperties_;
    const ::grpc::internal::RpcMethod rpcmethod_SetBoolProperty_;
    const ::grpc::internal::RpcMethod rpcmethod_SetStringProperty_;
    const ::grpc::internal::RpcMethod rpcmethod_SetEnumProperty_;
    const ::grpc::internal::RpcMethod rpcmethod_SetIntProperty_;
    const ::grpc::internal::RpcMethod rpcmethod_SetFloatProperty_;
    const ::grpc::internal::RpcMethod rpcmethod_SetVectorProperty_;
    const ::grpc::internal::RpcMethod rpcmethod_SetRotatorProperty_;
    const ::grpc::internal::RpcMethod rpcmethod_SetColorProperty_;
    const ::grpc::internal::RpcMethod rpcmethod_SetClassProperty_;
    const ::grpc::internal::RpcMethod rpcmethod_SetAssetProperty_;
    const ::grpc::internal::RpcMethod rpcmethod_SetActorProperty_;
    const ::grpc::internal::RpcMethod rpcmethod_SetComponentProperty_;
    const ::grpc::internal::RpcMethod rpcmethod_SetBoolArrayProperty_;
    const ::grpc::internal::RpcMethod rpcmethod_SetStringArrayProperty_;
    const ::grpc::internal::RpcMethod rpcmethod_SetEnumArrayProperty_;
    const ::grpc::internal::RpcMethod rpcmethod_SetIntArrayProperty_;
    const ::grpc::internal::RpcMethod rpcmethod_SetFloatArrayProperty_;
    const ::grpc::internal::RpcMethod rpcmethod_SetClassArrayProperty_;
    const ::grpc::internal::RpcMethod rpcmethod_SetAssetArrayProperty_;
    const ::grpc::internal::RpcMethod rpcmethod_SetActorArrayProperty_;
    const ::grpc::internal::RpcMethod rpcmethod_SetComponentArrayProperty_;
    const ::grpc::internal::RpcMethod rpcmethod_CallFunction_;
  };
  static std::unique_ptr<Stub> NewStub(const std::shared_ptr< ::grpc::ChannelInterface>& channel, const ::grpc::StubOptions& options = ::grpc::StubOptions());

  class Service : public ::grpc::Service {
   public:
    Service();
    virtual ~Service();
    virtual ::grpc::Status SpawnActor(::grpc::ServerContext* context, const ::TempoWorld::SpawnActorRequest* request, ::TempoWorld::SpawnActorResponse* response);
    virtual ::grpc::Status FinishSpawningActor(::grpc::ServerContext* context, const ::TempoWorld::FinishSpawningActorRequest* request, ::TempoWorld::FinishSpawningActorResponse* response);
    virtual ::grpc::Status DestroyActor(::grpc::ServerContext* context, const ::TempoWorld::DestroyActorRequest* request, ::TempoScripting::Empty* response);
    virtual ::grpc::Status AddComponent(::grpc::ServerContext* context, const ::TempoWorld::AddComponentRequest* request, ::TempoWorld::AddComponentResponse* response);
    virtual ::grpc::Status DestroyComponent(::grpc::ServerContext* context, const ::TempoWorld::DestroyComponentRequest* request, ::TempoScripting::Empty* response);
    virtual ::grpc::Status SetActorTransform(::grpc::ServerContext* context, const ::TempoWorld::SetActorTransformRequest* request, ::TempoScripting::Empty* response);
    virtual ::grpc::Status SetComponentTransform(::grpc::ServerContext* context, const ::TempoWorld::SetComponentTransformRequest* request, ::TempoScripting::Empty* response);
    virtual ::grpc::Status ActivateComponent(::grpc::ServerContext* context, const ::TempoWorld::ActivateComponentRequest* request, ::TempoScripting::Empty* response);
    virtual ::grpc::Status DeactivateComponent(::grpc::ServerContext* context, const ::TempoWorld::DeactivateComponentRequest* request, ::TempoScripting::Empty* response);
    virtual ::grpc::Status GetAllActors(::grpc::ServerContext* context, const ::TempoWorld::GetAllActorsRequest* request, ::TempoWorld::GetAllActorsResponse* response);
    virtual ::grpc::Status GetAllComponents(::grpc::ServerContext* context, const ::TempoWorld::GetAllComponentsRequest* request, ::TempoWorld::GetAllComponentsResponse* response);
    virtual ::grpc::Status GetActorProperties(::grpc::ServerContext* context, const ::TempoWorld::GetActorPropertiesRequest* request, ::TempoWorld::GetPropertiesResponse* response);
    virtual ::grpc::Status GetComponentProperties(::grpc::ServerContext* context, const ::TempoWorld::GetComponentPropertiesRequest* request, ::TempoWorld::GetPropertiesResponse* response);
    virtual ::grpc::Status SetBoolProperty(::grpc::ServerContext* context, const ::TempoWorld::SetBoolPropertyRequest* request, ::TempoScripting::Empty* response);
    virtual ::grpc::Status SetStringProperty(::grpc::ServerContext* context, const ::TempoWorld::SetStringPropertyRequest* request, ::TempoScripting::Empty* response);
    virtual ::grpc::Status SetEnumProperty(::grpc::ServerContext* context, const ::TempoWorld::SetEnumPropertyRequest* request, ::TempoScripting::Empty* response);
    virtual ::grpc::Status SetIntProperty(::grpc::ServerContext* context, const ::TempoWorld::SetIntPropertyRequest* request, ::TempoScripting::Empty* response);
    virtual ::grpc::Status SetFloatProperty(::grpc::ServerContext* context, const ::TempoWorld::SetFloatPropertyRequest* request, ::TempoScripting::Empty* response);
    virtual ::grpc::Status SetVectorProperty(::grpc::ServerContext* context, const ::TempoWorld::SetVectorPropertyRequest* request, ::TempoScripting::Empty* response);
    virtual ::grpc::Status SetRotatorProperty(::grpc::ServerContext* context, const ::TempoWorld::SetRotatorPropertyRequest* request, ::TempoScripting::Empty* response);
    virtual ::grpc::Status SetColorProperty(::grpc::ServerContext* context, const ::TempoWorld::SetColorPropertyRequest* request, ::TempoScripting::Empty* response);
    virtual ::grpc::Status SetClassProperty(::grpc::ServerContext* context, const ::TempoWorld::SetClassPropertyRequest* request, ::TempoScripting::Empty* response);
    virtual ::grpc::Status SetAssetProperty(::grpc::ServerContext* context, const ::TempoWorld::SetAssetPropertyRequest* request, ::TempoScripting::Empty* response);
    virtual ::grpc::Status SetActorProperty(::grpc::ServerContext* context, const ::TempoWorld::SetActorPropertyRequest* request, ::TempoScripting::Empty* response);
    virtual ::grpc::Status SetComponentProperty(::grpc::ServerContext* context, const ::TempoWorld::SetComponentPropertyRequest* request, ::TempoScripting::Empty* response);
    virtual ::grpc::Status SetBoolArrayProperty(::grpc::ServerContext* context, const ::TempoWorld::SetBoolArrayPropertyRequest* request, ::TempoScripting::Empty* response);
    virtual ::grpc::Status SetStringArrayProperty(::grpc::ServerContext* context, const ::TempoWorld::SetStringArrayPropertyRequest* request, ::TempoScripting::Empty* response);
    virtual ::grpc::Status SetEnumArrayProperty(::grpc::ServerContext* context, const ::TempoWorld::SetEnumArrayPropertyRequest* request, ::TempoScripting::Empty* response);
    virtual ::grpc::Status SetIntArrayProperty(::grpc::ServerContext* context, const ::TempoWorld::SetIntArrayPropertyRequest* request, ::TempoScripting::Empty* response);
    virtual ::grpc::Status SetFloatArrayProperty(::grpc::ServerContext* context, const ::TempoWorld::SetFloatArrayPropertyRequest* request, ::TempoScripting::Empty* response);
    virtual ::grpc::Status SetClassArrayProperty(::grpc::ServerContext* context, const ::TempoWorld::SetClassArrayPropertyRequest* request, ::TempoScripting::Empty* response);
    virtual ::grpc::Status SetAssetArrayProperty(::grpc::ServerContext* context, const ::TempoWorld::SetAssetArrayPropertyRequest* request, ::TempoScripting::Empty* response);
    virtual ::grpc::Status SetActorArrayProperty(::grpc::ServerContext* context, const ::TempoWorld::SetActorArrayPropertyRequest* request, ::TempoScripting::Empty* response);
    virtual ::grpc::Status SetComponentArrayProperty(::grpc::ServerContext* context, const ::TempoWorld::SetComponentArrayPropertyRequest* request, ::TempoScripting::Empty* response);
    virtual ::grpc::Status CallFunction(::grpc::ServerContext* context, const ::TempoWorld::CallFunctionRequest* request, ::TempoScripting::Empty* response);
  };
  template <class BaseClass>
  class WithAsyncMethod_SpawnActor : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithAsyncMethod_SpawnActor() {
      ::grpc::Service::MarkMethodAsync(0);
    }
    ~WithAsyncMethod_SpawnActor() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status SpawnActor(::grpc::ServerContext* /*context*/, const ::TempoWorld::SpawnActorRequest* /*request*/, ::TempoWorld::SpawnActorResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    void RequestSpawnActor(::grpc::ServerContext* context, ::TempoWorld::SpawnActorRequest* request, ::grpc::ServerAsyncResponseWriter< ::TempoWorld::SpawnActorResponse>* response, ::grpc::CompletionQueue* new_call_cq, ::grpc::ServerCompletionQueue* notification_cq, void *tag) {
      ::grpc::Service::RequestAsyncUnary(0, context, request, response, new_call_cq, notification_cq, tag);
    }
  };
  template <class BaseClass>
  class WithAsyncMethod_FinishSpawningActor : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithAsyncMethod_FinishSpawningActor() {
      ::grpc::Service::MarkMethodAsync(1);
    }
    ~WithAsyncMethod_FinishSpawningActor() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status FinishSpawningActor(::grpc::ServerContext* /*context*/, const ::TempoWorld::FinishSpawningActorRequest* /*request*/, ::TempoWorld::FinishSpawningActorResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    void RequestFinishSpawningActor(::grpc::ServerContext* context, ::TempoWorld::FinishSpawningActorRequest* request, ::grpc::ServerAsyncResponseWriter< ::TempoWorld::FinishSpawningActorResponse>* response, ::grpc::CompletionQueue* new_call_cq, ::grpc::ServerCompletionQueue* notification_cq, void *tag) {
      ::grpc::Service::RequestAsyncUnary(1, context, request, response, new_call_cq, notification_cq, tag);
    }
  };
  template <class BaseClass>
  class WithAsyncMethod_DestroyActor : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithAsyncMethod_DestroyActor() {
      ::grpc::Service::MarkMethodAsync(2);
    }
    ~WithAsyncMethod_DestroyActor() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status DestroyActor(::grpc::ServerContext* /*context*/, const ::TempoWorld::DestroyActorRequest* /*request*/, ::TempoScripting::Empty* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    void RequestDestroyActor(::grpc::ServerContext* context, ::TempoWorld::DestroyActorRequest* request, ::grpc::ServerAsyncResponseWriter< ::TempoScripting::Empty>* response, ::grpc::CompletionQueue* new_call_cq, ::grpc::ServerCompletionQueue* notification_cq, void *tag) {
      ::grpc::Service::RequestAsyncUnary(2, context, request, response, new_call_cq, notification_cq, tag);
    }
  };
  template <class BaseClass>
  class WithAsyncMethod_AddComponent : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithAsyncMethod_AddComponent() {
      ::grpc::Service::MarkMethodAsync(3);
    }
    ~WithAsyncMethod_AddComponent() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status AddComponent(::grpc::ServerContext* /*context*/, const ::TempoWorld::AddComponentRequest* /*request*/, ::TempoWorld::AddComponentResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    void RequestAddComponent(::grpc::ServerContext* context, ::TempoWorld::AddComponentRequest* request, ::grpc::ServerAsyncResponseWriter< ::TempoWorld::AddComponentResponse>* response, ::grpc::CompletionQueue* new_call_cq, ::grpc::ServerCompletionQueue* notification_cq, void *tag) {
      ::grpc::Service::RequestAsyncUnary(3, context, request, response, new_call_cq, notification_cq, tag);
    }
  };
  template <class BaseClass>
  class WithAsyncMethod_DestroyComponent : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithAsyncMethod_DestroyComponent() {
      ::grpc::Service::MarkMethodAsync(4);
    }
    ~WithAsyncMethod_DestroyComponent() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status DestroyComponent(::grpc::ServerContext* /*context*/, const ::TempoWorld::DestroyComponentRequest* /*request*/, ::TempoScripting::Empty* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    void RequestDestroyComponent(::grpc::ServerContext* context, ::TempoWorld::DestroyComponentRequest* request, ::grpc::ServerAsyncResponseWriter< ::TempoScripting::Empty>* response, ::grpc::CompletionQueue* new_call_cq, ::grpc::ServerCompletionQueue* notification_cq, void *tag) {
      ::grpc::Service::RequestAsyncUnary(4, context, request, response, new_call_cq, notification_cq, tag);
    }
  };
  template <class BaseClass>
  class WithAsyncMethod_SetActorTransform : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithAsyncMethod_SetActorTransform() {
      ::grpc::Service::MarkMethodAsync(5);
    }
    ~WithAsyncMethod_SetActorTransform() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status SetActorTransform(::grpc::ServerContext* /*context*/, const ::TempoWorld::SetActorTransformRequest* /*request*/, ::TempoScripting::Empty* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    void RequestSetActorTransform(::grpc::ServerContext* context, ::TempoWorld::SetActorTransformRequest* request, ::grpc::ServerAsyncResponseWriter< ::TempoScripting::Empty>* response, ::grpc::CompletionQueue* new_call_cq, ::grpc::ServerCompletionQueue* notification_cq, void *tag) {
      ::grpc::Service::RequestAsyncUnary(5, context, request, response, new_call_cq, notification_cq, tag);
    }
  };
  template <class BaseClass>
  class WithAsyncMethod_SetComponentTransform : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithAsyncMethod_SetComponentTransform() {
      ::grpc::Service::MarkMethodAsync(6);
    }
    ~WithAsyncMethod_SetComponentTransform() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status SetComponentTransform(::grpc::ServerContext* /*context*/, const ::TempoWorld::SetComponentTransformRequest* /*request*/, ::TempoScripting::Empty* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    void RequestSetComponentTransform(::grpc::ServerContext* context, ::TempoWorld::SetComponentTransformRequest* request, ::grpc::ServerAsyncResponseWriter< ::TempoScripting::Empty>* response, ::grpc::CompletionQueue* new_call_cq, ::grpc::ServerCompletionQueue* notification_cq, void *tag) {
      ::grpc::Service::RequestAsyncUnary(6, context, request, response, new_call_cq, notification_cq, tag);
    }
  };
  template <class BaseClass>
  class WithAsyncMethod_ActivateComponent : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithAsyncMethod_ActivateComponent() {
      ::grpc::Service::MarkMethodAsync(7);
    }
    ~WithAsyncMethod_ActivateComponent() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status ActivateComponent(::grpc::ServerContext* /*context*/, const ::TempoWorld::ActivateComponentRequest* /*request*/, ::TempoScripting::Empty* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    void RequestActivateComponent(::grpc::ServerContext* context, ::TempoWorld::ActivateComponentRequest* request, ::grpc::ServerAsyncResponseWriter< ::TempoScripting::Empty>* response, ::grpc::CompletionQueue* new_call_cq, ::grpc::ServerCompletionQueue* notification_cq, void *tag) {
      ::grpc::Service::RequestAsyncUnary(7, context, request, response, new_call_cq, notification_cq, tag);
    }
  };
  template <class BaseClass>
  class WithAsyncMethod_DeactivateComponent : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithAsyncMethod_DeactivateComponent() {
      ::grpc::Service::MarkMethodAsync(8);
    }
    ~WithAsyncMethod_DeactivateComponent() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status DeactivateComponent(::grpc::ServerContext* /*context*/, const ::TempoWorld::DeactivateComponentRequest* /*request*/, ::TempoScripting::Empty* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    void RequestDeactivateComponent(::grpc::ServerContext* context, ::TempoWorld::DeactivateComponentRequest* request, ::grpc::ServerAsyncResponseWriter< ::TempoScripting::Empty>* response, ::grpc::CompletionQueue* new_call_cq, ::grpc::ServerCompletionQueue* notification_cq, void *tag) {
      ::grpc::Service::RequestAsyncUnary(8, context, request, response, new_call_cq, notification_cq, tag);
    }
  };
  template <class BaseClass>
  class WithAsyncMethod_GetAllActors : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithAsyncMethod_GetAllActors() {
      ::grpc::Service::MarkMethodAsync(9);
    }
    ~WithAsyncMethod_GetAllActors() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status GetAllActors(::grpc::ServerContext* /*context*/, const ::TempoWorld::GetAllActorsRequest* /*request*/, ::TempoWorld::GetAllActorsResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    void RequestGetAllActors(::grpc::ServerContext* context, ::TempoWorld::GetAllActorsRequest* request, ::grpc::ServerAsyncResponseWriter< ::TempoWorld::GetAllActorsResponse>* response, ::grpc::CompletionQueue* new_call_cq, ::grpc::ServerCompletionQueue* notification_cq, void *tag) {
      ::grpc::Service::RequestAsyncUnary(9, context, request, response, new_call_cq, notification_cq, tag);
    }
  };
  template <class BaseClass>
  class WithAsyncMethod_GetAllComponents : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithAsyncMethod_GetAllComponents() {
      ::grpc::Service::MarkMethodAsync(10);
    }
    ~WithAsyncMethod_GetAllComponents() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status GetAllComponents(::grpc::ServerContext* /*context*/, const ::TempoWorld::GetAllComponentsRequest* /*request*/, ::TempoWorld::GetAllComponentsResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    void RequestGetAllComponents(::grpc::ServerContext* context, ::TempoWorld::GetAllComponentsRequest* request, ::grpc::ServerAsyncResponseWriter< ::TempoWorld::GetAllComponentsResponse>* response, ::grpc::CompletionQueue* new_call_cq, ::grpc::ServerCompletionQueue* notification_cq, void *tag) {
      ::grpc::Service::RequestAsyncUnary(10, context, request, response, new_call_cq, notification_cq, tag);
    }
  };
  template <class BaseClass>
  class WithAsyncMethod_GetActorProperties : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithAsyncMethod_GetActorProperties() {
      ::grpc::Service::MarkMethodAsync(11);
    }
    ~WithAsyncMethod_GetActorProperties() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status GetActorProperties(::grpc::ServerContext* /*context*/, const ::TempoWorld::GetActorPropertiesRequest* /*request*/, ::TempoWorld::GetPropertiesResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    void RequestGetActorProperties(::grpc::ServerContext* context, ::TempoWorld::GetActorPropertiesRequest* request, ::grpc::ServerAsyncResponseWriter< ::TempoWorld::GetPropertiesResponse>* response, ::grpc::CompletionQueue* new_call_cq, ::grpc::ServerCompletionQueue* notification_cq, void *tag) {
      ::grpc::Service::RequestAsyncUnary(11, context, request, response, new_call_cq, notification_cq, tag);
    }
  };
  template <class BaseClass>
  class WithAsyncMethod_GetComponentProperties : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithAsyncMethod_GetComponentProperties() {
      ::grpc::Service::MarkMethodAsync(12);
    }
    ~WithAsyncMethod_GetComponentProperties() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status GetComponentProperties(::grpc::ServerContext* /*context*/, const ::TempoWorld::GetComponentPropertiesRequest* /*request*/, ::TempoWorld::GetPropertiesResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    void RequestGetComponentProperties(::grpc::ServerContext* context, ::TempoWorld::GetComponentPropertiesRequest* request, ::grpc::ServerAsyncResponseWriter< ::TempoWorld::GetPropertiesResponse>* response, ::grpc::CompletionQueue* new_call_cq, ::grpc::ServerCompletionQueue* notification_cq, void *tag) {
      ::grpc::Service::RequestAsyncUnary(12, context, request, response, new_call_cq, notification_cq, tag);
    }
  };
  template <class BaseClass>
  class WithAsyncMethod_SetBoolProperty : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithAsyncMethod_SetBoolProperty() {
      ::grpc::Service::MarkMethodAsync(13);
    }
    ~WithAsyncMethod_SetBoolProperty() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status SetBoolProperty(::grpc::ServerContext* /*context*/, const ::TempoWorld::SetBoolPropertyRequest* /*request*/, ::TempoScripting::Empty* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    void RequestSetBoolProperty(::grpc::ServerContext* context, ::TempoWorld::SetBoolPropertyRequest* request, ::grpc::ServerAsyncResponseWriter< ::TempoScripting::Empty>* response, ::grpc::CompletionQueue* new_call_cq, ::grpc::ServerCompletionQueue* notification_cq, void *tag) {
      ::grpc::Service::RequestAsyncUnary(13, context, request, response, new_call_cq, notification_cq, tag);
    }
  };
  template <class BaseClass>
  class WithAsyncMethod_SetStringProperty : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithAsyncMethod_SetStringProperty() {
      ::grpc::Service::MarkMethodAsync(14);
    }
    ~WithAsyncMethod_SetStringProperty() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status SetStringProperty(::grpc::ServerContext* /*context*/, const ::TempoWorld::SetStringPropertyRequest* /*request*/, ::TempoScripting::Empty* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    void RequestSetStringProperty(::grpc::ServerContext* context, ::TempoWorld::SetStringPropertyRequest* request, ::grpc::ServerAsyncResponseWriter< ::TempoScripting::Empty>* response, ::grpc::CompletionQueue* new_call_cq, ::grpc::ServerCompletionQueue* notification_cq, void *tag) {
      ::grpc::Service::RequestAsyncUnary(14, context, request, response, new_call_cq, notification_cq, tag);
    }
  };
  template <class BaseClass>
  class WithAsyncMethod_SetEnumProperty : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithAsyncMethod_SetEnumProperty() {
      ::grpc::Service::MarkMethodAsync(15);
    }
    ~WithAsyncMethod_SetEnumProperty() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status SetEnumProperty(::grpc::ServerContext* /*context*/, const ::TempoWorld::SetEnumPropertyRequest* /*request*/, ::TempoScripting::Empty* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    void RequestSetEnumProperty(::grpc::ServerContext* context, ::TempoWorld::SetEnumPropertyRequest* request, ::grpc::ServerAsyncResponseWriter< ::TempoScripting::Empty>* response, ::grpc::CompletionQueue* new_call_cq, ::grpc::ServerCompletionQueue* notification_cq, void *tag) {
      ::grpc::Service::RequestAsyncUnary(15, context, request, response, new_call_cq, notification_cq, tag);
    }
  };
  template <class BaseClass>
  class WithAsyncMethod_SetIntProperty : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithAsyncMethod_SetIntProperty() {
      ::grpc::Service::MarkMethodAsync(16);
    }
    ~WithAsyncMethod_SetIntProperty() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status SetIntProperty(::grpc::ServerContext* /*context*/, const ::TempoWorld::SetIntPropertyRequest* /*request*/, ::TempoScripting::Empty* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    void RequestSetIntProperty(::grpc::ServerContext* context, ::TempoWorld::SetIntPropertyRequest* request, ::grpc::ServerAsyncResponseWriter< ::TempoScripting::Empty>* response, ::grpc::CompletionQueue* new_call_cq, ::grpc::ServerCompletionQueue* notification_cq, void *tag) {
      ::grpc::Service::RequestAsyncUnary(16, context, request, response, new_call_cq, notification_cq, tag);
    }
  };
  template <class BaseClass>
  class WithAsyncMethod_SetFloatProperty : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithAsyncMethod_SetFloatProperty() {
      ::grpc::Service::MarkMethodAsync(17);
    }
    ~WithAsyncMethod_SetFloatProperty() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status SetFloatProperty(::grpc::ServerContext* /*context*/, const ::TempoWorld::SetFloatPropertyRequest* /*request*/, ::TempoScripting::Empty* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    void RequestSetFloatProperty(::grpc::ServerContext* context, ::TempoWorld::SetFloatPropertyRequest* request, ::grpc::ServerAsyncResponseWriter< ::TempoScripting::Empty>* response, ::grpc::CompletionQueue* new_call_cq, ::grpc::ServerCompletionQueue* notification_cq, void *tag) {
      ::grpc::Service::RequestAsyncUnary(17, context, request, response, new_call_cq, notification_cq, tag);
    }
  };
  template <class BaseClass>
  class WithAsyncMethod_SetVectorProperty : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithAsyncMethod_SetVectorProperty() {
      ::grpc::Service::MarkMethodAsync(18);
    }
    ~WithAsyncMethod_SetVectorProperty() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status SetVectorProperty(::grpc::ServerContext* /*context*/, const ::TempoWorld::SetVectorPropertyRequest* /*request*/, ::TempoScripting::Empty* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    void RequestSetVectorProperty(::grpc::ServerContext* context, ::TempoWorld::SetVectorPropertyRequest* request, ::grpc::ServerAsyncResponseWriter< ::TempoScripting::Empty>* response, ::grpc::CompletionQueue* new_call_cq, ::grpc::ServerCompletionQueue* notification_cq, void *tag) {
      ::grpc::Service::RequestAsyncUnary(18, context, request, response, new_call_cq, notification_cq, tag);
    }
  };
  template <class BaseClass>
  class WithAsyncMethod_SetRotatorProperty : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithAsyncMethod_SetRotatorProperty() {
      ::grpc::Service::MarkMethodAsync(19);
    }
    ~WithAsyncMethod_SetRotatorProperty() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status SetRotatorProperty(::grpc::ServerContext* /*context*/, const ::TempoWorld::SetRotatorPropertyRequest* /*request*/, ::TempoScripting::Empty* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    void RequestSetRotatorProperty(::grpc::ServerContext* context, ::TempoWorld::SetRotatorPropertyRequest* request, ::grpc::ServerAsyncResponseWriter< ::TempoScripting::Empty>* response, ::grpc::CompletionQueue* new_call_cq, ::grpc::ServerCompletionQueue* notification_cq, void *tag) {
      ::grpc::Service::RequestAsyncUnary(19, context, request, response, new_call_cq, notification_cq, tag);
    }
  };
  template <class BaseClass>
  class WithAsyncMethod_SetColorProperty : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithAsyncMethod_SetColorProperty() {
      ::grpc::Service::MarkMethodAsync(20);
    }
    ~WithAsyncMethod_SetColorProperty() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status SetColorProperty(::grpc::ServerContext* /*context*/, const ::TempoWorld::SetColorPropertyRequest* /*request*/, ::TempoScripting::Empty* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    void RequestSetColorProperty(::grpc::ServerContext* context, ::TempoWorld::SetColorPropertyRequest* request, ::grpc::ServerAsyncResponseWriter< ::TempoScripting::Empty>* response, ::grpc::CompletionQueue* new_call_cq, ::grpc::ServerCompletionQueue* notification_cq, void *tag) {
      ::grpc::Service::RequestAsyncUnary(20, context, request, response, new_call_cq, notification_cq, tag);
    }
  };
  template <class BaseClass>
  class WithAsyncMethod_SetClassProperty : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithAsyncMethod_SetClassProperty() {
      ::grpc::Service::MarkMethodAsync(21);
    }
    ~WithAsyncMethod_SetClassProperty() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status SetClassProperty(::grpc::ServerContext* /*context*/, const ::TempoWorld::SetClassPropertyRequest* /*request*/, ::TempoScripting::Empty* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    void RequestSetClassProperty(::grpc::ServerContext* context, ::TempoWorld::SetClassPropertyRequest* request, ::grpc::ServerAsyncResponseWriter< ::TempoScripting::Empty>* response, ::grpc::CompletionQueue* new_call_cq, ::grpc::ServerCompletionQueue* notification_cq, void *tag) {
      ::grpc::Service::RequestAsyncUnary(21, context, request, response, new_call_cq, notification_cq, tag);
    }
  };
  template <class BaseClass>
  class WithAsyncMethod_SetAssetProperty : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithAsyncMethod_SetAssetProperty() {
      ::grpc::Service::MarkMethodAsync(22);
    }
    ~WithAsyncMethod_SetAssetProperty() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status SetAssetProperty(::grpc::ServerContext* /*context*/, const ::TempoWorld::SetAssetPropertyRequest* /*request*/, ::TempoScripting::Empty* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    void RequestSetAssetProperty(::grpc::ServerContext* context, ::TempoWorld::SetAssetPropertyRequest* request, ::grpc::ServerAsyncResponseWriter< ::TempoScripting::Empty>* response, ::grpc::CompletionQueue* new_call_cq, ::grpc::ServerCompletionQueue* notification_cq, void *tag) {
      ::grpc::Service::RequestAsyncUnary(22, context, request, response, new_call_cq, notification_cq, tag);
    }
  };
  template <class BaseClass>
  class WithAsyncMethod_SetActorProperty : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithAsyncMethod_SetActorProperty() {
      ::grpc::Service::MarkMethodAsync(23);
    }
    ~WithAsyncMethod_SetActorProperty() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status SetActorProperty(::grpc::ServerContext* /*context*/, const ::TempoWorld::SetActorPropertyRequest* /*request*/, ::TempoScripting::Empty* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    void RequestSetActorProperty(::grpc::ServerContext* context, ::TempoWorld::SetActorPropertyRequest* request, ::grpc::ServerAsyncResponseWriter< ::TempoScripting::Empty>* response, ::grpc::CompletionQueue* new_call_cq, ::grpc::ServerCompletionQueue* notification_cq, void *tag) {
      ::grpc::Service::RequestAsyncUnary(23, context, request, response, new_call_cq, notification_cq, tag);
    }
  };
  template <class BaseClass>
  class WithAsyncMethod_SetComponentProperty : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithAsyncMethod_SetComponentProperty() {
      ::grpc::Service::MarkMethodAsync(24);
    }
    ~WithAsyncMethod_SetComponentProperty() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status SetComponentProperty(::grpc::ServerContext* /*context*/, const ::TempoWorld::SetComponentPropertyRequest* /*request*/, ::TempoScripting::Empty* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    void RequestSetComponentProperty(::grpc::ServerContext* context, ::TempoWorld::SetComponentPropertyRequest* request, ::grpc::ServerAsyncResponseWriter< ::TempoScripting::Empty>* response, ::grpc::CompletionQueue* new_call_cq, ::grpc::ServerCompletionQueue* notification_cq, void *tag) {
      ::grpc::Service::RequestAsyncUnary(24, context, request, response, new_call_cq, notification_cq, tag);
    }
  };
  template <class BaseClass>
  class WithAsyncMethod_SetBoolArrayProperty : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithAsyncMethod_SetBoolArrayProperty() {
      ::grpc::Service::MarkMethodAsync(25);
    }
    ~WithAsyncMethod_SetBoolArrayProperty() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status SetBoolArrayProperty(::grpc::ServerContext* /*context*/, const ::TempoWorld::SetBoolArrayPropertyRequest* /*request*/, ::TempoScripting::Empty* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    void RequestSetBoolArrayProperty(::grpc::ServerContext* context, ::TempoWorld::SetBoolArrayPropertyRequest* request, ::grpc::ServerAsyncResponseWriter< ::TempoScripting::Empty>* response, ::grpc::CompletionQueue* new_call_cq, ::grpc::ServerCompletionQueue* notification_cq, void *tag) {
      ::grpc::Service::RequestAsyncUnary(25, context, request, response, new_call_cq, notification_cq, tag);
    }
  };
  template <class BaseClass>
  class WithAsyncMethod_SetStringArrayProperty : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithAsyncMethod_SetStringArrayProperty() {
      ::grpc::Service::MarkMethodAsync(26);
    }
    ~WithAsyncMethod_SetStringArrayProperty() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status SetStringArrayProperty(::grpc::ServerContext* /*context*/, const ::TempoWorld::SetStringArrayPropertyRequest* /*request*/, ::TempoScripting::Empty* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    void RequestSetStringArrayProperty(::grpc::ServerContext* context, ::TempoWorld::SetStringArrayPropertyRequest* request, ::grpc::ServerAsyncResponseWriter< ::TempoScripting::Empty>* response, ::grpc::CompletionQueue* new_call_cq, ::grpc::ServerCompletionQueue* notification_cq, void *tag) {
      ::grpc::Service::RequestAsyncUnary(26, context, request, response, new_call_cq, notification_cq, tag);
    }
  };
  template <class BaseClass>
  class WithAsyncMethod_SetEnumArrayProperty : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithAsyncMethod_SetEnumArrayProperty() {
      ::grpc::Service::MarkMethodAsync(27);
    }
    ~WithAsyncMethod_SetEnumArrayProperty() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status SetEnumArrayProperty(::grpc::ServerContext* /*context*/, const ::TempoWorld::SetEnumArrayPropertyRequest* /*request*/, ::TempoScripting::Empty* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    void RequestSetEnumArrayProperty(::grpc::ServerContext* context, ::TempoWorld::SetEnumArrayPropertyRequest* request, ::grpc::ServerAsyncResponseWriter< ::TempoScripting::Empty>* response, ::grpc::CompletionQueue* new_call_cq, ::grpc::ServerCompletionQueue* notification_cq, void *tag) {
      ::grpc::Service::RequestAsyncUnary(27, context, request, response, new_call_cq, notification_cq, tag);
    }
  };
  template <class BaseClass>
  class WithAsyncMethod_SetIntArrayProperty : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithAsyncMethod_SetIntArrayProperty() {
      ::grpc::Service::MarkMethodAsync(28);
    }
    ~WithAsyncMethod_SetIntArrayProperty() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status SetIntArrayProperty(::grpc::ServerContext* /*context*/, const ::TempoWorld::SetIntArrayPropertyRequest* /*request*/, ::TempoScripting::Empty* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    void RequestSetIntArrayProperty(::grpc::ServerContext* context, ::TempoWorld::SetIntArrayPropertyRequest* request, ::grpc::ServerAsyncResponseWriter< ::TempoScripting::Empty>* response, ::grpc::CompletionQueue* new_call_cq, ::grpc::ServerCompletionQueue* notification_cq, void *tag) {
      ::grpc::Service::RequestAsyncUnary(28, context, request, response, new_call_cq, notification_cq, tag);
    }
  };
  template <class BaseClass>
  class WithAsyncMethod_SetFloatArrayProperty : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithAsyncMethod_SetFloatArrayProperty() {
      ::grpc::Service::MarkMethodAsync(29);
    }
    ~WithAsyncMethod_SetFloatArrayProperty() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status SetFloatArrayProperty(::grpc::ServerContext* /*context*/, const ::TempoWorld::SetFloatArrayPropertyRequest* /*request*/, ::TempoScripting::Empty* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    void RequestSetFloatArrayProperty(::grpc::ServerContext* context, ::TempoWorld::SetFloatArrayPropertyRequest* request, ::grpc::ServerAsyncResponseWriter< ::TempoScripting::Empty>* response, ::grpc::CompletionQueue* new_call_cq, ::grpc::ServerCompletionQueue* notification_cq, void *tag) {
      ::grpc::Service::RequestAsyncUnary(29, context, request, response, new_call_cq, notification_cq, tag);
    }
  };
  template <class BaseClass>
  class WithAsyncMethod_SetClassArrayProperty : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithAsyncMethod_SetClassArrayProperty() {
      ::grpc::Service::MarkMethodAsync(30);
    }
    ~WithAsyncMethod_SetClassArrayProperty() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status SetClassArrayProperty(::grpc::ServerContext* /*context*/, const ::TempoWorld::SetClassArrayPropertyRequest* /*request*/, ::TempoScripting::Empty* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    void RequestSetClassArrayProperty(::grpc::ServerContext* context, ::TempoWorld::SetClassArrayPropertyRequest* request, ::grpc::ServerAsyncResponseWriter< ::TempoScripting::Empty>* response, ::grpc::CompletionQueue* new_call_cq, ::grpc::ServerCompletionQueue* notification_cq, void *tag) {
      ::grpc::Service::RequestAsyncUnary(30, context, request, response, new_call_cq, notification_cq, tag);
    }
  };
  template <class BaseClass>
  class WithAsyncMethod_SetAssetArrayProperty : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithAsyncMethod_SetAssetArrayProperty() {
      ::grpc::Service::MarkMethodAsync(31);
    }
    ~WithAsyncMethod_SetAssetArrayProperty() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status SetAssetArrayProperty(::grpc::ServerContext* /*context*/, const ::TempoWorld::SetAssetArrayPropertyRequest* /*request*/, ::TempoScripting::Empty* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    void RequestSetAssetArrayProperty(::grpc::ServerContext* context, ::TempoWorld::SetAssetArrayPropertyRequest* request, ::grpc::ServerAsyncResponseWriter< ::TempoScripting::Empty>* response, ::grpc::CompletionQueue* new_call_cq, ::grpc::ServerCompletionQueue* notification_cq, void *tag) {
      ::grpc::Service::RequestAsyncUnary(31, context, request, response, new_call_cq, notification_cq, tag);
    }
  };
  template <class BaseClass>
  class WithAsyncMethod_SetActorArrayProperty : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithAsyncMethod_SetActorArrayProperty() {
      ::grpc::Service::MarkMethodAsync(32);
    }
    ~WithAsyncMethod_SetActorArrayProperty() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status SetActorArrayProperty(::grpc::ServerContext* /*context*/, const ::TempoWorld::SetActorArrayPropertyRequest* /*request*/, ::TempoScripting::Empty* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    void RequestSetActorArrayProperty(::grpc::ServerContext* context, ::TempoWorld::SetActorArrayPropertyRequest* request, ::grpc::ServerAsyncResponseWriter< ::TempoScripting::Empty>* response, ::grpc::CompletionQueue* new_call_cq, ::grpc::ServerCompletionQueue* notification_cq, void *tag) {
      ::grpc::Service::RequestAsyncUnary(32, context, request, response, new_call_cq, notification_cq, tag);
    }
  };
  template <class BaseClass>
  class WithAsyncMethod_SetComponentArrayProperty : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithAsyncMethod_SetComponentArrayProperty() {
      ::grpc::Service::MarkMethodAsync(33);
    }
    ~WithAsyncMethod_SetComponentArrayProperty() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status SetComponentArrayProperty(::grpc::ServerContext* /*context*/, const ::TempoWorld::SetComponentArrayPropertyRequest* /*request*/, ::TempoScripting::Empty* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    void RequestSetComponentArrayProperty(::grpc::ServerContext* context, ::TempoWorld::SetComponentArrayPropertyRequest* request, ::grpc::ServerAsyncResponseWriter< ::TempoScripting::Empty>* response, ::grpc::CompletionQueue* new_call_cq, ::grpc::ServerCompletionQueue* notification_cq, void *tag) {
      ::grpc::Service::RequestAsyncUnary(33, context, request, response, new_call_cq, notification_cq, tag);
    }
  };
  template <class BaseClass>
  class WithAsyncMethod_CallFunction : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithAsyncMethod_CallFunction() {
      ::grpc::Service::MarkMethodAsync(34);
    }
    ~WithAsyncMethod_CallFunction() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status CallFunction(::grpc::ServerContext* /*context*/, const ::TempoWorld::CallFunctionRequest* /*request*/, ::TempoScripting::Empty* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    void RequestCallFunction(::grpc::ServerContext* context, ::TempoWorld::CallFunctionRequest* request, ::grpc::ServerAsyncResponseWriter< ::TempoScripting::Empty>* response, ::grpc::CompletionQueue* new_call_cq, ::grpc::ServerCompletionQueue* notification_cq, void *tag) {
      ::grpc::Service::RequestAsyncUnary(34, context, request, response, new_call_cq, notification_cq, tag);
    }
  };
  typedef WithAsyncMethod_SpawnActor<WithAsyncMethod_FinishSpawningActor<WithAsyncMethod_DestroyActor<WithAsyncMethod_AddComponent<WithAsyncMethod_DestroyComponent<WithAsyncMethod_SetActorTransform<WithAsyncMethod_SetComponentTransform<WithAsyncMethod_ActivateComponent<WithAsyncMethod_DeactivateComponent<WithAsyncMethod_GetAllActors<WithAsyncMethod_GetAllComponents<WithAsyncMethod_GetActorProperties<WithAsyncMethod_GetComponentProperties<WithAsyncMethod_SetBoolProperty<WithAsyncMethod_SetStringProperty<WithAsyncMethod_SetEnumProperty<WithAsyncMethod_SetIntProperty<WithAsyncMethod_SetFloatProperty<WithAsyncMethod_SetVectorProperty<WithAsyncMethod_SetRotatorProperty<WithAsyncMethod_SetColorProperty<WithAsyncMethod_SetClassProperty<WithAsyncMethod_SetAssetProperty<WithAsyncMethod_SetActorProperty<WithAsyncMethod_SetComponentProperty<WithAsyncMethod_SetBoolArrayProperty<WithAsyncMethod_SetStringArrayProperty<WithAsyncMethod_SetEnumArrayProperty<WithAsyncMethod_SetIntArrayProperty<WithAsyncMethod_SetFloatArrayProperty<WithAsyncMethod_SetClassArrayProperty<WithAsyncMethod_SetAssetArrayProperty<WithAsyncMethod_SetActorArrayProperty<WithAsyncMethod_SetComponentArrayProperty<WithAsyncMethod_CallFunction<Service > > > > > > > > > > > > > > > > > > > > > > > > > > > > > > > > > > > AsyncService;
  template <class BaseClass>
  class WithCallbackMethod_SpawnActor : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithCallbackMethod_SpawnActor() {
      ::grpc::Service::MarkMethodCallback(0,
          new ::grpc::internal::CallbackUnaryHandler< ::TempoWorld::SpawnActorRequest, ::TempoWorld::SpawnActorResponse>(
            [this](
                   ::grpc::CallbackServerContext* context, const ::TempoWorld::SpawnActorRequest* request, ::TempoWorld::SpawnActorResponse* response) { return this->SpawnActor(context, request, response); }));}
    void SetMessageAllocatorFor_SpawnActor(
        ::grpc::MessageAllocator< ::TempoWorld::SpawnActorRequest, ::TempoWorld::SpawnActorResponse>* allocator) {
      ::grpc::internal::MethodHandler* const handler = ::grpc::Service::GetHandler(0);
      static_cast<::grpc::internal::CallbackUnaryHandler< ::TempoWorld::SpawnActorRequest, ::TempoWorld::SpawnActorResponse>*>(handler)
              ->SetMessageAllocator(allocator);
    }
    ~WithCallbackMethod_SpawnActor() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status SpawnActor(::grpc::ServerContext* /*context*/, const ::TempoWorld::SpawnActorRequest* /*request*/, ::TempoWorld::SpawnActorResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    virtual ::grpc::ServerUnaryReactor* SpawnActor(
      ::grpc::CallbackServerContext* /*context*/, const ::TempoWorld::SpawnActorRequest* /*request*/, ::TempoWorld::SpawnActorResponse* /*response*/)  { return nullptr; }
  };
  template <class BaseClass>
  class WithCallbackMethod_FinishSpawningActor : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithCallbackMethod_FinishSpawningActor() {
      ::grpc::Service::MarkMethodCallback(1,
          new ::grpc::internal::CallbackUnaryHandler< ::TempoWorld::FinishSpawningActorRequest, ::TempoWorld::FinishSpawningActorResponse>(
            [this](
                   ::grpc::CallbackServerContext* context, const ::TempoWorld::FinishSpawningActorRequest* request, ::TempoWorld::FinishSpawningActorResponse* response) { return this->FinishSpawningActor(context, request, response); }));}
    void SetMessageAllocatorFor_FinishSpawningActor(
        ::grpc::MessageAllocator< ::TempoWorld::FinishSpawningActorRequest, ::TempoWorld::FinishSpawningActorResponse>* allocator) {
      ::grpc::internal::MethodHandler* const handler = ::grpc::Service::GetHandler(1);
      static_cast<::grpc::internal::CallbackUnaryHandler< ::TempoWorld::FinishSpawningActorRequest, ::TempoWorld::FinishSpawningActorResponse>*>(handler)
              ->SetMessageAllocator(allocator);
    }
    ~WithCallbackMethod_FinishSpawningActor() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status FinishSpawningActor(::grpc::ServerContext* /*context*/, const ::TempoWorld::FinishSpawningActorRequest* /*request*/, ::TempoWorld::FinishSpawningActorResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    virtual ::grpc::ServerUnaryReactor* FinishSpawningActor(
      ::grpc::CallbackServerContext* /*context*/, const ::TempoWorld::FinishSpawningActorRequest* /*request*/, ::TempoWorld::FinishSpawningActorResponse* /*response*/)  { return nullptr; }
  };
  template <class BaseClass>
  class WithCallbackMethod_DestroyActor : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithCallbackMethod_DestroyActor() {
      ::grpc::Service::MarkMethodCallback(2,
          new ::grpc::internal::CallbackUnaryHandler< ::TempoWorld::DestroyActorRequest, ::TempoScripting::Empty>(
            [this](
                   ::grpc::CallbackServerContext* context, const ::TempoWorld::DestroyActorRequest* request, ::TempoScripting::Empty* response) { return this->DestroyActor(context, request, response); }));}
    void SetMessageAllocatorFor_DestroyActor(
        ::grpc::MessageAllocator< ::TempoWorld::DestroyActorRequest, ::TempoScripting::Empty>* allocator) {
      ::grpc::internal::MethodHandler* const handler = ::grpc::Service::GetHandler(2);
      static_cast<::grpc::internal::CallbackUnaryHandler< ::TempoWorld::DestroyActorRequest, ::TempoScripting::Empty>*>(handler)
              ->SetMessageAllocator(allocator);
    }
    ~WithCallbackMethod_DestroyActor() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status DestroyActor(::grpc::ServerContext* /*context*/, const ::TempoWorld::DestroyActorRequest* /*request*/, ::TempoScripting::Empty* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    virtual ::grpc::ServerUnaryReactor* DestroyActor(
      ::grpc::CallbackServerContext* /*context*/, const ::TempoWorld::DestroyActorRequest* /*request*/, ::TempoScripting::Empty* /*response*/)  { return nullptr; }
  };
  template <class BaseClass>
  class WithCallbackMethod_AddComponent : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithCallbackMethod_AddComponent() {
      ::grpc::Service::MarkMethodCallback(3,
          new ::grpc::internal::CallbackUnaryHandler< ::TempoWorld::AddComponentRequest, ::TempoWorld::AddComponentResponse>(
            [this](
                   ::grpc::CallbackServerContext* context, const ::TempoWorld::AddComponentRequest* request, ::TempoWorld::AddComponentResponse* response) { return this->AddComponent(context, request, response); }));}
    void SetMessageAllocatorFor_AddComponent(
        ::grpc::MessageAllocator< ::TempoWorld::AddComponentRequest, ::TempoWorld::AddComponentResponse>* allocator) {
      ::grpc::internal::MethodHandler* const handler = ::grpc::Service::GetHandler(3);
      static_cast<::grpc::internal::CallbackUnaryHandler< ::TempoWorld::AddComponentRequest, ::TempoWorld::AddComponentResponse>*>(handler)
              ->SetMessageAllocator(allocator);
    }
    ~WithCallbackMethod_AddComponent() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status AddComponent(::grpc::ServerContext* /*context*/, const ::TempoWorld::AddComponentRequest* /*request*/, ::TempoWorld::AddComponentResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    virtual ::grpc::ServerUnaryReactor* AddComponent(
      ::grpc::CallbackServerContext* /*context*/, const ::TempoWorld::AddComponentRequest* /*request*/, ::TempoWorld::AddComponentResponse* /*response*/)  { return nullptr; }
  };
  template <class BaseClass>
  class WithCallbackMethod_DestroyComponent : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithCallbackMethod_DestroyComponent() {
      ::grpc::Service::MarkMethodCallback(4,
          new ::grpc::internal::CallbackUnaryHandler< ::TempoWorld::DestroyComponentRequest, ::TempoScripting::Empty>(
            [this](
                   ::grpc::CallbackServerContext* context, const ::TempoWorld::DestroyComponentRequest* request, ::TempoScripting::Empty* response) { return this->DestroyComponent(context, request, response); }));}
    void SetMessageAllocatorFor_DestroyComponent(
        ::grpc::MessageAllocator< ::TempoWorld::DestroyComponentRequest, ::TempoScripting::Empty>* allocator) {
      ::grpc::internal::MethodHandler* const handler = ::grpc::Service::GetHandler(4);
      static_cast<::grpc::internal::CallbackUnaryHandler< ::TempoWorld::DestroyComponentRequest, ::TempoScripting::Empty>*>(handler)
              ->SetMessageAllocator(allocator);
    }
    ~WithCallbackMethod_DestroyComponent() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status DestroyComponent(::grpc::ServerContext* /*context*/, const ::TempoWorld::DestroyComponentRequest* /*request*/, ::TempoScripting::Empty* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    virtual ::grpc::ServerUnaryReactor* DestroyComponent(
      ::grpc::CallbackServerContext* /*context*/, const ::TempoWorld::DestroyComponentRequest* /*request*/, ::TempoScripting::Empty* /*response*/)  { return nullptr; }
  };
  template <class BaseClass>
  class WithCallbackMethod_SetActorTransform : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithCallbackMethod_SetActorTransform() {
      ::grpc::Service::MarkMethodCallback(5,
          new ::grpc::internal::CallbackUnaryHandler< ::TempoWorld::SetActorTransformRequest, ::TempoScripting::Empty>(
            [this](
                   ::grpc::CallbackServerContext* context, const ::TempoWorld::SetActorTransformRequest* request, ::TempoScripting::Empty* response) { return this->SetActorTransform(context, request, response); }));}
    void SetMessageAllocatorFor_SetActorTransform(
        ::grpc::MessageAllocator< ::TempoWorld::SetActorTransformRequest, ::TempoScripting::Empty>* allocator) {
      ::grpc::internal::MethodHandler* const handler = ::grpc::Service::GetHandler(5);
      static_cast<::grpc::internal::CallbackUnaryHandler< ::TempoWorld::SetActorTransformRequest, ::TempoScripting::Empty>*>(handler)
              ->SetMessageAllocator(allocator);
    }
    ~WithCallbackMethod_SetActorTransform() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status SetActorTransform(::grpc::ServerContext* /*context*/, const ::TempoWorld::SetActorTransformRequest* /*request*/, ::TempoScripting::Empty* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    virtual ::grpc::ServerUnaryReactor* SetActorTransform(
      ::grpc::CallbackServerContext* /*context*/, const ::TempoWorld::SetActorTransformRequest* /*request*/, ::TempoScripting::Empty* /*response*/)  { return nullptr; }
  };
  template <class BaseClass>
  class WithCallbackMethod_SetComponentTransform : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithCallbackMethod_SetComponentTransform() {
      ::grpc::Service::MarkMethodCallback(6,
          new ::grpc::internal::CallbackUnaryHandler< ::TempoWorld::SetComponentTransformRequest, ::TempoScripting::Empty>(
            [this](
                   ::grpc::CallbackServerContext* context, const ::TempoWorld::SetComponentTransformRequest* request, ::TempoScripting::Empty* response) { return this->SetComponentTransform(context, request, response); }));}
    void SetMessageAllocatorFor_SetComponentTransform(
        ::grpc::MessageAllocator< ::TempoWorld::SetComponentTransformRequest, ::TempoScripting::Empty>* allocator) {
      ::grpc::internal::MethodHandler* const handler = ::grpc::Service::GetHandler(6);
      static_cast<::grpc::internal::CallbackUnaryHandler< ::TempoWorld::SetComponentTransformRequest, ::TempoScripting::Empty>*>(handler)
              ->SetMessageAllocator(allocator);
    }
    ~WithCallbackMethod_SetComponentTransform() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status SetComponentTransform(::grpc::ServerContext* /*context*/, const ::TempoWorld::SetComponentTransformRequest* /*request*/, ::TempoScripting::Empty* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    virtual ::grpc::ServerUnaryReactor* SetComponentTransform(
      ::grpc::CallbackServerContext* /*context*/, const ::TempoWorld::SetComponentTransformRequest* /*request*/, ::TempoScripting::Empty* /*response*/)  { return nullptr; }
  };
  template <class BaseClass>
  class WithCallbackMethod_ActivateComponent : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithCallbackMethod_ActivateComponent() {
      ::grpc::Service::MarkMethodCallback(7,
          new ::grpc::internal::CallbackUnaryHandler< ::TempoWorld::ActivateComponentRequest, ::TempoScripting::Empty>(
            [this](
                   ::grpc::CallbackServerContext* context, const ::TempoWorld::ActivateComponentRequest* request, ::TempoScripting::Empty* response) { return this->ActivateComponent(context, request, response); }));}
    void SetMessageAllocatorFor_ActivateComponent(
        ::grpc::MessageAllocator< ::TempoWorld::ActivateComponentRequest, ::TempoScripting::Empty>* allocator) {
      ::grpc::internal::MethodHandler* const handler = ::grpc::Service::GetHandler(7);
      static_cast<::grpc::internal::CallbackUnaryHandler< ::TempoWorld::ActivateComponentRequest, ::TempoScripting::Empty>*>(handler)
              ->SetMessageAllocator(allocator);
    }
    ~WithCallbackMethod_ActivateComponent() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status ActivateComponent(::grpc::ServerContext* /*context*/, const ::TempoWorld::ActivateComponentRequest* /*request*/, ::TempoScripting::Empty* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    virtual ::grpc::ServerUnaryReactor* ActivateComponent(
      ::grpc::CallbackServerContext* /*context*/, const ::TempoWorld::ActivateComponentRequest* /*request*/, ::TempoScripting::Empty* /*response*/)  { return nullptr; }
  };
  template <class BaseClass>
  class WithCallbackMethod_DeactivateComponent : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithCallbackMethod_DeactivateComponent() {
      ::grpc::Service::MarkMethodCallback(8,
          new ::grpc::internal::CallbackUnaryHandler< ::TempoWorld::DeactivateComponentRequest, ::TempoScripting::Empty>(
            [this](
                   ::grpc::CallbackServerContext* context, const ::TempoWorld::DeactivateComponentRequest* request, ::TempoScripting::Empty* response) { return this->DeactivateComponent(context, request, response); }));}
    void SetMessageAllocatorFor_DeactivateComponent(
        ::grpc::MessageAllocator< ::TempoWorld::DeactivateComponentRequest, ::TempoScripting::Empty>* allocator) {
      ::grpc::internal::MethodHandler* const handler = ::grpc::Service::GetHandler(8);
      static_cast<::grpc::internal::CallbackUnaryHandler< ::TempoWorld::DeactivateComponentRequest, ::TempoScripting::Empty>*>(handler)
              ->SetMessageAllocator(allocator);
    }
    ~WithCallbackMethod_DeactivateComponent() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status DeactivateComponent(::grpc::ServerContext* /*context*/, const ::TempoWorld::DeactivateComponentRequest* /*request*/, ::TempoScripting::Empty* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    virtual ::grpc::ServerUnaryReactor* DeactivateComponent(
      ::grpc::CallbackServerContext* /*context*/, const ::TempoWorld::DeactivateComponentRequest* /*request*/, ::TempoScripting::Empty* /*response*/)  { return nullptr; }
  };
  template <class BaseClass>
  class WithCallbackMethod_GetAllActors : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithCallbackMethod_GetAllActors() {
      ::grpc::Service::MarkMethodCallback(9,
          new ::grpc::internal::CallbackUnaryHandler< ::TempoWorld::GetAllActorsRequest, ::TempoWorld::GetAllActorsResponse>(
            [this](
                   ::grpc::CallbackServerContext* context, const ::TempoWorld::GetAllActorsRequest* request, ::TempoWorld::GetAllActorsResponse* response) { return this->GetAllActors(context, request, response); }));}
    void SetMessageAllocatorFor_GetAllActors(
        ::grpc::MessageAllocator< ::TempoWorld::GetAllActorsRequest, ::TempoWorld::GetAllActorsResponse>* allocator) {
      ::grpc::internal::MethodHandler* const handler = ::grpc::Service::GetHandler(9);
      static_cast<::grpc::internal::CallbackUnaryHandler< ::TempoWorld::GetAllActorsRequest, ::TempoWorld::GetAllActorsResponse>*>(handler)
              ->SetMessageAllocator(allocator);
    }
    ~WithCallbackMethod_GetAllActors() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status GetAllActors(::grpc::ServerContext* /*context*/, const ::TempoWorld::GetAllActorsRequest* /*request*/, ::TempoWorld::GetAllActorsResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    virtual ::grpc::ServerUnaryReactor* GetAllActors(
      ::grpc::CallbackServerContext* /*context*/, const ::TempoWorld::GetAllActorsRequest* /*request*/, ::TempoWorld::GetAllActorsResponse* /*response*/)  { return nullptr; }
  };
  template <class BaseClass>
  class WithCallbackMethod_GetAllComponents : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithCallbackMethod_GetAllComponents() {
      ::grpc::Service::MarkMethodCallback(10,
          new ::grpc::internal::CallbackUnaryHandler< ::TempoWorld::GetAllComponentsRequest, ::TempoWorld::GetAllComponentsResponse>(
            [this](
                   ::grpc::CallbackServerContext* context, const ::TempoWorld::GetAllComponentsRequest* request, ::TempoWorld::GetAllComponentsResponse* response) { return this->GetAllComponents(context, request, response); }));}
    void SetMessageAllocatorFor_GetAllComponents(
        ::grpc::MessageAllocator< ::TempoWorld::GetAllComponentsRequest, ::TempoWorld::GetAllComponentsResponse>* allocator) {
      ::grpc::internal::MethodHandler* const handler = ::grpc::Service::GetHandler(10);
      static_cast<::grpc::internal::CallbackUnaryHandler< ::TempoWorld::GetAllComponentsRequest, ::TempoWorld::GetAllComponentsResponse>*>(handler)
              ->SetMessageAllocator(allocator);
    }
    ~WithCallbackMethod_GetAllComponents() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status GetAllComponents(::grpc::ServerContext* /*context*/, const ::TempoWorld::GetAllComponentsRequest* /*request*/, ::TempoWorld::GetAllComponentsResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    virtual ::grpc::ServerUnaryReactor* GetAllComponents(
      ::grpc::CallbackServerContext* /*context*/, const ::TempoWorld::GetAllComponentsRequest* /*request*/, ::TempoWorld::GetAllComponentsResponse* /*response*/)  { return nullptr; }
  };
  template <class BaseClass>
  class WithCallbackMethod_GetActorProperties : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithCallbackMethod_GetActorProperties() {
      ::grpc::Service::MarkMethodCallback(11,
          new ::grpc::internal::CallbackUnaryHandler< ::TempoWorld::GetActorPropertiesRequest, ::TempoWorld::GetPropertiesResponse>(
            [this](
                   ::grpc::CallbackServerContext* context, const ::TempoWorld::GetActorPropertiesRequest* request, ::TempoWorld::GetPropertiesResponse* response) { return this->GetActorProperties(context, request, response); }));}
    void SetMessageAllocatorFor_GetActorProperties(
        ::grpc::MessageAllocator< ::TempoWorld::GetActorPropertiesRequest, ::TempoWorld::GetPropertiesResponse>* allocator) {
      ::grpc::internal::MethodHandler* const handler = ::grpc::Service::GetHandler(11);
      static_cast<::grpc::internal::CallbackUnaryHandler< ::TempoWorld::GetActorPropertiesRequest, ::TempoWorld::GetPropertiesResponse>*>(handler)
              ->SetMessageAllocator(allocator);
    }
    ~WithCallbackMethod_GetActorProperties() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status GetActorProperties(::grpc::ServerContext* /*context*/, const ::TempoWorld::GetActorPropertiesRequest* /*request*/, ::TempoWorld::GetPropertiesResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    virtual ::grpc::ServerUnaryReactor* GetActorProperties(
      ::grpc::CallbackServerContext* /*context*/, const ::TempoWorld::GetActorPropertiesRequest* /*request*/, ::TempoWorld::GetPropertiesResponse* /*response*/)  { return nullptr; }
  };
  template <class BaseClass>
  class WithCallbackMethod_GetComponentProperties : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithCallbackMethod_GetComponentProperties() {
      ::grpc::Service::MarkMethodCallback(12,
          new ::grpc::internal::CallbackUnaryHandler< ::TempoWorld::GetComponentPropertiesRequest, ::TempoWorld::GetPropertiesResponse>(
            [this](
                   ::grpc::CallbackServerContext* context, const ::TempoWorld::GetComponentPropertiesRequest* request, ::TempoWorld::GetPropertiesResponse* response) { return this->GetComponentProperties(context, request, response); }));}
    void SetMessageAllocatorFor_GetComponentProperties(
        ::grpc::MessageAllocator< ::TempoWorld::GetComponentPropertiesRequest, ::TempoWorld::GetPropertiesResponse>* allocator) {
      ::grpc::internal::MethodHandler* const handler = ::grpc::Service::GetHandler(12);
      static_cast<::grpc::internal::CallbackUnaryHandler< ::TempoWorld::GetComponentPropertiesRequest, ::TempoWorld::GetPropertiesResponse>*>(handler)
              ->SetMessageAllocator(allocator);
    }
    ~WithCallbackMethod_GetComponentProperties() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status GetComponentProperties(::grpc::ServerContext* /*context*/, const ::TempoWorld::GetComponentPropertiesRequest* /*request*/, ::TempoWorld::GetPropertiesResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    virtual ::grpc::ServerUnaryReactor* GetComponentProperties(
      ::grpc::CallbackServerContext* /*context*/, const ::TempoWorld::GetComponentPropertiesRequest* /*request*/, ::TempoWorld::GetPropertiesResponse* /*response*/)  { return nullptr; }
  };
  template <class BaseClass>
  class WithCallbackMethod_SetBoolProperty : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithCallbackMethod_SetBoolProperty() {
      ::grpc::Service::MarkMethodCallback(13,
          new ::grpc::internal::CallbackUnaryHandler< ::TempoWorld::SetBoolPropertyRequest, ::TempoScripting::Empty>(
            [this](
                   ::grpc::CallbackServerContext* context, const ::TempoWorld::SetBoolPropertyRequest* request, ::TempoScripting::Empty* response) { return this->SetBoolProperty(context, request, response); }));}
    void SetMessageAllocatorFor_SetBoolProperty(
        ::grpc::MessageAllocator< ::TempoWorld::SetBoolPropertyRequest, ::TempoScripting::Empty>* allocator) {
      ::grpc::internal::MethodHandler* const handler = ::grpc::Service::GetHandler(13);
      static_cast<::grpc::internal::CallbackUnaryHandler< ::TempoWorld::SetBoolPropertyRequest, ::TempoScripting::Empty>*>(handler)
              ->SetMessageAllocator(allocator);
    }
    ~WithCallbackMethod_SetBoolProperty() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status SetBoolProperty(::grpc::ServerContext* /*context*/, const ::TempoWorld::SetBoolPropertyRequest* /*request*/, ::TempoScripting::Empty* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    virtual ::grpc::ServerUnaryReactor* SetBoolProperty(
      ::grpc::CallbackServerContext* /*context*/, const ::TempoWorld::SetBoolPropertyRequest* /*request*/, ::TempoScripting::Empty* /*response*/)  { return nullptr; }
  };
  template <class BaseClass>
  class WithCallbackMethod_SetStringProperty : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithCallbackMethod_SetStringProperty() {
      ::grpc::Service::MarkMethodCallback(14,
          new ::grpc::internal::CallbackUnaryHandler< ::TempoWorld::SetStringPropertyRequest, ::TempoScripting::Empty>(
            [this](
                   ::grpc::CallbackServerContext* context, const ::TempoWorld::SetStringPropertyRequest* request, ::TempoScripting::Empty* response) { return this->SetStringProperty(context, request, response); }));}
    void SetMessageAllocatorFor_SetStringProperty(
        ::grpc::MessageAllocator< ::TempoWorld::SetStringPropertyRequest, ::TempoScripting::Empty>* allocator) {
      ::grpc::internal::MethodHandler* const handler = ::grpc::Service::GetHandler(14);
      static_cast<::grpc::internal::CallbackUnaryHandler< ::TempoWorld::SetStringPropertyRequest, ::TempoScripting::Empty>*>(handler)
              ->SetMessageAllocator(allocator);
    }
    ~WithCallbackMethod_SetStringProperty() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status SetStringProperty(::grpc::ServerContext* /*context*/, const ::TempoWorld::SetStringPropertyRequest* /*request*/, ::TempoScripting::Empty* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    virtual ::grpc::ServerUnaryReactor* SetStringProperty(
      ::grpc::CallbackServerContext* /*context*/, const ::TempoWorld::SetStringPropertyRequest* /*request*/, ::TempoScripting::Empty* /*response*/)  { return nullptr; }
  };
  template <class BaseClass>
  class WithCallbackMethod_SetEnumProperty : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithCallbackMethod_SetEnumProperty() {
      ::grpc::Service::MarkMethodCallback(15,
          new ::grpc::internal::CallbackUnaryHandler< ::TempoWorld::SetEnumPropertyRequest, ::TempoScripting::Empty>(
            [this](
                   ::grpc::CallbackServerContext* context, const ::TempoWorld::SetEnumPropertyRequest* request, ::TempoScripting::Empty* response) { return this->SetEnumProperty(context, request, response); }));}
    void SetMessageAllocatorFor_SetEnumProperty(
        ::grpc::MessageAllocator< ::TempoWorld::SetEnumPropertyRequest, ::TempoScripting::Empty>* allocator) {
      ::grpc::internal::MethodHandler* const handler = ::grpc::Service::GetHandler(15);
      static_cast<::grpc::internal::CallbackUnaryHandler< ::TempoWorld::SetEnumPropertyRequest, ::TempoScripting::Empty>*>(handler)
              ->SetMessageAllocator(allocator);
    }
    ~WithCallbackMethod_SetEnumProperty() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status SetEnumProperty(::grpc::ServerContext* /*context*/, const ::TempoWorld::SetEnumPropertyRequest* /*request*/, ::TempoScripting::Empty* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    virtual ::grpc::ServerUnaryReactor* SetEnumProperty(
      ::grpc::CallbackServerContext* /*context*/, const ::TempoWorld::SetEnumPropertyRequest* /*request*/, ::TempoScripting::Empty* /*response*/)  { return nullptr; }
  };
  template <class BaseClass>
  class WithCallbackMethod_SetIntProperty : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithCallbackMethod_SetIntProperty() {
      ::grpc::Service::MarkMethodCallback(16,
          new ::grpc::internal::CallbackUnaryHandler< ::TempoWorld::SetIntPropertyRequest, ::TempoScripting::Empty>(
            [this](
                   ::grpc::CallbackServerContext* context, const ::TempoWorld::SetIntPropertyRequest* request, ::TempoScripting::Empty* response) { return this->SetIntProperty(context, request, response); }));}
    void SetMessageAllocatorFor_SetIntProperty(
        ::grpc::MessageAllocator< ::TempoWorld::SetIntPropertyRequest, ::TempoScripting::Empty>* allocator) {
      ::grpc::internal::MethodHandler* const handler = ::grpc::Service::GetHandler(16);
      static_cast<::grpc::internal::CallbackUnaryHandler< ::TempoWorld::SetIntPropertyRequest, ::TempoScripting::Empty>*>(handler)
              ->SetMessageAllocator(allocator);
    }
    ~WithCallbackMethod_SetIntProperty() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status SetIntProperty(::grpc::ServerContext* /*context*/, const ::TempoWorld::SetIntPropertyRequest* /*request*/, ::TempoScripting::Empty* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    virtual ::grpc::ServerUnaryReactor* SetIntProperty(
      ::grpc::CallbackServerContext* /*context*/, const ::TempoWorld::SetIntPropertyRequest* /*request*/, ::TempoScripting::Empty* /*response*/)  { return nullptr; }
  };
  template <class BaseClass>
  class WithCallbackMethod_SetFloatProperty : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithCallbackMethod_SetFloatProperty() {
      ::grpc::Service::MarkMethodCallback(17,
          new ::grpc::internal::CallbackUnaryHandler< ::TempoWorld::SetFloatPropertyRequest, ::TempoScripting::Empty>(
            [this](
                   ::grpc::CallbackServerContext* context, const ::TempoWorld::SetFloatPropertyRequest* request, ::TempoScripting::Empty* response) { return this->SetFloatProperty(context, request, response); }));}
    void SetMessageAllocatorFor_SetFloatProperty(
        ::grpc::MessageAllocator< ::TempoWorld::SetFloatPropertyRequest, ::TempoScripting::Empty>* allocator) {
      ::grpc::internal::MethodHandler* const handler = ::grpc::Service::GetHandler(17);
      static_cast<::grpc::internal::CallbackUnaryHandler< ::TempoWorld::SetFloatPropertyRequest, ::TempoScripting::Empty>*>(handler)
              ->SetMessageAllocator(allocator);
    }
    ~WithCallbackMethod_SetFloatProperty() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status SetFloatProperty(::grpc::ServerContext* /*context*/, const ::TempoWorld::SetFloatPropertyRequest* /*request*/, ::TempoScripting::Empty* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    virtual ::grpc::ServerUnaryReactor* SetFloatProperty(
      ::grpc::CallbackServerContext* /*context*/, const ::TempoWorld::SetFloatPropertyRequest* /*request*/, ::TempoScripting::Empty* /*response*/)  { return nullptr; }
  };
  template <class BaseClass>
  class WithCallbackMethod_SetVectorProperty : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithCallbackMethod_SetVectorProperty() {
      ::grpc::Service::MarkMethodCallback(18,
          new ::grpc::internal::CallbackUnaryHandler< ::TempoWorld::SetVectorPropertyRequest, ::TempoScripting::Empty>(
            [this](
                   ::grpc::CallbackServerContext* context, const ::TempoWorld::SetVectorPropertyRequest* request, ::TempoScripting::Empty* response) { return this->SetVectorProperty(context, request, response); }));}
    void SetMessageAllocatorFor_SetVectorProperty(
        ::grpc::MessageAllocator< ::TempoWorld::SetVectorPropertyRequest, ::TempoScripting::Empty>* allocator) {
      ::grpc::internal::MethodHandler* const handler = ::grpc::Service::GetHandler(18);
      static_cast<::grpc::internal::CallbackUnaryHandler< ::TempoWorld::SetVectorPropertyRequest, ::TempoScripting::Empty>*>(handler)
              ->SetMessageAllocator(allocator);
    }
    ~WithCallbackMethod_SetVectorProperty() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status SetVectorProperty(::grpc::ServerContext* /*context*/, const ::TempoWorld::SetVectorPropertyRequest* /*request*/, ::TempoScripting::Empty* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    virtual ::grpc::ServerUnaryReactor* SetVectorProperty(
      ::grpc::CallbackServerContext* /*context*/, const ::TempoWorld::SetVectorPropertyRequest* /*request*/, ::TempoScripting::Empty* /*response*/)  { return nullptr; }
  };
  template <class BaseClass>
  class WithCallbackMethod_SetRotatorProperty : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithCallbackMethod_SetRotatorProperty() {
      ::grpc::Service::MarkMethodCallback(19,
          new ::grpc::internal::CallbackUnaryHandler< ::TempoWorld::SetRotatorPropertyRequest, ::TempoScripting::Empty>(
            [this](
                   ::grpc::CallbackServerContext* context, const ::TempoWorld::SetRotatorPropertyRequest* request, ::TempoScripting::Empty* response) { return this->SetRotatorProperty(context, request, response); }));}
    void SetMessageAllocatorFor_SetRotatorProperty(
        ::grpc::MessageAllocator< ::TempoWorld::SetRotatorPropertyRequest, ::TempoScripting::Empty>* allocator) {
      ::grpc::internal::MethodHandler* const handler = ::grpc::Service::GetHandler(19);
      static_cast<::grpc::internal::CallbackUnaryHandler< ::TempoWorld::SetRotatorPropertyRequest, ::TempoScripting::Empty>*>(handler)
              ->SetMessageAllocator(allocator);
    }
    ~WithCallbackMethod_SetRotatorProperty() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status SetRotatorProperty(::grpc::ServerContext* /*context*/, const ::TempoWorld::SetRotatorPropertyRequest* /*request*/, ::TempoScripting::Empty* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    virtual ::grpc::ServerUnaryReactor* SetRotatorProperty(
      ::grpc::CallbackServerContext* /*context*/, const ::TempoWorld::SetRotatorPropertyRequest* /*request*/, ::TempoScripting::Empty* /*response*/)  { return nullptr; }
  };
  template <class BaseClass>
  class WithCallbackMethod_SetColorProperty : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithCallbackMethod_SetColorProperty() {
      ::grpc::Service::MarkMethodCallback(20,
          new ::grpc::internal::CallbackUnaryHandler< ::TempoWorld::SetColorPropertyRequest, ::TempoScripting::Empty>(
            [this](
                   ::grpc::CallbackServerContext* context, const ::TempoWorld::SetColorPropertyRequest* request, ::TempoScripting::Empty* response) { return this->SetColorProperty(context, request, response); }));}
    void SetMessageAllocatorFor_SetColorProperty(
        ::grpc::MessageAllocator< ::TempoWorld::SetColorPropertyRequest, ::TempoScripting::Empty>* allocator) {
      ::grpc::internal::MethodHandler* const handler = ::grpc::Service::GetHandler(20);
      static_cast<::grpc::internal::CallbackUnaryHandler< ::TempoWorld::SetColorPropertyRequest, ::TempoScripting::Empty>*>(handler)
              ->SetMessageAllocator(allocator);
    }
    ~WithCallbackMethod_SetColorProperty() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status SetColorProperty(::grpc::ServerContext* /*context*/, const ::TempoWorld::SetColorPropertyRequest* /*request*/, ::TempoScripting::Empty* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    virtual ::grpc::ServerUnaryReactor* SetColorProperty(
      ::grpc::CallbackServerContext* /*context*/, const ::TempoWorld::SetColorPropertyRequest* /*request*/, ::TempoScripting::Empty* /*response*/)  { return nullptr; }
  };
  template <class BaseClass>
  class WithCallbackMethod_SetClassProperty : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithCallbackMethod_SetClassProperty() {
      ::grpc::Service::MarkMethodCallback(21,
          new ::grpc::internal::CallbackUnaryHandler< ::TempoWorld::SetClassPropertyRequest, ::TempoScripting::Empty>(
            [this](
                   ::grpc::CallbackServerContext* context, const ::TempoWorld::SetClassPropertyRequest* request, ::TempoScripting::Empty* response) { return this->SetClassProperty(context, request, response); }));}
    void SetMessageAllocatorFor_SetClassProperty(
        ::grpc::MessageAllocator< ::TempoWorld::SetClassPropertyRequest, ::TempoScripting::Empty>* allocator) {
      ::grpc::internal::MethodHandler* const handler = ::grpc::Service::GetHandler(21);
      static_cast<::grpc::internal::CallbackUnaryHandler< ::TempoWorld::SetClassPropertyRequest, ::TempoScripting::Empty>*>(handler)
              ->SetMessageAllocator(allocator);
    }
    ~WithCallbackMethod_SetClassProperty() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status SetClassProperty(::grpc::ServerContext* /*context*/, const ::TempoWorld::SetClassPropertyRequest* /*request*/, ::TempoScripting::Empty* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    virtual ::grpc::ServerUnaryReactor* SetClassProperty(
      ::grpc::CallbackServerContext* /*context*/, const ::TempoWorld::SetClassPropertyRequest* /*request*/, ::TempoScripting::Empty* /*response*/)  { return nullptr; }
  };
  template <class BaseClass>
  class WithCallbackMethod_SetAssetProperty : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithCallbackMethod_SetAssetProperty() {
      ::grpc::Service::MarkMethodCallback(22,
          new ::grpc::internal::CallbackUnaryHandler< ::TempoWorld::SetAssetPropertyRequest, ::TempoScripting::Empty>(
            [this](
                   ::grpc::CallbackServerContext* context, const ::TempoWorld::SetAssetPropertyRequest* request, ::TempoScripting::Empty* response) { return this->SetAssetProperty(context, request, response); }));}
    void SetMessageAllocatorFor_SetAssetProperty(
        ::grpc::MessageAllocator< ::TempoWorld::SetAssetPropertyRequest, ::TempoScripting::Empty>* allocator) {
      ::grpc::internal::MethodHandler* const handler = ::grpc::Service::GetHandler(22);
      static_cast<::grpc::internal::CallbackUnaryHandler< ::TempoWorld::SetAssetPropertyRequest, ::TempoScripting::Empty>*>(handler)
              ->SetMessageAllocator(allocator);
    }
    ~WithCallbackMethod_SetAssetProperty() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status SetAssetProperty(::grpc::ServerContext* /*context*/, const ::TempoWorld::SetAssetPropertyRequest* /*request*/, ::TempoScripting::Empty* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    virtual ::grpc::ServerUnaryReactor* SetAssetProperty(
      ::grpc::CallbackServerContext* /*context*/, const ::TempoWorld::SetAssetPropertyRequest* /*request*/, ::TempoScripting::Empty* /*response*/)  { return nullptr; }
  };
  template <class BaseClass>
  class WithCallbackMethod_SetActorProperty : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithCallbackMethod_SetActorProperty() {
      ::grpc::Service::MarkMethodCallback(23,
          new ::grpc::internal::CallbackUnaryHandler< ::TempoWorld::SetActorPropertyRequest, ::TempoScripting::Empty>(
            [this](
                   ::grpc::CallbackServerContext* context, const ::TempoWorld::SetActorPropertyRequest* request, ::TempoScripting::Empty* response) { return this->SetActorProperty(context, request, response); }));}
    void SetMessageAllocatorFor_SetActorProperty(
        ::grpc::MessageAllocator< ::TempoWorld::SetActorPropertyRequest, ::TempoScripting::Empty>* allocator) {
      ::grpc::internal::MethodHandler* const handler = ::grpc::Service::GetHandler(23);
      static_cast<::grpc::internal::CallbackUnaryHandler< ::TempoWorld::SetActorPropertyRequest, ::TempoScripting::Empty>*>(handler)
              ->SetMessageAllocator(allocator);
    }
    ~WithCallbackMethod_SetActorProperty() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status SetActorProperty(::grpc::ServerContext* /*context*/, const ::TempoWorld::SetActorPropertyRequest* /*request*/, ::TempoScripting::Empty* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    virtual ::grpc::ServerUnaryReactor* SetActorProperty(
      ::grpc::CallbackServerContext* /*context*/, const ::TempoWorld::SetActorPropertyRequest* /*request*/, ::TempoScripting::Empty* /*response*/)  { return nullptr; }
  };
  template <class BaseClass>
  class WithCallbackMethod_SetComponentProperty : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithCallbackMethod_SetComponentProperty() {
      ::grpc::Service::MarkMethodCallback(24,
          new ::grpc::internal::CallbackUnaryHandler< ::TempoWorld::SetComponentPropertyRequest, ::TempoScripting::Empty>(
            [this](
                   ::grpc::CallbackServerContext* context, const ::TempoWorld::SetComponentPropertyRequest* request, ::TempoScripting::Empty* response) { return this->SetComponentProperty(context, request, response); }));}
    void SetMessageAllocatorFor_SetComponentProperty(
        ::grpc::MessageAllocator< ::TempoWorld::SetComponentPropertyRequest, ::TempoScripting::Empty>* allocator) {
      ::grpc::internal::MethodHandler* const handler = ::grpc::Service::GetHandler(24);
      static_cast<::grpc::internal::CallbackUnaryHandler< ::TempoWorld::SetComponentPropertyRequest, ::TempoScripting::Empty>*>(handler)
              ->SetMessageAllocator(allocator);
    }
    ~WithCallbackMethod_SetComponentProperty() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status SetComponentProperty(::grpc::ServerContext* /*context*/, const ::TempoWorld::SetComponentPropertyRequest* /*request*/, ::TempoScripting::Empty* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    virtual ::grpc::ServerUnaryReactor* SetComponentProperty(
      ::grpc::CallbackServerContext* /*context*/, const ::TempoWorld::SetComponentPropertyRequest* /*request*/, ::TempoScripting::Empty* /*response*/)  { return nullptr; }
  };
  template <class BaseClass>
  class WithCallbackMethod_SetBoolArrayProperty : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithCallbackMethod_SetBoolArrayProperty() {
      ::grpc::Service::MarkMethodCallback(25,
          new ::grpc::internal::CallbackUnaryHandler< ::TempoWorld::SetBoolArrayPropertyRequest, ::TempoScripting::Empty>(
            [this](
                   ::grpc::CallbackServerContext* context, const ::TempoWorld::SetBoolArrayPropertyRequest* request, ::TempoScripting::Empty* response) { return this->SetBoolArrayProperty(context, request, response); }));}
    void SetMessageAllocatorFor_SetBoolArrayProperty(
        ::grpc::MessageAllocator< ::TempoWorld::SetBoolArrayPropertyRequest, ::TempoScripting::Empty>* allocator) {
      ::grpc::internal::MethodHandler* const handler = ::grpc::Service::GetHandler(25);
      static_cast<::grpc::internal::CallbackUnaryHandler< ::TempoWorld::SetBoolArrayPropertyRequest, ::TempoScripting::Empty>*>(handler)
              ->SetMessageAllocator(allocator);
    }
    ~WithCallbackMethod_SetBoolArrayProperty() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status SetBoolArrayProperty(::grpc::ServerContext* /*context*/, const ::TempoWorld::SetBoolArrayPropertyRequest* /*request*/, ::TempoScripting::Empty* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    virtual ::grpc::ServerUnaryReactor* SetBoolArrayProperty(
      ::grpc::CallbackServerContext* /*context*/, const ::TempoWorld::SetBoolArrayPropertyRequest* /*request*/, ::TempoScripting::Empty* /*response*/)  { return nullptr; }
  };
  template <class BaseClass>
  class WithCallbackMethod_SetStringArrayProperty : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithCallbackMethod_SetStringArrayProperty() {
      ::grpc::Service::MarkMethodCallback(26,
          new ::grpc::internal::CallbackUnaryHandler< ::TempoWorld::SetStringArrayPropertyRequest, ::TempoScripting::Empty>(
            [this](
                   ::grpc::CallbackServerContext* context, const ::TempoWorld::SetStringArrayPropertyRequest* request, ::TempoScripting::Empty* response) { return this->SetStringArrayProperty(context, request, response); }));}
    void SetMessageAllocatorFor_SetStringArrayProperty(
        ::grpc::MessageAllocator< ::TempoWorld::SetStringArrayPropertyRequest, ::TempoScripting::Empty>* allocator) {
      ::grpc::internal::MethodHandler* const handler = ::grpc::Service::GetHandler(26);
      static_cast<::grpc::internal::CallbackUnaryHandler< ::TempoWorld::SetStringArrayPropertyRequest, ::TempoScripting::Empty>*>(handler)
              ->SetMessageAllocator(allocator);
    }
    ~WithCallbackMethod_SetStringArrayProperty() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status SetStringArrayProperty(::grpc::ServerContext* /*context*/, const ::TempoWorld::SetStringArrayPropertyRequest* /*request*/, ::TempoScripting::Empty* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    virtual ::grpc::ServerUnaryReactor* SetStringArrayProperty(
      ::grpc::CallbackServerContext* /*context*/, const ::TempoWorld::SetStringArrayPropertyRequest* /*request*/, ::TempoScripting::Empty* /*response*/)  { return nullptr; }
  };
  template <class BaseClass>
  class WithCallbackMethod_SetEnumArrayProperty : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithCallbackMethod_SetEnumArrayProperty() {
      ::grpc::Service::MarkMethodCallback(27,
          new ::grpc::internal::CallbackUnaryHandler< ::TempoWorld::SetEnumArrayPropertyRequest, ::TempoScripting::Empty>(
            [this](
                   ::grpc::CallbackServerContext* context, const ::TempoWorld::SetEnumArrayPropertyRequest* request, ::TempoScripting::Empty* response) { return this->SetEnumArrayProperty(context, request, response); }));}
    void SetMessageAllocatorFor_SetEnumArrayProperty(
        ::grpc::MessageAllocator< ::TempoWorld::SetEnumArrayPropertyRequest, ::TempoScripting::Empty>* allocator) {
      ::grpc::internal::MethodHandler* const handler = ::grpc::Service::GetHandler(27);
      static_cast<::grpc::internal::CallbackUnaryHandler< ::TempoWorld::SetEnumArrayPropertyRequest, ::TempoScripting::Empty>*>(handler)
              ->SetMessageAllocator(allocator);
    }
    ~WithCallbackMethod_SetEnumArrayProperty() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status SetEnumArrayProperty(::grpc::ServerContext* /*context*/, const ::TempoWorld::SetEnumArrayPropertyRequest* /*request*/, ::TempoScripting::Empty* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    virtual ::grpc::ServerUnaryReactor* SetEnumArrayProperty(
      ::grpc::CallbackServerContext* /*context*/, const ::TempoWorld::SetEnumArrayPropertyRequest* /*request*/, ::TempoScripting::Empty* /*response*/)  { return nullptr; }
  };
  template <class BaseClass>
  class WithCallbackMethod_SetIntArrayProperty : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithCallbackMethod_SetIntArrayProperty() {
      ::grpc::Service::MarkMethodCallback(28,
          new ::grpc::internal::CallbackUnaryHandler< ::TempoWorld::SetIntArrayPropertyRequest, ::TempoScripting::Empty>(
            [this](
                   ::grpc::CallbackServerContext* context, const ::TempoWorld::SetIntArrayPropertyRequest* request, ::TempoScripting::Empty* response) { return this->SetIntArrayProperty(context, request, response); }));}
    void SetMessageAllocatorFor_SetIntArrayProperty(
        ::grpc::MessageAllocator< ::TempoWorld::SetIntArrayPropertyRequest, ::TempoScripting::Empty>* allocator) {
      ::grpc::internal::MethodHandler* const handler = ::grpc::Service::GetHandler(28);
      static_cast<::grpc::internal::CallbackUnaryHandler< ::TempoWorld::SetIntArrayPropertyRequest, ::TempoScripting::Empty>*>(handler)
              ->SetMessageAllocator(allocator);
    }
    ~WithCallbackMethod_SetIntArrayProperty() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status SetIntArrayProperty(::grpc::ServerContext* /*context*/, const ::TempoWorld::SetIntArrayPropertyRequest* /*request*/, ::TempoScripting::Empty* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    virtual ::grpc::ServerUnaryReactor* SetIntArrayProperty(
      ::grpc::CallbackServerContext* /*context*/, const ::TempoWorld::SetIntArrayPropertyRequest* /*request*/, ::TempoScripting::Empty* /*response*/)  { return nullptr; }
  };
  template <class BaseClass>
  class WithCallbackMethod_SetFloatArrayProperty : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithCallbackMethod_SetFloatArrayProperty() {
      ::grpc::Service::MarkMethodCallback(29,
          new ::grpc::internal::CallbackUnaryHandler< ::TempoWorld::SetFloatArrayPropertyRequest, ::TempoScripting::Empty>(
            [this](
                   ::grpc::CallbackServerContext* context, const ::TempoWorld::SetFloatArrayPropertyRequest* request, ::TempoScripting::Empty* response) { return this->SetFloatArrayProperty(context, request, response); }));}
    void SetMessageAllocatorFor_SetFloatArrayProperty(
        ::grpc::MessageAllocator< ::TempoWorld::SetFloatArrayPropertyRequest, ::TempoScripting::Empty>* allocator) {
      ::grpc::internal::MethodHandler* const handler = ::grpc::Service::GetHandler(29);
      static_cast<::grpc::internal::CallbackUnaryHandler< ::TempoWorld::SetFloatArrayPropertyRequest, ::TempoScripting::Empty>*>(handler)
              ->SetMessageAllocator(allocator);
    }
    ~WithCallbackMethod_SetFloatArrayProperty() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status SetFloatArrayProperty(::grpc::ServerContext* /*context*/, const ::TempoWorld::SetFloatArrayPropertyRequest* /*request*/, ::TempoScripting::Empty* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    virtual ::grpc::ServerUnaryReactor* SetFloatArrayProperty(
      ::grpc::CallbackServerContext* /*context*/, const ::TempoWorld::SetFloatArrayPropertyRequest* /*request*/, ::TempoScripting::Empty* /*response*/)  { return nullptr; }
  };
  template <class BaseClass>
  class WithCallbackMethod_SetClassArrayProperty : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithCallbackMethod_SetClassArrayProperty() {
      ::grpc::Service::MarkMethodCallback(30,
          new ::grpc::internal::CallbackUnaryHandler< ::TempoWorld::SetClassArrayPropertyRequest, ::TempoScripting::Empty>(
            [this](
                   ::grpc::CallbackServerContext* context, const ::TempoWorld::SetClassArrayPropertyRequest* request, ::TempoScripting::Empty* response) { return this->SetClassArrayProperty(context, request, response); }));}
    void SetMessageAllocatorFor_SetClassArrayProperty(
        ::grpc::MessageAllocator< ::TempoWorld::SetClassArrayPropertyRequest, ::TempoScripting::Empty>* allocator) {
      ::grpc::internal::MethodHandler* const handler = ::grpc::Service::GetHandler(30);
      static_cast<::grpc::internal::CallbackUnaryHandler< ::TempoWorld::SetClassArrayPropertyRequest, ::TempoScripting::Empty>*>(handler)
              ->SetMessageAllocator(allocator);
    }
    ~WithCallbackMethod_SetClassArrayProperty() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status SetClassArrayProperty(::grpc::ServerContext* /*context*/, const ::TempoWorld::SetClassArrayPropertyRequest* /*request*/, ::TempoScripting::Empty* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    virtual ::grpc::ServerUnaryReactor* SetClassArrayProperty(
      ::grpc::CallbackServerContext* /*context*/, const ::TempoWorld::SetClassArrayPropertyRequest* /*request*/, ::TempoScripting::Empty* /*response*/)  { return nullptr; }
  };
  template <class BaseClass>
  class WithCallbackMethod_SetAssetArrayProperty : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithCallbackMethod_SetAssetArrayProperty() {
      ::grpc::Service::MarkMethodCallback(31,
          new ::grpc::internal::CallbackUnaryHandler< ::TempoWorld::SetAssetArrayPropertyRequest, ::TempoScripting::Empty>(
            [this](
                   ::grpc::CallbackServerContext* context, const ::TempoWorld::SetAssetArrayPropertyRequest* request, ::TempoScripting::Empty* response) { return this->SetAssetArrayProperty(context, request, response); }));}
    void SetMessageAllocatorFor_SetAssetArrayProperty(
        ::grpc::MessageAllocator< ::TempoWorld::SetAssetArrayPropertyRequest, ::TempoScripting::Empty>* allocator) {
      ::grpc::internal::MethodHandler* const handler = ::grpc::Service::GetHandler(31);
      static_cast<::grpc::internal::CallbackUnaryHandler< ::TempoWorld::SetAssetArrayPropertyRequest, ::TempoScripting::Empty>*>(handler)
              ->SetMessageAllocator(allocator);
    }
    ~WithCallbackMethod_SetAssetArrayProperty() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status SetAssetArrayProperty(::grpc::ServerContext* /*context*/, const ::TempoWorld::SetAssetArrayPropertyRequest* /*request*/, ::TempoScripting::Empty* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    virtual ::grpc::ServerUnaryReactor* SetAssetArrayProperty(
      ::grpc::CallbackServerContext* /*context*/, const ::TempoWorld::SetAssetArrayPropertyRequest* /*request*/, ::TempoScripting::Empty* /*response*/)  { return nullptr; }
  };
  template <class BaseClass>
  class WithCallbackMethod_SetActorArrayProperty : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithCallbackMethod_SetActorArrayProperty() {
      ::grpc::Service::MarkMethodCallback(32,
          new ::grpc::internal::CallbackUnaryHandler< ::TempoWorld::SetActorArrayPropertyRequest, ::TempoScripting::Empty>(
            [this](
                   ::grpc::CallbackServerContext* context, const ::TempoWorld::SetActorArrayPropertyRequest* request, ::TempoScripting::Empty* response) { return this->SetActorArrayProperty(context, request, response); }));}
    void SetMessageAllocatorFor_SetActorArrayProperty(
        ::grpc::MessageAllocator< ::TempoWorld::SetActorArrayPropertyRequest, ::TempoScripting::Empty>* allocator) {
      ::grpc::internal::MethodHandler* const handler = ::grpc::Service::GetHandler(32);
      static_cast<::grpc::internal::CallbackUnaryHandler< ::TempoWorld::SetActorArrayPropertyRequest, ::TempoScripting::Empty>*>(handler)
              ->SetMessageAllocator(allocator);
    }
    ~WithCallbackMethod_SetActorArrayProperty() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status SetActorArrayProperty(::grpc::ServerContext* /*context*/, const ::TempoWorld::SetActorArrayPropertyRequest* /*request*/, ::TempoScripting::Empty* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    virtual ::grpc::ServerUnaryReactor* SetActorArrayProperty(
      ::grpc::CallbackServerContext* /*context*/, const ::TempoWorld::SetActorArrayPropertyRequest* /*request*/, ::TempoScripting::Empty* /*response*/)  { return nullptr; }
  };
  template <class BaseClass>
  class WithCallbackMethod_SetComponentArrayProperty : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithCallbackMethod_SetComponentArrayProperty() {
      ::grpc::Service::MarkMethodCallback(33,
          new ::grpc::internal::CallbackUnaryHandler< ::TempoWorld::SetComponentArrayPropertyRequest, ::TempoScripting::Empty>(
            [this](
                   ::grpc::CallbackServerContext* context, const ::TempoWorld::SetComponentArrayPropertyRequest* request, ::TempoScripting::Empty* response) { return this->SetComponentArrayProperty(context, request, response); }));}
    void SetMessageAllocatorFor_SetComponentArrayProperty(
        ::grpc::MessageAllocator< ::TempoWorld::SetComponentArrayPropertyRequest, ::TempoScripting::Empty>* allocator) {
      ::grpc::internal::MethodHandler* const handler = ::grpc::Service::GetHandler(33);
      static_cast<::grpc::internal::CallbackUnaryHandler< ::TempoWorld::SetComponentArrayPropertyRequest, ::TempoScripting::Empty>*>(handler)
              ->SetMessageAllocator(allocator);
    }
    ~WithCallbackMethod_SetComponentArrayProperty() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status SetComponentArrayProperty(::grpc::ServerContext* /*context*/, const ::TempoWorld::SetComponentArrayPropertyRequest* /*request*/, ::TempoScripting::Empty* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    virtual ::grpc::ServerUnaryReactor* SetComponentArrayProperty(
      ::grpc::CallbackServerContext* /*context*/, const ::TempoWorld::SetComponentArrayPropertyRequest* /*request*/, ::TempoScripting::Empty* /*response*/)  { return nullptr; }
  };
  template <class BaseClass>
  class WithCallbackMethod_CallFunction : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithCallbackMethod_CallFunction() {
      ::grpc::Service::MarkMethodCallback(34,
          new ::grpc::internal::CallbackUnaryHandler< ::TempoWorld::CallFunctionRequest, ::TempoScripting::Empty>(
            [this](
                   ::grpc::CallbackServerContext* context, const ::TempoWorld::CallFunctionRequest* request, ::TempoScripting::Empty* response) { return this->CallFunction(context, request, response); }));}
    void SetMessageAllocatorFor_CallFunction(
        ::grpc::MessageAllocator< ::TempoWorld::CallFunctionRequest, ::TempoScripting::Empty>* allocator) {
      ::grpc::internal::MethodHandler* const handler = ::grpc::Service::GetHandler(34);
      static_cast<::grpc::internal::CallbackUnaryHandler< ::TempoWorld::CallFunctionRequest, ::TempoScripting::Empty>*>(handler)
              ->SetMessageAllocator(allocator);
    }
    ~WithCallbackMethod_CallFunction() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status CallFunction(::grpc::ServerContext* /*context*/, const ::TempoWorld::CallFunctionRequest* /*request*/, ::TempoScripting::Empty* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    virtual ::grpc::ServerUnaryReactor* CallFunction(
      ::grpc::CallbackServerContext* /*context*/, const ::TempoWorld::CallFunctionRequest* /*request*/, ::TempoScripting::Empty* /*response*/)  { return nullptr; }
  };
  typedef WithCallbackMethod_SpawnActor<WithCallbackMethod_FinishSpawningActor<WithCallbackMethod_DestroyActor<WithCallbackMethod_AddComponent<WithCallbackMethod_DestroyComponent<WithCallbackMethod_SetActorTransform<WithCallbackMethod_SetComponentTransform<WithCallbackMethod_ActivateComponent<WithCallbackMethod_DeactivateComponent<WithCallbackMethod_GetAllActors<WithCallbackMethod_GetAllComponents<WithCallbackMethod_GetActorProperties<WithCallbackMethod_GetComponentProperties<WithCallbackMethod_SetBoolProperty<WithCallbackMethod_SetStringProperty<WithCallbackMethod_SetEnumProperty<WithCallbackMethod_SetIntProperty<WithCallbackMethod_SetFloatProperty<WithCallbackMethod_SetVectorProperty<WithCallbackMethod_SetRotatorProperty<WithCallbackMethod_SetColorProperty<WithCallbackMethod_SetClassProperty<WithCallbackMethod_SetAssetProperty<WithCallbackMethod_SetActorProperty<WithCallbackMethod_SetComponentProperty<WithCallbackMethod_SetBoolArrayProperty<WithCallbackMethod_SetStringArrayProperty<WithCallbackMethod_SetEnumArrayProperty<WithCallbackMethod_SetIntArrayProperty<WithCallbackMethod_SetFloatArrayProperty<WithCallbackMethod_SetClassArrayProperty<WithCallbackMethod_SetAssetArrayProperty<WithCallbackMethod_SetActorArrayProperty<WithCallbackMethod_SetComponentArrayProperty<WithCallbackMethod_CallFunction<Service > > > > > > > > > > > > > > > > > > > > > > > > > > > > > > > > > > > CallbackService;
  typedef CallbackService ExperimentalCallbackService;
  template <class BaseClass>
  class WithGenericMethod_SpawnActor : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithGenericMethod_SpawnActor() {
      ::grpc::Service::MarkMethodGeneric(0);
    }
    ~WithGenericMethod_SpawnActor() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status SpawnActor(::grpc::ServerContext* /*context*/, const ::TempoWorld::SpawnActorRequest* /*request*/, ::TempoWorld::SpawnActorResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
  };
  template <class BaseClass>
  class WithGenericMethod_FinishSpawningActor : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithGenericMethod_FinishSpawningActor() {
      ::grpc::Service::MarkMethodGeneric(1);
    }
    ~WithGenericMethod_FinishSpawningActor() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status FinishSpawningActor(::grpc::ServerContext* /*context*/, const ::TempoWorld::FinishSpawningActorRequest* /*request*/, ::TempoWorld::FinishSpawningActorResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
  };
  template <class BaseClass>
  class WithGenericMethod_DestroyActor : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithGenericMethod_DestroyActor() {
      ::grpc::Service::MarkMethodGeneric(2);
    }
    ~WithGenericMethod_DestroyActor() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status DestroyActor(::grpc::ServerContext* /*context*/, const ::TempoWorld::DestroyActorRequest* /*request*/, ::TempoScripting::Empty* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
  };
  template <class BaseClass>
  class WithGenericMethod_AddComponent : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithGenericMethod_AddComponent() {
      ::grpc::Service::MarkMethodGeneric(3);
    }
    ~WithGenericMethod_AddComponent() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status AddComponent(::grpc::ServerContext* /*context*/, const ::TempoWorld::AddComponentRequest* /*request*/, ::TempoWorld::AddComponentResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
  };
  template <class BaseClass>
  class WithGenericMethod_DestroyComponent : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithGenericMethod_DestroyComponent() {
      ::grpc::Service::MarkMethodGeneric(4);
    }
    ~WithGenericMethod_DestroyComponent() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status DestroyComponent(::grpc::ServerContext* /*context*/, const ::TempoWorld::DestroyComponentRequest* /*request*/, ::TempoScripting::Empty* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
  };
  template <class BaseClass>
  class WithGenericMethod_SetActorTransform : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithGenericMethod_SetActorTransform() {
      ::grpc::Service::MarkMethodGeneric(5);
    }
    ~WithGenericMethod_SetActorTransform() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status SetActorTransform(::grpc::ServerContext* /*context*/, const ::TempoWorld::SetActorTransformRequest* /*request*/, ::TempoScripting::Empty* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
  };
  template <class BaseClass>
  class WithGenericMethod_SetComponentTransform : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithGenericMethod_SetComponentTransform() {
      ::grpc::Service::MarkMethodGeneric(6);
    }
    ~WithGenericMethod_SetComponentTransform() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status SetComponentTransform(::grpc::ServerContext* /*context*/, const ::TempoWorld::SetComponentTransformRequest* /*request*/, ::TempoScripting::Empty* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
  };
  template <class BaseClass>
  class WithGenericMethod_ActivateComponent : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithGenericMethod_ActivateComponent() {
      ::grpc::Service::MarkMethodGeneric(7);
    }
    ~WithGenericMethod_ActivateComponent() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status ActivateComponent(::grpc::ServerContext* /*context*/, const ::TempoWorld::ActivateComponentRequest* /*request*/, ::TempoScripting::Empty* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
  };
  template <class BaseClass>
  class WithGenericMethod_DeactivateComponent : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithGenericMethod_DeactivateComponent() {
      ::grpc::Service::MarkMethodGeneric(8);
    }
    ~WithGenericMethod_DeactivateComponent() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status DeactivateComponent(::grpc::ServerContext* /*context*/, const ::TempoWorld::DeactivateComponentRequest* /*request*/, ::TempoScripting::Empty* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
  };
  template <class BaseClass>
  class WithGenericMethod_GetAllActors : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithGenericMethod_GetAllActors() {
      ::grpc::Service::MarkMethodGeneric(9);
    }
    ~WithGenericMethod_GetAllActors() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status GetAllActors(::grpc::ServerContext* /*context*/, const ::TempoWorld::GetAllActorsRequest* /*request*/, ::TempoWorld::GetAllActorsResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
  };
  template <class BaseClass>
  class WithGenericMethod_GetAllComponents : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithGenericMethod_GetAllComponents() {
      ::grpc::Service::MarkMethodGeneric(10);
    }
    ~WithGenericMethod_GetAllComponents() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status GetAllComponents(::grpc::ServerContext* /*context*/, const ::TempoWorld::GetAllComponentsRequest* /*request*/, ::TempoWorld::GetAllComponentsResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
  };
  template <class BaseClass>
  class WithGenericMethod_GetActorProperties : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithGenericMethod_GetActorProperties() {
      ::grpc::Service::MarkMethodGeneric(11);
    }
    ~WithGenericMethod_GetActorProperties() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status GetActorProperties(::grpc::ServerContext* /*context*/, const ::TempoWorld::GetActorPropertiesRequest* /*request*/, ::TempoWorld::GetPropertiesResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
  };
  template <class BaseClass>
  class WithGenericMethod_GetComponentProperties : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithGenericMethod_GetComponentProperties() {
      ::grpc::Service::MarkMethodGeneric(12);
    }
    ~WithGenericMethod_GetComponentProperties() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status GetComponentProperties(::grpc::ServerContext* /*context*/, const ::TempoWorld::GetComponentPropertiesRequest* /*request*/, ::TempoWorld::GetPropertiesResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
  };
  template <class BaseClass>
  class WithGenericMethod_SetBoolProperty : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithGenericMethod_SetBoolProperty() {
      ::grpc::Service::MarkMethodGeneric(13);
    }
    ~WithGenericMethod_SetBoolProperty() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status SetBoolProperty(::grpc::ServerContext* /*context*/, const ::TempoWorld::SetBoolPropertyRequest* /*request*/, ::TempoScripting::Empty* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
  };
  template <class BaseClass>
  class WithGenericMethod_SetStringProperty : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithGenericMethod_SetStringProperty() {
      ::grpc::Service::MarkMethodGeneric(14);
    }
    ~WithGenericMethod_SetStringProperty() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status SetStringProperty(::grpc::ServerContext* /*context*/, const ::TempoWorld::SetStringPropertyRequest* /*request*/, ::TempoScripting::Empty* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
  };
  template <class BaseClass>
  class WithGenericMethod_SetEnumProperty : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithGenericMethod_SetEnumProperty() {
      ::grpc::Service::MarkMethodGeneric(15);
    }
    ~WithGenericMethod_SetEnumProperty() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status SetEnumProperty(::grpc::ServerContext* /*context*/, const ::TempoWorld::SetEnumPropertyRequest* /*request*/, ::TempoScripting::Empty* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
  };
  template <class BaseClass>
  class WithGenericMethod_SetIntProperty : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithGenericMethod_SetIntProperty() {
      ::grpc::Service::MarkMethodGeneric(16);
    }
    ~WithGenericMethod_SetIntProperty() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status SetIntProperty(::grpc::ServerContext* /*context*/, const ::TempoWorld::SetIntPropertyRequest* /*request*/, ::TempoScripting::Empty* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
  };
  template <class BaseClass>
  class WithGenericMethod_SetFloatProperty : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithGenericMethod_SetFloatProperty() {
      ::grpc::Service::MarkMethodGeneric(17);
    }
    ~WithGenericMethod_SetFloatProperty() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status SetFloatProperty(::grpc::ServerContext* /*context*/, const ::TempoWorld::SetFloatPropertyRequest* /*request*/, ::TempoScripting::Empty* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
  };
  template <class BaseClass>
  class WithGenericMethod_SetVectorProperty : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithGenericMethod_SetVectorProperty() {
      ::grpc::Service::MarkMethodGeneric(18);
    }
    ~WithGenericMethod_SetVectorProperty() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status SetVectorProperty(::grpc::ServerContext* /*context*/, const ::TempoWorld::SetVectorPropertyRequest* /*request*/, ::TempoScripting::Empty* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
  };
  template <class BaseClass>
  class WithGenericMethod_SetRotatorProperty : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithGenericMethod_SetRotatorProperty() {
      ::grpc::Service::MarkMethodGeneric(19);
    }
    ~WithGenericMethod_SetRotatorProperty() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status SetRotatorProperty(::grpc::ServerContext* /*context*/, const ::TempoWorld::SetRotatorPropertyRequest* /*request*/, ::TempoScripting::Empty* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
  };
  template <class BaseClass>
  class WithGenericMethod_SetColorProperty : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithGenericMethod_SetColorProperty() {
      ::grpc::Service::MarkMethodGeneric(20);
    }
    ~WithGenericMethod_SetColorProperty() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status SetColorProperty(::grpc::ServerContext* /*context*/, const ::TempoWorld::SetColorPropertyRequest* /*request*/, ::TempoScripting::Empty* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
  };
  template <class BaseClass>
  class WithGenericMethod_SetClassProperty : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithGenericMethod_SetClassProperty() {
      ::grpc::Service::MarkMethodGeneric(21);
    }
    ~WithGenericMethod_SetClassProperty() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status SetClassProperty(::grpc::ServerContext* /*context*/, const ::TempoWorld::SetClassPropertyRequest* /*request*/, ::TempoScripting::Empty* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
  };
  template <class BaseClass>
  class WithGenericMethod_SetAssetProperty : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithGenericMethod_SetAssetProperty() {
      ::grpc::Service::MarkMethodGeneric(22);
    }
    ~WithGenericMethod_SetAssetProperty() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status SetAssetProperty(::grpc::ServerContext* /*context*/, const ::TempoWorld::SetAssetPropertyRequest* /*request*/, ::TempoScripting::Empty* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
  };
  template <class BaseClass>
  class WithGenericMethod_SetActorProperty : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithGenericMethod_SetActorProperty() {
      ::grpc::Service::MarkMethodGeneric(23);
    }
    ~WithGenericMethod_SetActorProperty() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status SetActorProperty(::grpc::ServerContext* /*context*/, const ::TempoWorld::SetActorPropertyRequest* /*request*/, ::TempoScripting::Empty* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
  };
  template <class BaseClass>
  class WithGenericMethod_SetComponentProperty : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithGenericMethod_SetComponentProperty() {
      ::grpc::Service::MarkMethodGeneric(24);
    }
    ~WithGenericMethod_SetComponentProperty() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status SetComponentProperty(::grpc::ServerContext* /*context*/, const ::TempoWorld::SetComponentPropertyRequest* /*request*/, ::TempoScripting::Empty* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
  };
  template <class BaseClass>
  class WithGenericMethod_SetBoolArrayProperty : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithGenericMethod_SetBoolArrayProperty() {
      ::grpc::Service::MarkMethodGeneric(25);
    }
    ~WithGenericMethod_SetBoolArrayProperty() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status SetBoolArrayProperty(::grpc::ServerContext* /*context*/, const ::TempoWorld::SetBoolArrayPropertyRequest* /*request*/, ::TempoScripting::Empty* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
  };
  template <class BaseClass>
  class WithGenericMethod_SetStringArrayProperty : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithGenericMethod_SetStringArrayProperty() {
      ::grpc::Service::MarkMethodGeneric(26);
    }
    ~WithGenericMethod_SetStringArrayProperty() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status SetStringArrayProperty(::grpc::ServerContext* /*context*/, const ::TempoWorld::SetStringArrayPropertyRequest* /*request*/, ::TempoScripting::Empty* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
  };
  template <class BaseClass>
  class WithGenericMethod_SetEnumArrayProperty : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithGenericMethod_SetEnumArrayProperty() {
      ::grpc::Service::MarkMethodGeneric(27);
    }
    ~WithGenericMethod_SetEnumArrayProperty() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status SetEnumArrayProperty(::grpc::ServerContext* /*context*/, const ::TempoWorld::SetEnumArrayPropertyRequest* /*request*/, ::TempoScripting::Empty* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
  };
  template <class BaseClass>
  class WithGenericMethod_SetIntArrayProperty : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithGenericMethod_SetIntArrayProperty() {
      ::grpc::Service::MarkMethodGeneric(28);
    }
    ~WithGenericMethod_SetIntArrayProperty() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status SetIntArrayProperty(::grpc::ServerContext* /*context*/, const ::TempoWorld::SetIntArrayPropertyRequest* /*request*/, ::TempoScripting::Empty* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
  };
  template <class BaseClass>
  class WithGenericMethod_SetFloatArrayProperty : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithGenericMethod_SetFloatArrayProperty() {
      ::grpc::Service::MarkMethodGeneric(29);
    }
    ~WithGenericMethod_SetFloatArrayProperty() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status SetFloatArrayProperty(::grpc::ServerContext* /*context*/, const ::TempoWorld::SetFloatArrayPropertyRequest* /*request*/, ::TempoScripting::Empty* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
  };
  template <class BaseClass>
  class WithGenericMethod_SetClassArrayProperty : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithGenericMethod_SetClassArrayProperty() {
      ::grpc::Service::MarkMethodGeneric(30);
    }
    ~WithGenericMethod_SetClassArrayProperty() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status SetClassArrayProperty(::grpc::ServerContext* /*context*/, const ::TempoWorld::SetClassArrayPropertyRequest* /*request*/, ::TempoScripting::Empty* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
  };
  template <class BaseClass>
  class WithGenericMethod_SetAssetArrayProperty : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithGenericMethod_SetAssetArrayProperty() {
      ::grpc::Service::MarkMethodGeneric(31);
    }
    ~WithGenericMethod_SetAssetArrayProperty() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status SetAssetArrayProperty(::grpc::ServerContext* /*context*/, const ::TempoWorld::SetAssetArrayPropertyRequest* /*request*/, ::TempoScripting::Empty* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
  };
  template <class BaseClass>
  class WithGenericMethod_SetActorArrayProperty : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithGenericMethod_SetActorArrayProperty() {
      ::grpc::Service::MarkMethodGeneric(32);
    }
    ~WithGenericMethod_SetActorArrayProperty() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status SetActorArrayProperty(::grpc::ServerContext* /*context*/, const ::TempoWorld::SetActorArrayPropertyRequest* /*request*/, ::TempoScripting::Empty* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
  };
  template <class BaseClass>
  class WithGenericMethod_SetComponentArrayProperty : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithGenericMethod_SetComponentArrayProperty() {
      ::grpc::Service::MarkMethodGeneric(33);
    }
    ~WithGenericMethod_SetComponentArrayProperty() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status SetComponentArrayProperty(::grpc::ServerContext* /*context*/, const ::TempoWorld::SetComponentArrayPropertyRequest* /*request*/, ::TempoScripting::Empty* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
  };
  template <class BaseClass>
  class WithGenericMethod_CallFunction : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithGenericMethod_CallFunction() {
      ::grpc::Service::MarkMethodGeneric(34);
    }
    ~WithGenericMethod_CallFunction() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status CallFunction(::grpc::ServerContext* /*context*/, const ::TempoWorld::CallFunctionRequest* /*request*/, ::TempoScripting::Empty* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
  };
  template <class BaseClass>
  class WithRawMethod_SpawnActor : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithRawMethod_SpawnActor() {
      ::grpc::Service::MarkMethodRaw(0);
    }
    ~WithRawMethod_SpawnActor() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status SpawnActor(::grpc::ServerContext* /*context*/, const ::TempoWorld::SpawnActorRequest* /*request*/, ::TempoWorld::SpawnActorResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    void RequestSpawnActor(::grpc::ServerContext* context, ::grpc::ByteBuffer* request, ::grpc::ServerAsyncResponseWriter< ::grpc::ByteBuffer>* response, ::grpc::CompletionQueue* new_call_cq, ::grpc::ServerCompletionQueue* notification_cq, void *tag) {
      ::grpc::Service::RequestAsyncUnary(0, context, request, response, new_call_cq, notification_cq, tag);
    }
  };
  template <class BaseClass>
  class WithRawMethod_FinishSpawningActor : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithRawMethod_FinishSpawningActor() {
      ::grpc::Service::MarkMethodRaw(1);
    }
    ~WithRawMethod_FinishSpawningActor() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status FinishSpawningActor(::grpc::ServerContext* /*context*/, const ::TempoWorld::FinishSpawningActorRequest* /*request*/, ::TempoWorld::FinishSpawningActorResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    void RequestFinishSpawningActor(::grpc::ServerContext* context, ::grpc::ByteBuffer* request, ::grpc::ServerAsyncResponseWriter< ::grpc::ByteBuffer>* response, ::grpc::CompletionQueue* new_call_cq, ::grpc::ServerCompletionQueue* notification_cq, void *tag) {
      ::grpc::Service::RequestAsyncUnary(1, context, request, response, new_call_cq, notification_cq, tag);
    }
  };
  template <class BaseClass>
  class WithRawMethod_DestroyActor : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithRawMethod_DestroyActor() {
      ::grpc::Service::MarkMethodRaw(2);
    }
    ~WithRawMethod_DestroyActor() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status DestroyActor(::grpc::ServerContext* /*context*/, const ::TempoWorld::DestroyActorRequest* /*request*/, ::TempoScripting::Empty* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    void RequestDestroyActor(::grpc::ServerContext* context, ::grpc::ByteBuffer* request, ::grpc::ServerAsyncResponseWriter< ::grpc::ByteBuffer>* response, ::grpc::CompletionQueue* new_call_cq, ::grpc::ServerCompletionQueue* notification_cq, void *tag) {
      ::grpc::Service::RequestAsyncUnary(2, context, request, response, new_call_cq, notification_cq, tag);
    }
  };
  template <class BaseClass>
  class WithRawMethod_AddComponent : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithRawMethod_AddComponent() {
      ::grpc::Service::MarkMethodRaw(3);
    }
    ~WithRawMethod_AddComponent() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status AddComponent(::grpc::ServerContext* /*context*/, const ::TempoWorld::AddComponentRequest* /*request*/, ::TempoWorld::AddComponentResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    void RequestAddComponent(::grpc::ServerContext* context, ::grpc::ByteBuffer* request, ::grpc::ServerAsyncResponseWriter< ::grpc::ByteBuffer>* response, ::grpc::CompletionQueue* new_call_cq, ::grpc::ServerCompletionQueue* notification_cq, void *tag) {
      ::grpc::Service::RequestAsyncUnary(3, context, request, response, new_call_cq, notification_cq, tag);
    }
  };
  template <class BaseClass>
  class WithRawMethod_DestroyComponent : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithRawMethod_DestroyComponent() {
      ::grpc::Service::MarkMethodRaw(4);
    }
    ~WithRawMethod_DestroyComponent() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status DestroyComponent(::grpc::ServerContext* /*context*/, const ::TempoWorld::DestroyComponentRequest* /*request*/, ::TempoScripting::Empty* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    void RequestDestroyComponent(::grpc::ServerContext* context, ::grpc::ByteBuffer* request, ::grpc::ServerAsyncResponseWriter< ::grpc::ByteBuffer>* response, ::grpc::CompletionQueue* new_call_cq, ::grpc::ServerCompletionQueue* notification_cq, void *tag) {
      ::grpc::Service::RequestAsyncUnary(4, context, request, response, new_call_cq, notification_cq, tag);
    }
  };
  template <class BaseClass>
  class WithRawMethod_SetActorTransform : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithRawMethod_SetActorTransform() {
      ::grpc::Service::MarkMethodRaw(5);
    }
    ~WithRawMethod_SetActorTransform() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status SetActorTransform(::grpc::ServerContext* /*context*/, const ::TempoWorld::SetActorTransformRequest* /*request*/, ::TempoScripting::Empty* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    void RequestSetActorTransform(::grpc::ServerContext* context, ::grpc::ByteBuffer* request, ::grpc::ServerAsyncResponseWriter< ::grpc::ByteBuffer>* response, ::grpc::CompletionQueue* new_call_cq, ::grpc::ServerCompletionQueue* notification_cq, void *tag) {
      ::grpc::Service::RequestAsyncUnary(5, context, request, response, new_call_cq, notification_cq, tag);
    }
  };
  template <class BaseClass>
  class WithRawMethod_SetComponentTransform : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithRawMethod_SetComponentTransform() {
      ::grpc::Service::MarkMethodRaw(6);
    }
    ~WithRawMethod_SetComponentTransform() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status SetComponentTransform(::grpc::ServerContext* /*context*/, const ::TempoWorld::SetComponentTransformRequest* /*request*/, ::TempoScripting::Empty* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    void RequestSetComponentTransform(::grpc::ServerContext* context, ::grpc::ByteBuffer* request, ::grpc::ServerAsyncResponseWriter< ::grpc::ByteBuffer>* response, ::grpc::CompletionQueue* new_call_cq, ::grpc::ServerCompletionQueue* notification_cq, void *tag) {
      ::grpc::Service::RequestAsyncUnary(6, context, request, response, new_call_cq, notification_cq, tag);
    }
  };
  template <class BaseClass>
  class WithRawMethod_ActivateComponent : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithRawMethod_ActivateComponent() {
      ::grpc::Service::MarkMethodRaw(7);
    }
    ~WithRawMethod_ActivateComponent() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status ActivateComponent(::grpc::ServerContext* /*context*/, const ::TempoWorld::ActivateComponentRequest* /*request*/, ::TempoScripting::Empty* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    void RequestActivateComponent(::grpc::ServerContext* context, ::grpc::ByteBuffer* request, ::grpc::ServerAsyncResponseWriter< ::grpc::ByteBuffer>* response, ::grpc::CompletionQueue* new_call_cq, ::grpc::ServerCompletionQueue* notification_cq, void *tag) {
      ::grpc::Service::RequestAsyncUnary(7, context, request, response, new_call_cq, notification_cq, tag);
    }
  };
  template <class BaseClass>
  class WithRawMethod_DeactivateComponent : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithRawMethod_DeactivateComponent() {
      ::grpc::Service::MarkMethodRaw(8);
    }
    ~WithRawMethod_DeactivateComponent() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status DeactivateComponent(::grpc::ServerContext* /*context*/, const ::TempoWorld::DeactivateComponentRequest* /*request*/, ::TempoScripting::Empty* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    void RequestDeactivateComponent(::grpc::ServerContext* context, ::grpc::ByteBuffer* request, ::grpc::ServerAsyncResponseWriter< ::grpc::ByteBuffer>* response, ::grpc::CompletionQueue* new_call_cq, ::grpc::ServerCompletionQueue* notification_cq, void *tag) {
      ::grpc::Service::RequestAsyncUnary(8, context, request, response, new_call_cq, notification_cq, tag);
    }
  };
  template <class BaseClass>
  class WithRawMethod_GetAllActors : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithRawMethod_GetAllActors() {
      ::grpc::Service::MarkMethodRaw(9);
    }
    ~WithRawMethod_GetAllActors() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status GetAllActors(::grpc::ServerContext* /*context*/, const ::TempoWorld::GetAllActorsRequest* /*request*/, ::TempoWorld::GetAllActorsResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    void RequestGetAllActors(::grpc::ServerContext* context, ::grpc::ByteBuffer* request, ::grpc::ServerAsyncResponseWriter< ::grpc::ByteBuffer>* response, ::grpc::CompletionQueue* new_call_cq, ::grpc::ServerCompletionQueue* notification_cq, void *tag) {
      ::grpc::Service::RequestAsyncUnary(9, context, request, response, new_call_cq, notification_cq, tag);
    }
  };
  template <class BaseClass>
  class WithRawMethod_GetAllComponents : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithRawMethod_GetAllComponents() {
      ::grpc::Service::MarkMethodRaw(10);
    }
    ~WithRawMethod_GetAllComponents() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status GetAllComponents(::grpc::ServerContext* /*context*/, const ::TempoWorld::GetAllComponentsRequest* /*request*/, ::TempoWorld::GetAllComponentsResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    void RequestGetAllComponents(::grpc::ServerContext* context, ::grpc::ByteBuffer* request, ::grpc::ServerAsyncResponseWriter< ::grpc::ByteBuffer>* response, ::grpc::CompletionQueue* new_call_cq, ::grpc::ServerCompletionQueue* notification_cq, void *tag) {
      ::grpc::Service::RequestAsyncUnary(10, context, request, response, new_call_cq, notification_cq, tag);
    }
  };
  template <class BaseClass>
  class WithRawMethod_GetActorProperties : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithRawMethod_GetActorProperties() {
      ::grpc::Service::MarkMethodRaw(11);
    }
    ~WithRawMethod_GetActorProperties() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status GetActorProperties(::grpc::ServerContext* /*context*/, const ::TempoWorld::GetActorPropertiesRequest* /*request*/, ::TempoWorld::GetPropertiesResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    void RequestGetActorProperties(::grpc::ServerContext* context, ::grpc::ByteBuffer* request, ::grpc::ServerAsyncResponseWriter< ::grpc::ByteBuffer>* response, ::grpc::CompletionQueue* new_call_cq, ::grpc::ServerCompletionQueue* notification_cq, void *tag) {
      ::grpc::Service::RequestAsyncUnary(11, context, request, response, new_call_cq, notification_cq, tag);
    }
  };
  template <class BaseClass>
  class WithRawMethod_GetComponentProperties : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithRawMethod_GetComponentProperties() {
      ::grpc::Service::MarkMethodRaw(12);
    }
    ~WithRawMethod_GetComponentProperties() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status GetComponentProperties(::grpc::ServerContext* /*context*/, const ::TempoWorld::GetComponentPropertiesRequest* /*request*/, ::TempoWorld::GetPropertiesResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    void RequestGetComponentProperties(::grpc::ServerContext* context, ::grpc::ByteBuffer* request, ::grpc::ServerAsyncResponseWriter< ::grpc::ByteBuffer>* response, ::grpc::CompletionQueue* new_call_cq, ::grpc::ServerCompletionQueue* notification_cq, void *tag) {
      ::grpc::Service::RequestAsyncUnary(12, context, request, response, new_call_cq, notification_cq, tag);
    }
  };
  template <class BaseClass>
  class WithRawMethod_SetBoolProperty : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithRawMethod_SetBoolProperty() {
      ::grpc::Service::MarkMethodRaw(13);
    }
    ~WithRawMethod_SetBoolProperty() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status SetBoolProperty(::grpc::ServerContext* /*context*/, const ::TempoWorld::SetBoolPropertyRequest* /*request*/, ::TempoScripting::Empty* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    void RequestSetBoolProperty(::grpc::ServerContext* context, ::grpc::ByteBuffer* request, ::grpc::ServerAsyncResponseWriter< ::grpc::ByteBuffer>* response, ::grpc::CompletionQueue* new_call_cq, ::grpc::ServerCompletionQueue* notification_cq, void *tag) {
      ::grpc::Service::RequestAsyncUnary(13, context, request, response, new_call_cq, notification_cq, tag);
    }
  };
  template <class BaseClass>
  class WithRawMethod_SetStringProperty : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithRawMethod_SetStringProperty() {
      ::grpc::Service::MarkMethodRaw(14);
    }
    ~WithRawMethod_SetStringProperty() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status SetStringProperty(::grpc::ServerContext* /*context*/, const ::TempoWorld::SetStringPropertyRequest* /*request*/, ::TempoScripting::Empty* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    void RequestSetStringProperty(::grpc::ServerContext* context, ::grpc::ByteBuffer* request, ::grpc::ServerAsyncResponseWriter< ::grpc::ByteBuffer>* response, ::grpc::CompletionQueue* new_call_cq, ::grpc::ServerCompletionQueue* notification_cq, void *tag) {
      ::grpc::Service::RequestAsyncUnary(14, context, request, response, new_call_cq, notification_cq, tag);
    }
  };
  template <class BaseClass>
  class WithRawMethod_SetEnumProperty : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithRawMethod_SetEnumProperty() {
      ::grpc::Service::MarkMethodRaw(15);
    }
    ~WithRawMethod_SetEnumProperty() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status SetEnumProperty(::grpc::ServerContext* /*context*/, const ::TempoWorld::SetEnumPropertyRequest* /*request*/, ::TempoScripting::Empty* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    void RequestSetEnumProperty(::grpc::ServerContext* context, ::grpc::ByteBuffer* request, ::grpc::ServerAsyncResponseWriter< ::grpc::ByteBuffer>* response, ::grpc::CompletionQueue* new_call_cq, ::grpc::ServerCompletionQueue* notification_cq, void *tag) {
      ::grpc::Service::RequestAsyncUnary(15, context, request, response, new_call_cq, notification_cq, tag);
    }
  };
  template <class BaseClass>
  class WithRawMethod_SetIntProperty : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithRawMethod_SetIntProperty() {
      ::grpc::Service::MarkMethodRaw(16);
    }
    ~WithRawMethod_SetIntProperty() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status SetIntProperty(::grpc::ServerContext* /*context*/, const ::TempoWorld::SetIntPropertyRequest* /*request*/, ::TempoScripting::Empty* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    void RequestSetIntProperty(::grpc::ServerContext* context, ::grpc::ByteBuffer* request, ::grpc::ServerAsyncResponseWriter< ::grpc::ByteBuffer>* response, ::grpc::CompletionQueue* new_call_cq, ::grpc::ServerCompletionQueue* notification_cq, void *tag) {
      ::grpc::Service::RequestAsyncUnary(16, context, request, response, new_call_cq, notification_cq, tag);
    }
  };
  template <class BaseClass>
  class WithRawMethod_SetFloatProperty : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithRawMethod_SetFloatProperty() {
      ::grpc::Service::MarkMethodRaw(17);
    }
    ~WithRawMethod_SetFloatProperty() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status SetFloatProperty(::grpc::ServerContext* /*context*/, const ::TempoWorld::SetFloatPropertyRequest* /*request*/, ::TempoScripting::Empty* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    void RequestSetFloatProperty(::grpc::ServerContext* context, ::grpc::ByteBuffer* request, ::grpc::ServerAsyncResponseWriter< ::grpc::ByteBuffer>* response, ::grpc::CompletionQueue* new_call_cq, ::grpc::ServerCompletionQueue* notification_cq, void *tag) {
      ::grpc::Service::RequestAsyncUnary(17, context, request, response, new_call_cq, notification_cq, tag);
    }
  };
  template <class BaseClass>
  class WithRawMethod_SetVectorProperty : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithRawMethod_SetVectorProperty() {
      ::grpc::Service::MarkMethodRaw(18);
    }
    ~WithRawMethod_SetVectorProperty() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status SetVectorProperty(::grpc::ServerContext* /*context*/, const ::TempoWorld::SetVectorPropertyRequest* /*request*/, ::TempoScripting::Empty* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    void RequestSetVectorProperty(::grpc::ServerContext* context, ::grpc::ByteBuffer* request, ::grpc::ServerAsyncResponseWriter< ::grpc::ByteBuffer>* response, ::grpc::CompletionQueue* new_call_cq, ::grpc::ServerCompletionQueue* notification_cq, void *tag) {
      ::grpc::Service::RequestAsyncUnary(18, context, request, response, new_call_cq, notification_cq, tag);
    }
  };
  template <class BaseClass>
  class WithRawMethod_SetRotatorProperty : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithRawMethod_SetRotatorProperty() {
      ::grpc::Service::MarkMethodRaw(19);
    }
    ~WithRawMethod_SetRotatorProperty() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status SetRotatorProperty(::grpc::ServerContext* /*context*/, const ::TempoWorld::SetRotatorPropertyRequest* /*request*/, ::TempoScripting::Empty* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    void RequestSetRotatorProperty(::grpc::ServerContext* context, ::grpc::ByteBuffer* request, ::grpc::ServerAsyncResponseWriter< ::grpc::ByteBuffer>* response, ::grpc::CompletionQueue* new_call_cq, ::grpc::ServerCompletionQueue* notification_cq, void *tag) {
      ::grpc::Service::RequestAsyncUnary(19, context, request, response, new_call_cq, notification_cq, tag);
    }
  };
  template <class BaseClass>
  class WithRawMethod_SetColorProperty : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithRawMethod_SetColorProperty() {
      ::grpc::Service::MarkMethodRaw(20);
    }
    ~WithRawMethod_SetColorProperty() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status SetColorProperty(::grpc::ServerContext* /*context*/, const ::TempoWorld::SetColorPropertyRequest* /*request*/, ::TempoScripting::Empty* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    void RequestSetColorProperty(::grpc::ServerContext* context, ::grpc::ByteBuffer* request, ::grpc::ServerAsyncResponseWriter< ::grpc::ByteBuffer>* response, ::grpc::CompletionQueue* new_call_cq, ::grpc::ServerCompletionQueue* notification_cq, void *tag) {
      ::grpc::Service::RequestAsyncUnary(20, context, request, response, new_call_cq, notification_cq, tag);
    }
  };
  template <class BaseClass>
  class WithRawMethod_SetClassProperty : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithRawMethod_SetClassProperty() {
      ::grpc::Service::MarkMethodRaw(21);
    }
    ~WithRawMethod_SetClassProperty() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status SetClassProperty(::grpc::ServerContext* /*context*/, const ::TempoWorld::SetClassPropertyRequest* /*request*/, ::TempoScripting::Empty* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    void RequestSetClassProperty(::grpc::ServerContext* context, ::grpc::ByteBuffer* request, ::grpc::ServerAsyncResponseWriter< ::grpc::ByteBuffer>* response, ::grpc::CompletionQueue* new_call_cq, ::grpc::ServerCompletionQueue* notification_cq, void *tag) {
      ::grpc::Service::RequestAsyncUnary(21, context, request, response, new_call_cq, notification_cq, tag);
    }
  };
  template <class BaseClass>
  class WithRawMethod_SetAssetProperty : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithRawMethod_SetAssetProperty() {
      ::grpc::Service::MarkMethodRaw(22);
    }
    ~WithRawMethod_SetAssetProperty() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status SetAssetProperty(::grpc::ServerContext* /*context*/, const ::TempoWorld::SetAssetPropertyRequest* /*request*/, ::TempoScripting::Empty* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    void RequestSetAssetProperty(::grpc::ServerContext* context, ::grpc::ByteBuffer* request, ::grpc::ServerAsyncResponseWriter< ::grpc::ByteBuffer>* response, ::grpc::CompletionQueue* new_call_cq, ::grpc::ServerCompletionQueue* notification_cq, void *tag) {
      ::grpc::Service::RequestAsyncUnary(22, context, request, response, new_call_cq, notification_cq, tag);
    }
  };
  template <class BaseClass>
  class WithRawMethod_SetActorProperty : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithRawMethod_SetActorProperty() {
      ::grpc::Service::MarkMethodRaw(23);
    }
    ~WithRawMethod_SetActorProperty() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status SetActorProperty(::grpc::ServerContext* /*context*/, const ::TempoWorld::SetActorPropertyRequest* /*request*/, ::TempoScripting::Empty* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    void RequestSetActorProperty(::grpc::ServerContext* context, ::grpc::ByteBuffer* request, ::grpc::ServerAsyncResponseWriter< ::grpc::ByteBuffer>* response, ::grpc::CompletionQueue* new_call_cq, ::grpc::ServerCompletionQueue* notification_cq, void *tag) {
      ::grpc::Service::RequestAsyncUnary(23, context, request, response, new_call_cq, notification_cq, tag);
    }
  };
  template <class BaseClass>
  class WithRawMethod_SetComponentProperty : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithRawMethod_SetComponentProperty() {
      ::grpc::Service::MarkMethodRaw(24);
    }
    ~WithRawMethod_SetComponentProperty() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status SetComponentProperty(::grpc::ServerContext* /*context*/, const ::TempoWorld::SetComponentPropertyRequest* /*request*/, ::TempoScripting::Empty* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    void RequestSetComponentProperty(::grpc::ServerContext* context, ::grpc::ByteBuffer* request, ::grpc::ServerAsyncResponseWriter< ::grpc::ByteBuffer>* response, ::grpc::CompletionQueue* new_call_cq, ::grpc::ServerCompletionQueue* notification_cq, void *tag) {
      ::grpc::Service::RequestAsyncUnary(24, context, request, response, new_call_cq, notification_cq, tag);
    }
  };
  template <class BaseClass>
  class WithRawMethod_SetBoolArrayProperty : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithRawMethod_SetBoolArrayProperty() {
      ::grpc::Service::MarkMethodRaw(25);
    }
    ~WithRawMethod_SetBoolArrayProperty() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status SetBoolArrayProperty(::grpc::ServerContext* /*context*/, const ::TempoWorld::SetBoolArrayPropertyRequest* /*request*/, ::TempoScripting::Empty* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    void RequestSetBoolArrayProperty(::grpc::ServerContext* context, ::grpc::ByteBuffer* request, ::grpc::ServerAsyncResponseWriter< ::grpc::ByteBuffer>* response, ::grpc::CompletionQueue* new_call_cq, ::grpc::ServerCompletionQueue* notification_cq, void *tag) {
      ::grpc::Service::RequestAsyncUnary(25, context, request, response, new_call_cq, notification_cq, tag);
    }
  };
  template <class BaseClass>
  class WithRawMethod_SetStringArrayProperty : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithRawMethod_SetStringArrayProperty() {
      ::grpc::Service::MarkMethodRaw(26);
    }
    ~WithRawMethod_SetStringArrayProperty() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status SetStringArrayProperty(::grpc::ServerContext* /*context*/, const ::TempoWorld::SetStringArrayPropertyRequest* /*request*/, ::TempoScripting::Empty* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    void RequestSetStringArrayProperty(::grpc::ServerContext* context, ::grpc::ByteBuffer* request, ::grpc::ServerAsyncResponseWriter< ::grpc::ByteBuffer>* response, ::grpc::CompletionQueue* new_call_cq, ::grpc::ServerCompletionQueue* notification_cq, void *tag) {
      ::grpc::Service::RequestAsyncUnary(26, context, request, response, new_call_cq, notification_cq, tag);
    }
  };
  template <class BaseClass>
  class WithRawMethod_SetEnumArrayProperty : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithRawMethod_SetEnumArrayProperty() {
      ::grpc::Service::MarkMethodRaw(27);
    }
    ~WithRawMethod_SetEnumArrayProperty() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status SetEnumArrayProperty(::grpc::ServerContext* /*context*/, const ::TempoWorld::SetEnumArrayPropertyRequest* /*request*/, ::TempoScripting::Empty* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    void RequestSetEnumArrayProperty(::grpc::ServerContext* context, ::grpc::ByteBuffer* request, ::grpc::ServerAsyncResponseWriter< ::grpc::ByteBuffer>* response, ::grpc::CompletionQueue* new_call_cq, ::grpc::ServerCompletionQueue* notification_cq, void *tag) {
      ::grpc::Service::RequestAsyncUnary(27, context, request, response, new_call_cq, notification_cq, tag);
    }
  };
  template <class BaseClass>
  class WithRawMethod_SetIntArrayProperty : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithRawMethod_SetIntArrayProperty() {
      ::grpc::Service::MarkMethodRaw(28);
    }
    ~WithRawMethod_SetIntArrayProperty() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status SetIntArrayProperty(::grpc::ServerContext* /*context*/, const ::TempoWorld::SetIntArrayPropertyRequest* /*request*/, ::TempoScripting::Empty* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    void RequestSetIntArrayProperty(::grpc::ServerContext* context, ::grpc::ByteBuffer* request, ::grpc::ServerAsyncResponseWriter< ::grpc::ByteBuffer>* response, ::grpc::CompletionQueue* new_call_cq, ::grpc::ServerCompletionQueue* notification_cq, void *tag) {
      ::grpc::Service::RequestAsyncUnary(28, context, request, response, new_call_cq, notification_cq, tag);
    }
  };
  template <class BaseClass>
  class WithRawMethod_SetFloatArrayProperty : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithRawMethod_SetFloatArrayProperty() {
      ::grpc::Service::MarkMethodRaw(29);
    }
    ~WithRawMethod_SetFloatArrayProperty() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status SetFloatArrayProperty(::grpc::ServerContext* /*context*/, const ::TempoWorld::SetFloatArrayPropertyRequest* /*request*/, ::TempoScripting::Empty* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    void RequestSetFloatArrayProperty(::grpc::ServerContext* context, ::grpc::ByteBuffer* request, ::grpc::ServerAsyncResponseWriter< ::grpc::ByteBuffer>* response, ::grpc::CompletionQueue* new_call_cq, ::grpc::ServerCompletionQueue* notification_cq, void *tag) {
      ::grpc::Service::RequestAsyncUnary(29, context, request, response, new_call_cq, notification_cq, tag);
    }
  };
  template <class BaseClass>
  class WithRawMethod_SetClassArrayProperty : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithRawMethod_SetClassArrayProperty() {
      ::grpc::Service::MarkMethodRaw(30);
    }
    ~WithRawMethod_SetClassArrayProperty() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status SetClassArrayProperty(::grpc::ServerContext* /*context*/, const ::TempoWorld::SetClassArrayPropertyRequest* /*request*/, ::TempoScripting::Empty* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    void RequestSetClassArrayProperty(::grpc::ServerContext* context, ::grpc::ByteBuffer* request, ::grpc::ServerAsyncResponseWriter< ::grpc::ByteBuffer>* response, ::grpc::CompletionQueue* new_call_cq, ::grpc::ServerCompletionQueue* notification_cq, void *tag) {
      ::grpc::Service::RequestAsyncUnary(30, context, request, response, new_call_cq, notification_cq, tag);
    }
  };
  template <class BaseClass>
  class WithRawMethod_SetAssetArrayProperty : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithRawMethod_SetAssetArrayProperty() {
      ::grpc::Service::MarkMethodRaw(31);
    }
    ~WithRawMethod_SetAssetArrayProperty() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status SetAssetArrayProperty(::grpc::ServerContext* /*context*/, const ::TempoWorld::SetAssetArrayPropertyRequest* /*request*/, ::TempoScripting::Empty* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    void RequestSetAssetArrayProperty(::grpc::ServerContext* context, ::grpc::ByteBuffer* request, ::grpc::ServerAsyncResponseWriter< ::grpc::ByteBuffer>* response, ::grpc::CompletionQueue* new_call_cq, ::grpc::ServerCompletionQueue* notification_cq, void *tag) {
      ::grpc::Service::RequestAsyncUnary(31, context, request, response, new_call_cq, notification_cq, tag);
    }
  };
  template <class BaseClass>
  class WithRawMethod_SetActorArrayProperty : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithRawMethod_SetActorArrayProperty() {
      ::grpc::Service::MarkMethodRaw(32);
    }
    ~WithRawMethod_SetActorArrayProperty() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status SetActorArrayProperty(::grpc::ServerContext* /*context*/, const ::TempoWorld::SetActorArrayPropertyRequest* /*request*/, ::TempoScripting::Empty* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    void RequestSetActorArrayProperty(::grpc::ServerContext* context, ::grpc::ByteBuffer* request, ::grpc::ServerAsyncResponseWriter< ::grpc::ByteBuffer>* response, ::grpc::CompletionQueue* new_call_cq, ::grpc::ServerCompletionQueue* notification_cq, void *tag) {
      ::grpc::Service::RequestAsyncUnary(32, context, request, response, new_call_cq, notification_cq, tag);
    }
  };
  template <class BaseClass>
  class WithRawMethod_SetComponentArrayProperty : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithRawMethod_SetComponentArrayProperty() {
      ::grpc::Service::MarkMethodRaw(33);
    }
    ~WithRawMethod_SetComponentArrayProperty() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status SetComponentArrayProperty(::grpc::ServerContext* /*context*/, const ::TempoWorld::SetComponentArrayPropertyRequest* /*request*/, ::TempoScripting::Empty* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    void RequestSetComponentArrayProperty(::grpc::ServerContext* context, ::grpc::ByteBuffer* request, ::grpc::ServerAsyncResponseWriter< ::grpc::ByteBuffer>* response, ::grpc::CompletionQueue* new_call_cq, ::grpc::ServerCompletionQueue* notification_cq, void *tag) {
      ::grpc::Service::RequestAsyncUnary(33, context, request, response, new_call_cq, notification_cq, tag);
    }
  };
  template <class BaseClass>
  class WithRawMethod_CallFunction : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithRawMethod_CallFunction() {
      ::grpc::Service::MarkMethodRaw(34);
    }
    ~WithRawMethod_CallFunction() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status CallFunction(::grpc::ServerContext* /*context*/, const ::TempoWorld::CallFunctionRequest* /*request*/, ::TempoScripting::Empty* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    void RequestCallFunction(::grpc::ServerContext* context, ::grpc::ByteBuffer* request, ::grpc::ServerAsyncResponseWriter< ::grpc::ByteBuffer>* response, ::grpc::CompletionQueue* new_call_cq, ::grpc::ServerCompletionQueue* notification_cq, void *tag) {
      ::grpc::Service::RequestAsyncUnary(34, context, request, response, new_call_cq, notification_cq, tag);
    }
  };
  template <class BaseClass>
  class WithRawCallbackMethod_SpawnActor : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithRawCallbackMethod_SpawnActor() {
      ::grpc::Service::MarkMethodRawCallback(0,
          new ::grpc::internal::CallbackUnaryHandler< ::grpc::ByteBuffer, ::grpc::ByteBuffer>(
            [this](
                   ::grpc::CallbackServerContext* context, const ::grpc::ByteBuffer* request, ::grpc::ByteBuffer* response) { return this->SpawnActor(context, request, response); }));
    }
    ~WithRawCallbackMethod_SpawnActor() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status SpawnActor(::grpc::ServerContext* /*context*/, const ::TempoWorld::SpawnActorRequest* /*request*/, ::TempoWorld::SpawnActorResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    virtual ::grpc::ServerUnaryReactor* SpawnActor(
      ::grpc::CallbackServerContext* /*context*/, const ::grpc::ByteBuffer* /*request*/, ::grpc::ByteBuffer* /*response*/)  { return nullptr; }
  };
  template <class BaseClass>
  class WithRawCallbackMethod_FinishSpawningActor : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithRawCallbackMethod_FinishSpawningActor() {
      ::grpc::Service::MarkMethodRawCallback(1,
          new ::grpc::internal::CallbackUnaryHandler< ::grpc::ByteBuffer, ::grpc::ByteBuffer>(
            [this](
                   ::grpc::CallbackServerContext* context, const ::grpc::ByteBuffer* request, ::grpc::ByteBuffer* response) { return this->FinishSpawningActor(context, request, response); }));
    }
    ~WithRawCallbackMethod_FinishSpawningActor() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status FinishSpawningActor(::grpc::ServerContext* /*context*/, const ::TempoWorld::FinishSpawningActorRequest* /*request*/, ::TempoWorld::FinishSpawningActorResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    virtual ::grpc::ServerUnaryReactor* FinishSpawningActor(
      ::grpc::CallbackServerContext* /*context*/, const ::grpc::ByteBuffer* /*request*/, ::grpc::ByteBuffer* /*response*/)  { return nullptr; }
  };
  template <class BaseClass>
  class WithRawCallbackMethod_DestroyActor : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithRawCallbackMethod_DestroyActor() {
      ::grpc::Service::MarkMethodRawCallback(2,
          new ::grpc::internal::CallbackUnaryHandler< ::grpc::ByteBuffer, ::grpc::ByteBuffer>(
            [this](
                   ::grpc::CallbackServerContext* context, const ::grpc::ByteBuffer* request, ::grpc::ByteBuffer* response) { return this->DestroyActor(context, request, response); }));
    }
    ~WithRawCallbackMethod_DestroyActor() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status DestroyActor(::grpc::ServerContext* /*context*/, const ::TempoWorld::DestroyActorRequest* /*request*/, ::TempoScripting::Empty* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    virtual ::grpc::ServerUnaryReactor* DestroyActor(
      ::grpc::CallbackServerContext* /*context*/, const ::grpc::ByteBuffer* /*request*/, ::grpc::ByteBuffer* /*response*/)  { return nullptr; }
  };
  template <class BaseClass>
  class WithRawCallbackMethod_AddComponent : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithRawCallbackMethod_AddComponent() {
      ::grpc::Service::MarkMethodRawCallback(3,
          new ::grpc::internal::CallbackUnaryHandler< ::grpc::ByteBuffer, ::grpc::ByteBuffer>(
            [this](
                   ::grpc::CallbackServerContext* context, const ::grpc::ByteBuffer* request, ::grpc::ByteBuffer* response) { return this->AddComponent(context, request, response); }));
    }
    ~WithRawCallbackMethod_AddComponent() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status AddComponent(::grpc::ServerContext* /*context*/, const ::TempoWorld::AddComponentRequest* /*request*/, ::TempoWorld::AddComponentResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    virtual ::grpc::ServerUnaryReactor* AddComponent(
      ::grpc::CallbackServerContext* /*context*/, const ::grpc::ByteBuffer* /*request*/, ::grpc::ByteBuffer* /*response*/)  { return nullptr; }
  };
  template <class BaseClass>
  class WithRawCallbackMethod_DestroyComponent : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithRawCallbackMethod_DestroyComponent() {
      ::grpc::Service::MarkMethodRawCallback(4,
          new ::grpc::internal::CallbackUnaryHandler< ::grpc::ByteBuffer, ::grpc::ByteBuffer>(
            [this](
                   ::grpc::CallbackServerContext* context, const ::grpc::ByteBuffer* request, ::grpc::ByteBuffer* response) { return this->DestroyComponent(context, request, response); }));
    }
    ~WithRawCallbackMethod_DestroyComponent() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status DestroyComponent(::grpc::ServerContext* /*context*/, const ::TempoWorld::DestroyComponentRequest* /*request*/, ::TempoScripting::Empty* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    virtual ::grpc::ServerUnaryReactor* DestroyComponent(
      ::grpc::CallbackServerContext* /*context*/, const ::grpc::ByteBuffer* /*request*/, ::grpc::ByteBuffer* /*response*/)  { return nullptr; }
  };
  template <class BaseClass>
  class WithRawCallbackMethod_SetActorTransform : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithRawCallbackMethod_SetActorTransform() {
      ::grpc::Service::MarkMethodRawCallback(5,
          new ::grpc::internal::CallbackUnaryHandler< ::grpc::ByteBuffer, ::grpc::ByteBuffer>(
            [this](
                   ::grpc::CallbackServerContext* context, const ::grpc::ByteBuffer* request, ::grpc::ByteBuffer* response) { return this->SetActorTransform(context, request, response); }));
    }
    ~WithRawCallbackMethod_SetActorTransform() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status SetActorTransform(::grpc::ServerContext* /*context*/, const ::TempoWorld::SetActorTransformRequest* /*request*/, ::TempoScripting::Empty* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    virtual ::grpc::ServerUnaryReactor* SetActorTransform(
      ::grpc::CallbackServerContext* /*context*/, const ::grpc::ByteBuffer* /*request*/, ::grpc::ByteBuffer* /*response*/)  { return nullptr; }
  };
  template <class BaseClass>
  class WithRawCallbackMethod_SetComponentTransform : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithRawCallbackMethod_SetComponentTransform() {
      ::grpc::Service::MarkMethodRawCallback(6,
          new ::grpc::internal::CallbackUnaryHandler< ::grpc::ByteBuffer, ::grpc::ByteBuffer>(
            [this](
                   ::grpc::CallbackServerContext* context, const ::grpc::ByteBuffer* request, ::grpc::ByteBuffer* response) { return this->SetComponentTransform(context, request, response); }));
    }
    ~WithRawCallbackMethod_SetComponentTransform() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status SetComponentTransform(::grpc::ServerContext* /*context*/, const ::TempoWorld::SetComponentTransformRequest* /*request*/, ::TempoScripting::Empty* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    virtual ::grpc::ServerUnaryReactor* SetComponentTransform(
      ::grpc::CallbackServerContext* /*context*/, const ::grpc::ByteBuffer* /*request*/, ::grpc::ByteBuffer* /*response*/)  { return nullptr; }
  };
  template <class BaseClass>
  class WithRawCallbackMethod_ActivateComponent : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithRawCallbackMethod_ActivateComponent() {
      ::grpc::Service::MarkMethodRawCallback(7,
          new ::grpc::internal::CallbackUnaryHandler< ::grpc::ByteBuffer, ::grpc::ByteBuffer>(
            [this](
                   ::grpc::CallbackServerContext* context, const ::grpc::ByteBuffer* request, ::grpc::ByteBuffer* response) { return this->ActivateComponent(context, request, response); }));
    }
    ~WithRawCallbackMethod_ActivateComponent() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status ActivateComponent(::grpc::ServerContext* /*context*/, const ::TempoWorld::ActivateComponentRequest* /*request*/, ::TempoScripting::Empty* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    virtual ::grpc::ServerUnaryReactor* ActivateComponent(
      ::grpc::CallbackServerContext* /*context*/, const ::grpc::ByteBuffer* /*request*/, ::grpc::ByteBuffer* /*response*/)  { return nullptr; }
  };
  template <class BaseClass>
  class WithRawCallbackMethod_DeactivateComponent : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithRawCallbackMethod_DeactivateComponent() {
      ::grpc::Service::MarkMethodRawCallback(8,
          new ::grpc::internal::CallbackUnaryHandler< ::grpc::ByteBuffer, ::grpc::ByteBuffer>(
            [this](
                   ::grpc::CallbackServerContext* context, const ::grpc::ByteBuffer* request, ::grpc::ByteBuffer* response) { return this->DeactivateComponent(context, request, response); }));
    }
    ~WithRawCallbackMethod_DeactivateComponent() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status DeactivateComponent(::grpc::ServerContext* /*context*/, const ::TempoWorld::DeactivateComponentRequest* /*request*/, ::TempoScripting::Empty* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    virtual ::grpc::ServerUnaryReactor* DeactivateComponent(
      ::grpc::CallbackServerContext* /*context*/, const ::grpc::ByteBuffer* /*request*/, ::grpc::ByteBuffer* /*response*/)  { return nullptr; }
  };
  template <class BaseClass>
  class WithRawCallbackMethod_GetAllActors : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithRawCallbackMethod_GetAllActors() {
      ::grpc::Service::MarkMethodRawCallback(9,
          new ::grpc::internal::CallbackUnaryHandler< ::grpc::ByteBuffer, ::grpc::ByteBuffer>(
            [this](
                   ::grpc::CallbackServerContext* context, const ::grpc::ByteBuffer* request, ::grpc::ByteBuffer* response) { return this->GetAllActors(context, request, response); }));
    }
    ~WithRawCallbackMethod_GetAllActors() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status GetAllActors(::grpc::ServerContext* /*context*/, const ::TempoWorld::GetAllActorsRequest* /*request*/, ::TempoWorld::GetAllActorsResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    virtual ::grpc::ServerUnaryReactor* GetAllActors(
      ::grpc::CallbackServerContext* /*context*/, const ::grpc::ByteBuffer* /*request*/, ::grpc::ByteBuffer* /*response*/)  { return nullptr; }
  };
  template <class BaseClass>
  class WithRawCallbackMethod_GetAllComponents : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithRawCallbackMethod_GetAllComponents() {
      ::grpc::Service::MarkMethodRawCallback(10,
          new ::grpc::internal::CallbackUnaryHandler< ::grpc::ByteBuffer, ::grpc::ByteBuffer>(
            [this](
                   ::grpc::CallbackServerContext* context, const ::grpc::ByteBuffer* request, ::grpc::ByteBuffer* response) { return this->GetAllComponents(context, request, response); }));
    }
    ~WithRawCallbackMethod_GetAllComponents() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status GetAllComponents(::grpc::ServerContext* /*context*/, const ::TempoWorld::GetAllComponentsRequest* /*request*/, ::TempoWorld::GetAllComponentsResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    virtual ::grpc::ServerUnaryReactor* GetAllComponents(
      ::grpc::CallbackServerContext* /*context*/, const ::grpc::ByteBuffer* /*request*/, ::grpc::ByteBuffer* /*response*/)  { return nullptr; }
  };
  template <class BaseClass>
  class WithRawCallbackMethod_GetActorProperties : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithRawCallbackMethod_GetActorProperties() {
      ::grpc::Service::MarkMethodRawCallback(11,
          new ::grpc::internal::CallbackUnaryHandler< ::grpc::ByteBuffer, ::grpc::ByteBuffer>(
            [this](
                   ::grpc::CallbackServerContext* context, const ::grpc::ByteBuffer* request, ::grpc::ByteBuffer* response) { return this->GetActorProperties(context, request, response); }));
    }
    ~WithRawCallbackMethod_GetActorProperties() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status GetActorProperties(::grpc::ServerContext* /*context*/, const ::TempoWorld::GetActorPropertiesRequest* /*request*/, ::TempoWorld::GetPropertiesResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    virtual ::grpc::ServerUnaryReactor* GetActorProperties(
      ::grpc::CallbackServerContext* /*context*/, const ::grpc::ByteBuffer* /*request*/, ::grpc::ByteBuffer* /*response*/)  { return nullptr; }
  };
  template <class BaseClass>
  class WithRawCallbackMethod_GetComponentProperties : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithRawCallbackMethod_GetComponentProperties() {
      ::grpc::Service::MarkMethodRawCallback(12,
          new ::grpc::internal::CallbackUnaryHandler< ::grpc::ByteBuffer, ::grpc::ByteBuffer>(
            [this](
                   ::grpc::CallbackServerContext* context, const ::grpc::ByteBuffer* request, ::grpc::ByteBuffer* response) { return this->GetComponentProperties(context, request, response); }));
    }
    ~WithRawCallbackMethod_GetComponentProperties() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status GetComponentProperties(::grpc::ServerContext* /*context*/, const ::TempoWorld::GetComponentPropertiesRequest* /*request*/, ::TempoWorld::GetPropertiesResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    virtual ::grpc::ServerUnaryReactor* GetComponentProperties(
      ::grpc::CallbackServerContext* /*context*/, const ::grpc::ByteBuffer* /*request*/, ::grpc::ByteBuffer* /*response*/)  { return nullptr; }
  };
  template <class BaseClass>
  class WithRawCallbackMethod_SetBoolProperty : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithRawCallbackMethod_SetBoolProperty() {
      ::grpc::Service::MarkMethodRawCallback(13,
          new ::grpc::internal::CallbackUnaryHandler< ::grpc::ByteBuffer, ::grpc::ByteBuffer>(
            [this](
                   ::grpc::CallbackServerContext* context, const ::grpc::ByteBuffer* request, ::grpc::ByteBuffer* response) { return this->SetBoolProperty(context, request, response); }));
    }
    ~WithRawCallbackMethod_SetBoolProperty() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status SetBoolProperty(::grpc::ServerContext* /*context*/, const ::TempoWorld::SetBoolPropertyRequest* /*request*/, ::TempoScripting::Empty* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    virtual ::grpc::ServerUnaryReactor* SetBoolProperty(
      ::grpc::CallbackServerContext* /*context*/, const ::grpc::ByteBuffer* /*request*/, ::grpc::ByteBuffer* /*response*/)  { return nullptr; }
  };
  template <class BaseClass>
  class WithRawCallbackMethod_SetStringProperty : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithRawCallbackMethod_SetStringProperty() {
      ::grpc::Service::MarkMethodRawCallback(14,
          new ::grpc::internal::CallbackUnaryHandler< ::grpc::ByteBuffer, ::grpc::ByteBuffer>(
            [this](
                   ::grpc::CallbackServerContext* context, const ::grpc::ByteBuffer* request, ::grpc::ByteBuffer* response) { return this->SetStringProperty(context, request, response); }));
    }
    ~WithRawCallbackMethod_SetStringProperty() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status SetStringProperty(::grpc::ServerContext* /*context*/, const ::TempoWorld::SetStringPropertyRequest* /*request*/, ::TempoScripting::Empty* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    virtual ::grpc::ServerUnaryReactor* SetStringProperty(
      ::grpc::CallbackServerContext* /*context*/, const ::grpc::ByteBuffer* /*request*/, ::grpc::ByteBuffer* /*response*/)  { return nullptr; }
  };
  template <class BaseClass>
  class WithRawCallbackMethod_SetEnumProperty : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithRawCallbackMethod_SetEnumProperty() {
      ::grpc::Service::MarkMethodRawCallback(15,
          new ::grpc::internal::CallbackUnaryHandler< ::grpc::ByteBuffer, ::grpc::ByteBuffer>(
            [this](
                   ::grpc::CallbackServerContext* context, const ::grpc::ByteBuffer* request, ::grpc::ByteBuffer* response) { return this->SetEnumProperty(context, request, response); }));
    }
    ~WithRawCallbackMethod_SetEnumProperty() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status SetEnumProperty(::grpc::ServerContext* /*context*/, const ::TempoWorld::SetEnumPropertyRequest* /*request*/, ::TempoScripting::Empty* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    virtual ::grpc::ServerUnaryReactor* SetEnumProperty(
      ::grpc::CallbackServerContext* /*context*/, const ::grpc::ByteBuffer* /*request*/, ::grpc::ByteBuffer* /*response*/)  { return nullptr; }
  };
  template <class BaseClass>
  class WithRawCallbackMethod_SetIntProperty : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithRawCallbackMethod_SetIntProperty() {
      ::grpc::Service::MarkMethodRawCallback(16,
          new ::grpc::internal::CallbackUnaryHandler< ::grpc::ByteBuffer, ::grpc::ByteBuffer>(
            [this](
                   ::grpc::CallbackServerContext* context, const ::grpc::ByteBuffer* request, ::grpc::ByteBuffer* response) { return this->SetIntProperty(context, request, response); }));
    }
    ~WithRawCallbackMethod_SetIntProperty() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status SetIntProperty(::grpc::ServerContext* /*context*/, const ::TempoWorld::SetIntPropertyRequest* /*request*/, ::TempoScripting::Empty* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    virtual ::grpc::ServerUnaryReactor* SetIntProperty(
      ::grpc::CallbackServerContext* /*context*/, const ::grpc::ByteBuffer* /*request*/, ::grpc::ByteBuffer* /*response*/)  { return nullptr; }
  };
  template <class BaseClass>
  class WithRawCallbackMethod_SetFloatProperty : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithRawCallbackMethod_SetFloatProperty() {
      ::grpc::Service::MarkMethodRawCallback(17,
          new ::grpc::internal::CallbackUnaryHandler< ::grpc::ByteBuffer, ::grpc::ByteBuffer>(
            [this](
                   ::grpc::CallbackServerContext* context, const ::grpc::ByteBuffer* request, ::grpc::ByteBuffer* response) { return this->SetFloatProperty(context, request, response); }));
    }
    ~WithRawCallbackMethod_SetFloatProperty() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status SetFloatProperty(::grpc::ServerContext* /*context*/, const ::TempoWorld::SetFloatPropertyRequest* /*request*/, ::TempoScripting::Empty* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    virtual ::grpc::ServerUnaryReactor* SetFloatProperty(
      ::grpc::CallbackServerContext* /*context*/, const ::grpc::ByteBuffer* /*request*/, ::grpc::ByteBuffer* /*response*/)  { return nullptr; }
  };
  template <class BaseClass>
  class WithRawCallbackMethod_SetVectorProperty : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithRawCallbackMethod_SetVectorProperty() {
      ::grpc::Service::MarkMethodRawCallback(18,
          new ::grpc::internal::CallbackUnaryHandler< ::grpc::ByteBuffer, ::grpc::ByteBuffer>(
            [this](
                   ::grpc::CallbackServerContext* context, const ::grpc::ByteBuffer* request, ::grpc::ByteBuffer* response) { return this->SetVectorProperty(context, request, response); }));
    }
    ~WithRawCallbackMethod_SetVectorProperty() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status SetVectorProperty(::grpc::ServerContext* /*context*/, const ::TempoWorld::SetVectorPropertyRequest* /*request*/, ::TempoScripting::Empty* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    virtual ::grpc::ServerUnaryReactor* SetVectorProperty(
      ::grpc::CallbackServerContext* /*context*/, const ::grpc::ByteBuffer* /*request*/, ::grpc::ByteBuffer* /*response*/)  { return nullptr; }
  };
  template <class BaseClass>
  class WithRawCallbackMethod_SetRotatorProperty : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithRawCallbackMethod_SetRotatorProperty() {
      ::grpc::Service::MarkMethodRawCallback(19,
          new ::grpc::internal::CallbackUnaryHandler< ::grpc::ByteBuffer, ::grpc::ByteBuffer>(
            [this](
                   ::grpc::CallbackServerContext* context, const ::grpc::ByteBuffer* request, ::grpc::ByteBuffer* response) { return this->SetRotatorProperty(context, request, response); }));
    }
    ~WithRawCallbackMethod_SetRotatorProperty() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status SetRotatorProperty(::grpc::ServerContext* /*context*/, const ::TempoWorld::SetRotatorPropertyRequest* /*request*/, ::TempoScripting::Empty* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    virtual ::grpc::ServerUnaryReactor* SetRotatorProperty(
      ::grpc::CallbackServerContext* /*context*/, const ::grpc::ByteBuffer* /*request*/, ::grpc::ByteBuffer* /*response*/)  { return nullptr; }
  };
  template <class BaseClass>
  class WithRawCallbackMethod_SetColorProperty : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithRawCallbackMethod_SetColorProperty() {
      ::grpc::Service::MarkMethodRawCallback(20,
          new ::grpc::internal::CallbackUnaryHandler< ::grpc::ByteBuffer, ::grpc::ByteBuffer>(
            [this](
                   ::grpc::CallbackServerContext* context, const ::grpc::ByteBuffer* request, ::grpc::ByteBuffer* response) { return this->SetColorProperty(context, request, response); }));
    }
    ~WithRawCallbackMethod_SetColorProperty() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status SetColorProperty(::grpc::ServerContext* /*context*/, const ::TempoWorld::SetColorPropertyRequest* /*request*/, ::TempoScripting::Empty* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    virtual ::grpc::ServerUnaryReactor* SetColorProperty(
      ::grpc::CallbackServerContext* /*context*/, const ::grpc::ByteBuffer* /*request*/, ::grpc::ByteBuffer* /*response*/)  { return nullptr; }
  };
  template <class BaseClass>
  class WithRawCallbackMethod_SetClassProperty : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithRawCallbackMethod_SetClassProperty() {
      ::grpc::Service::MarkMethodRawCallback(21,
          new ::grpc::internal::CallbackUnaryHandler< ::grpc::ByteBuffer, ::grpc::ByteBuffer>(
            [this](
                   ::grpc::CallbackServerContext* context, const ::grpc::ByteBuffer* request, ::grpc::ByteBuffer* response) { return this->SetClassProperty(context, request, response); }));
    }
    ~WithRawCallbackMethod_SetClassProperty() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status SetClassProperty(::grpc::ServerContext* /*context*/, const ::TempoWorld::SetClassPropertyRequest* /*request*/, ::TempoScripting::Empty* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    virtual ::grpc::ServerUnaryReactor* SetClassProperty(
      ::grpc::CallbackServerContext* /*context*/, const ::grpc::ByteBuffer* /*request*/, ::grpc::ByteBuffer* /*response*/)  { return nullptr; }
  };
  template <class BaseClass>
  class WithRawCallbackMethod_SetAssetProperty : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithRawCallbackMethod_SetAssetProperty() {
      ::grpc::Service::MarkMethodRawCallback(22,
          new ::grpc::internal::CallbackUnaryHandler< ::grpc::ByteBuffer, ::grpc::ByteBuffer>(
            [this](
                   ::grpc::CallbackServerContext* context, const ::grpc::ByteBuffer* request, ::grpc::ByteBuffer* response) { return this->SetAssetProperty(context, request, response); }));
    }
    ~WithRawCallbackMethod_SetAssetProperty() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status SetAssetProperty(::grpc::ServerContext* /*context*/, const ::TempoWorld::SetAssetPropertyRequest* /*request*/, ::TempoScripting::Empty* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    virtual ::grpc::ServerUnaryReactor* SetAssetProperty(
      ::grpc::CallbackServerContext* /*context*/, const ::grpc::ByteBuffer* /*request*/, ::grpc::ByteBuffer* /*response*/)  { return nullptr; }
  };
  template <class BaseClass>
  class WithRawCallbackMethod_SetActorProperty : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithRawCallbackMethod_SetActorProperty() {
      ::grpc::Service::MarkMethodRawCallback(23,
          new ::grpc::internal::CallbackUnaryHandler< ::grpc::ByteBuffer, ::grpc::ByteBuffer>(
            [this](
                   ::grpc::CallbackServerContext* context, const ::grpc::ByteBuffer* request, ::grpc::ByteBuffer* response) { return this->SetActorProperty(context, request, response); }));
    }
    ~WithRawCallbackMethod_SetActorProperty() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status SetActorProperty(::grpc::ServerContext* /*context*/, const ::TempoWorld::SetActorPropertyRequest* /*request*/, ::TempoScripting::Empty* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    virtual ::grpc::ServerUnaryReactor* SetActorProperty(
      ::grpc::CallbackServerContext* /*context*/, const ::grpc::ByteBuffer* /*request*/, ::grpc::ByteBuffer* /*response*/)  { return nullptr; }
  };
  template <class BaseClass>
  class WithRawCallbackMethod_SetComponentProperty : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithRawCallbackMethod_SetComponentProperty() {
      ::grpc::Service::MarkMethodRawCallback(24,
          new ::grpc::internal::CallbackUnaryHandler< ::grpc::ByteBuffer, ::grpc::ByteBuffer>(
            [this](
                   ::grpc::CallbackServerContext* context, const ::grpc::ByteBuffer* request, ::grpc::ByteBuffer* response) { return this->SetComponentProperty(context, request, response); }));
    }
    ~WithRawCallbackMethod_SetComponentProperty() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status SetComponentProperty(::grpc::ServerContext* /*context*/, const ::TempoWorld::SetComponentPropertyRequest* /*request*/, ::TempoScripting::Empty* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    virtual ::grpc::ServerUnaryReactor* SetComponentProperty(
      ::grpc::CallbackServerContext* /*context*/, const ::grpc::ByteBuffer* /*request*/, ::grpc::ByteBuffer* /*response*/)  { return nullptr; }
  };
  template <class BaseClass>
  class WithRawCallbackMethod_SetBoolArrayProperty : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithRawCallbackMethod_SetBoolArrayProperty() {
      ::grpc::Service::MarkMethodRawCallback(25,
          new ::grpc::internal::CallbackUnaryHandler< ::grpc::ByteBuffer, ::grpc::ByteBuffer>(
            [this](
                   ::grpc::CallbackServerContext* context, const ::grpc::ByteBuffer* request, ::grpc::ByteBuffer* response) { return this->SetBoolArrayProperty(context, request, response); }));
    }
    ~WithRawCallbackMethod_SetBoolArrayProperty() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status SetBoolArrayProperty(::grpc::ServerContext* /*context*/, const ::TempoWorld::SetBoolArrayPropertyRequest* /*request*/, ::TempoScripting::Empty* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    virtual ::grpc::ServerUnaryReactor* SetBoolArrayProperty(
      ::grpc::CallbackServerContext* /*context*/, const ::grpc::ByteBuffer* /*request*/, ::grpc::ByteBuffer* /*response*/)  { return nullptr; }
  };
  template <class BaseClass>
  class WithRawCallbackMethod_SetStringArrayProperty : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithRawCallbackMethod_SetStringArrayProperty() {
      ::grpc::Service::MarkMethodRawCallback(26,
          new ::grpc::internal::CallbackUnaryHandler< ::grpc::ByteBuffer, ::grpc::ByteBuffer>(
            [this](
                   ::grpc::CallbackServerContext* context, const ::grpc::ByteBuffer* request, ::grpc::ByteBuffer* response) { return this->SetStringArrayProperty(context, request, response); }));
    }
    ~WithRawCallbackMethod_SetStringArrayProperty() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status SetStringArrayProperty(::grpc::ServerContext* /*context*/, const ::TempoWorld::SetStringArrayPropertyRequest* /*request*/, ::TempoScripting::Empty* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    virtual ::grpc::ServerUnaryReactor* SetStringArrayProperty(
      ::grpc::CallbackServerContext* /*context*/, const ::grpc::ByteBuffer* /*request*/, ::grpc::ByteBuffer* /*response*/)  { return nullptr; }
  };
  template <class BaseClass>
  class WithRawCallbackMethod_SetEnumArrayProperty : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithRawCallbackMethod_SetEnumArrayProperty() {
      ::grpc::Service::MarkMethodRawCallback(27,
          new ::grpc::internal::CallbackUnaryHandler< ::grpc::ByteBuffer, ::grpc::ByteBuffer>(
            [this](
                   ::grpc::CallbackServerContext* context, const ::grpc::ByteBuffer* request, ::grpc::ByteBuffer* response) { return this->SetEnumArrayProperty(context, request, response); }));
    }
    ~WithRawCallbackMethod_SetEnumArrayProperty() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status SetEnumArrayProperty(::grpc::ServerContext* /*context*/, const ::TempoWorld::SetEnumArrayPropertyRequest* /*request*/, ::TempoScripting::Empty* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    virtual ::grpc::ServerUnaryReactor* SetEnumArrayProperty(
      ::grpc::CallbackServerContext* /*context*/, const ::grpc::ByteBuffer* /*request*/, ::grpc::ByteBuffer* /*response*/)  { return nullptr; }
  };
  template <class BaseClass>
  class WithRawCallbackMethod_SetIntArrayProperty : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithRawCallbackMethod_SetIntArrayProperty() {
      ::grpc::Service::MarkMethodRawCallback(28,
          new ::grpc::internal::CallbackUnaryHandler< ::grpc::ByteBuffer, ::grpc::ByteBuffer>(
            [this](
                   ::grpc::CallbackServerContext* context, const ::grpc::ByteBuffer* request, ::grpc::ByteBuffer* response) { return this->SetIntArrayProperty(context, request, response); }));
    }
    ~WithRawCallbackMethod_SetIntArrayProperty() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status SetIntArrayProperty(::grpc::ServerContext* /*context*/, const ::TempoWorld::SetIntArrayPropertyRequest* /*request*/, ::TempoScripting::Empty* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    virtual ::grpc::ServerUnaryReactor* SetIntArrayProperty(
      ::grpc::CallbackServerContext* /*context*/, const ::grpc::ByteBuffer* /*request*/, ::grpc::ByteBuffer* /*response*/)  { return nullptr; }
  };
  template <class BaseClass>
  class WithRawCallbackMethod_SetFloatArrayProperty : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithRawCallbackMethod_SetFloatArrayProperty() {
      ::grpc::Service::MarkMethodRawCallback(29,
          new ::grpc::internal::CallbackUnaryHandler< ::grpc::ByteBuffer, ::grpc::ByteBuffer>(
            [this](
                   ::grpc::CallbackServerContext* context, const ::grpc::ByteBuffer* request, ::grpc::ByteBuffer* response) { return this->SetFloatArrayProperty(context, request, response); }));
    }
    ~WithRawCallbackMethod_SetFloatArrayProperty() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status SetFloatArrayProperty(::grpc::ServerContext* /*context*/, const ::TempoWorld::SetFloatArrayPropertyRequest* /*request*/, ::TempoScripting::Empty* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    virtual ::grpc::ServerUnaryReactor* SetFloatArrayProperty(
      ::grpc::CallbackServerContext* /*context*/, const ::grpc::ByteBuffer* /*request*/, ::grpc::ByteBuffer* /*response*/)  { return nullptr; }
  };
  template <class BaseClass>
  class WithRawCallbackMethod_SetClassArrayProperty : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithRawCallbackMethod_SetClassArrayProperty() {
      ::grpc::Service::MarkMethodRawCallback(30,
          new ::grpc::internal::CallbackUnaryHandler< ::grpc::ByteBuffer, ::grpc::ByteBuffer>(
            [this](
                   ::grpc::CallbackServerContext* context, const ::grpc::ByteBuffer* request, ::grpc::ByteBuffer* response) { return this->SetClassArrayProperty(context, request, response); }));
    }
    ~WithRawCallbackMethod_SetClassArrayProperty() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status SetClassArrayProperty(::grpc::ServerContext* /*context*/, const ::TempoWorld::SetClassArrayPropertyRequest* /*request*/, ::TempoScripting::Empty* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    virtual ::grpc::ServerUnaryReactor* SetClassArrayProperty(
      ::grpc::CallbackServerContext* /*context*/, const ::grpc::ByteBuffer* /*request*/, ::grpc::ByteBuffer* /*response*/)  { return nullptr; }
  };
  template <class BaseClass>
  class WithRawCallbackMethod_SetAssetArrayProperty : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithRawCallbackMethod_SetAssetArrayProperty() {
      ::grpc::Service::MarkMethodRawCallback(31,
          new ::grpc::internal::CallbackUnaryHandler< ::grpc::ByteBuffer, ::grpc::ByteBuffer>(
            [this](
                   ::grpc::CallbackServerContext* context, const ::grpc::ByteBuffer* request, ::grpc::ByteBuffer* response) { return this->SetAssetArrayProperty(context, request, response); }));
    }
    ~WithRawCallbackMethod_SetAssetArrayProperty() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status SetAssetArrayProperty(::grpc::ServerContext* /*context*/, const ::TempoWorld::SetAssetArrayPropertyRequest* /*request*/, ::TempoScripting::Empty* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    virtual ::grpc::ServerUnaryReactor* SetAssetArrayProperty(
      ::grpc::CallbackServerContext* /*context*/, const ::grpc::ByteBuffer* /*request*/, ::grpc::ByteBuffer* /*response*/)  { return nullptr; }
  };
  template <class BaseClass>
  class WithRawCallbackMethod_SetActorArrayProperty : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithRawCallbackMethod_SetActorArrayProperty() {
      ::grpc::Service::MarkMethodRawCallback(32,
          new ::grpc::internal::CallbackUnaryHandler< ::grpc::ByteBuffer, ::grpc::ByteBuffer>(
            [this](
                   ::grpc::CallbackServerContext* context, const ::grpc::ByteBuffer* request, ::grpc::ByteBuffer* response) { return this->SetActorArrayProperty(context, request, response); }));
    }
    ~WithRawCallbackMethod_SetActorArrayProperty() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status SetActorArrayProperty(::grpc::ServerContext* /*context*/, const ::TempoWorld::SetActorArrayPropertyRequest* /*request*/, ::TempoScripting::Empty* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    virtual ::grpc::ServerUnaryReactor* SetActorArrayProperty(
      ::grpc::CallbackServerContext* /*context*/, const ::grpc::ByteBuffer* /*request*/, ::grpc::ByteBuffer* /*response*/)  { return nullptr; }
  };
  template <class BaseClass>
  class WithRawCallbackMethod_SetComponentArrayProperty : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithRawCallbackMethod_SetComponentArrayProperty() {
      ::grpc::Service::MarkMethodRawCallback(33,
          new ::grpc::internal::CallbackUnaryHandler< ::grpc::ByteBuffer, ::grpc::ByteBuffer>(
            [this](
                   ::grpc::CallbackServerContext* context, const ::grpc::ByteBuffer* request, ::grpc::ByteBuffer* response) { return this->SetComponentArrayProperty(context, request, response); }));
    }
    ~WithRawCallbackMethod_SetComponentArrayProperty() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status SetComponentArrayProperty(::grpc::ServerContext* /*context*/, const ::TempoWorld::SetComponentArrayPropertyRequest* /*request*/, ::TempoScripting::Empty* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    virtual ::grpc::ServerUnaryReactor* SetComponentArrayProperty(
      ::grpc::CallbackServerContext* /*context*/, const ::grpc::ByteBuffer* /*request*/, ::grpc::ByteBuffer* /*response*/)  { return nullptr; }
  };
  template <class BaseClass>
  class WithRawCallbackMethod_CallFunction : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithRawCallbackMethod_CallFunction() {
      ::grpc::Service::MarkMethodRawCallback(34,
          new ::grpc::internal::CallbackUnaryHandler< ::grpc::ByteBuffer, ::grpc::ByteBuffer>(
            [this](
                   ::grpc::CallbackServerContext* context, const ::grpc::ByteBuffer* request, ::grpc::ByteBuffer* response) { return this->CallFunction(context, request, response); }));
    }
    ~WithRawCallbackMethod_CallFunction() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status CallFunction(::grpc::ServerContext* /*context*/, const ::TempoWorld::CallFunctionRequest* /*request*/, ::TempoScripting::Empty* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    virtual ::grpc::ServerUnaryReactor* CallFunction(
      ::grpc::CallbackServerContext* /*context*/, const ::grpc::ByteBuffer* /*request*/, ::grpc::ByteBuffer* /*response*/)  { return nullptr; }
  };
  template <class BaseClass>
  class WithStreamedUnaryMethod_SpawnActor : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithStreamedUnaryMethod_SpawnActor() {
      ::grpc::Service::MarkMethodStreamed(0,
        new ::grpc::internal::StreamedUnaryHandler<
          ::TempoWorld::SpawnActorRequest, ::TempoWorld::SpawnActorResponse>(
            [this](::grpc::ServerContext* context,
                   ::grpc::ServerUnaryStreamer<
                     ::TempoWorld::SpawnActorRequest, ::TempoWorld::SpawnActorResponse>* streamer) {
                       return this->StreamedSpawnActor(context,
                         streamer);
                  }));
    }
    ~WithStreamedUnaryMethod_SpawnActor() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable regular version of this method
    ::grpc::Status SpawnActor(::grpc::ServerContext* /*context*/, const ::TempoWorld::SpawnActorRequest* /*request*/, ::TempoWorld::SpawnActorResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    // replace default version of method with streamed unary
    virtual ::grpc::Status StreamedSpawnActor(::grpc::ServerContext* context, ::grpc::ServerUnaryStreamer< ::TempoWorld::SpawnActorRequest,::TempoWorld::SpawnActorResponse>* server_unary_streamer) = 0;
  };
  template <class BaseClass>
  class WithStreamedUnaryMethod_FinishSpawningActor : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithStreamedUnaryMethod_FinishSpawningActor() {
      ::grpc::Service::MarkMethodStreamed(1,
        new ::grpc::internal::StreamedUnaryHandler<
          ::TempoWorld::FinishSpawningActorRequest, ::TempoWorld::FinishSpawningActorResponse>(
            [this](::grpc::ServerContext* context,
                   ::grpc::ServerUnaryStreamer<
                     ::TempoWorld::FinishSpawningActorRequest, ::TempoWorld::FinishSpawningActorResponse>* streamer) {
                       return this->StreamedFinishSpawningActor(context,
                         streamer);
                  }));
    }
    ~WithStreamedUnaryMethod_FinishSpawningActor() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable regular version of this method
    ::grpc::Status FinishSpawningActor(::grpc::ServerContext* /*context*/, const ::TempoWorld::FinishSpawningActorRequest* /*request*/, ::TempoWorld::FinishSpawningActorResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    // replace default version of method with streamed unary
    virtual ::grpc::Status StreamedFinishSpawningActor(::grpc::ServerContext* context, ::grpc::ServerUnaryStreamer< ::TempoWorld::FinishSpawningActorRequest,::TempoWorld::FinishSpawningActorResponse>* server_unary_streamer) = 0;
  };
  template <class BaseClass>
  class WithStreamedUnaryMethod_DestroyActor : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithStreamedUnaryMethod_DestroyActor() {
      ::grpc::Service::MarkMethodStreamed(2,
        new ::grpc::internal::StreamedUnaryHandler<
          ::TempoWorld::DestroyActorRequest, ::TempoScripting::Empty>(
            [this](::grpc::ServerContext* context,
                   ::grpc::ServerUnaryStreamer<
                     ::TempoWorld::DestroyActorRequest, ::TempoScripting::Empty>* streamer) {
                       return this->StreamedDestroyActor(context,
                         streamer);
                  }));
    }
    ~WithStreamedUnaryMethod_DestroyActor() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable regular version of this method
    ::grpc::Status DestroyActor(::grpc::ServerContext* /*context*/, const ::TempoWorld::DestroyActorRequest* /*request*/, ::TempoScripting::Empty* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    // replace default version of method with streamed unary
    virtual ::grpc::Status StreamedDestroyActor(::grpc::ServerContext* context, ::grpc::ServerUnaryStreamer< ::TempoWorld::DestroyActorRequest,::TempoScripting::Empty>* server_unary_streamer) = 0;
  };
  template <class BaseClass>
  class WithStreamedUnaryMethod_AddComponent : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithStreamedUnaryMethod_AddComponent() {
      ::grpc::Service::MarkMethodStreamed(3,
        new ::grpc::internal::StreamedUnaryHandler<
          ::TempoWorld::AddComponentRequest, ::TempoWorld::AddComponentResponse>(
            [this](::grpc::ServerContext* context,
                   ::grpc::ServerUnaryStreamer<
                     ::TempoWorld::AddComponentRequest, ::TempoWorld::AddComponentResponse>* streamer) {
                       return this->StreamedAddComponent(context,
                         streamer);
                  }));
    }
    ~WithStreamedUnaryMethod_AddComponent() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable regular version of this method
    ::grpc::Status AddComponent(::grpc::ServerContext* /*context*/, const ::TempoWorld::AddComponentRequest* /*request*/, ::TempoWorld::AddComponentResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    // replace default version of method with streamed unary
    virtual ::grpc::Status StreamedAddComponent(::grpc::ServerContext* context, ::grpc::ServerUnaryStreamer< ::TempoWorld::AddComponentRequest,::TempoWorld::AddComponentResponse>* server_unary_streamer) = 0;
  };
  template <class BaseClass>
  class WithStreamedUnaryMethod_DestroyComponent : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithStreamedUnaryMethod_DestroyComponent() {
      ::grpc::Service::MarkMethodStreamed(4,
        new ::grpc::internal::StreamedUnaryHandler<
          ::TempoWorld::DestroyComponentRequest, ::TempoScripting::Empty>(
            [this](::grpc::ServerContext* context,
                   ::grpc::ServerUnaryStreamer<
                     ::TempoWorld::DestroyComponentRequest, ::TempoScripting::Empty>* streamer) {
                       return this->StreamedDestroyComponent(context,
                         streamer);
                  }));
    }
    ~WithStreamedUnaryMethod_DestroyComponent() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable regular version of this method
    ::grpc::Status DestroyComponent(::grpc::ServerContext* /*context*/, const ::TempoWorld::DestroyComponentRequest* /*request*/, ::TempoScripting::Empty* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    // replace default version of method with streamed unary
    virtual ::grpc::Status StreamedDestroyComponent(::grpc::ServerContext* context, ::grpc::ServerUnaryStreamer< ::TempoWorld::DestroyComponentRequest,::TempoScripting::Empty>* server_unary_streamer) = 0;
  };
  template <class BaseClass>
  class WithStreamedUnaryMethod_SetActorTransform : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithStreamedUnaryMethod_SetActorTransform() {
      ::grpc::Service::MarkMethodStreamed(5,
        new ::grpc::internal::StreamedUnaryHandler<
          ::TempoWorld::SetActorTransformRequest, ::TempoScripting::Empty>(
            [this](::grpc::ServerContext* context,
                   ::grpc::ServerUnaryStreamer<
                     ::TempoWorld::SetActorTransformRequest, ::TempoScripting::Empty>* streamer) {
                       return this->StreamedSetActorTransform(context,
                         streamer);
                  }));
    }
    ~WithStreamedUnaryMethod_SetActorTransform() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable regular version of this method
    ::grpc::Status SetActorTransform(::grpc::ServerContext* /*context*/, const ::TempoWorld::SetActorTransformRequest* /*request*/, ::TempoScripting::Empty* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    // replace default version of method with streamed unary
    virtual ::grpc::Status StreamedSetActorTransform(::grpc::ServerContext* context, ::grpc::ServerUnaryStreamer< ::TempoWorld::SetActorTransformRequest,::TempoScripting::Empty>* server_unary_streamer) = 0;
  };
  template <class BaseClass>
  class WithStreamedUnaryMethod_SetComponentTransform : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithStreamedUnaryMethod_SetComponentTransform() {
      ::grpc::Service::MarkMethodStreamed(6,
        new ::grpc::internal::StreamedUnaryHandler<
          ::TempoWorld::SetComponentTransformRequest, ::TempoScripting::Empty>(
            [this](::grpc::ServerContext* context,
                   ::grpc::ServerUnaryStreamer<
                     ::TempoWorld::SetComponentTransformRequest, ::TempoScripting::Empty>* streamer) {
                       return this->StreamedSetComponentTransform(context,
                         streamer);
                  }));
    }
    ~WithStreamedUnaryMethod_SetComponentTransform() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable regular version of this method
    ::grpc::Status SetComponentTransform(::grpc::ServerContext* /*context*/, const ::TempoWorld::SetComponentTransformRequest* /*request*/, ::TempoScripting::Empty* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    // replace default version of method with streamed unary
    virtual ::grpc::Status StreamedSetComponentTransform(::grpc::ServerContext* context, ::grpc::ServerUnaryStreamer< ::TempoWorld::SetComponentTransformRequest,::TempoScripting::Empty>* server_unary_streamer) = 0;
  };
  template <class BaseClass>
  class WithStreamedUnaryMethod_ActivateComponent : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithStreamedUnaryMethod_ActivateComponent() {
      ::grpc::Service::MarkMethodStreamed(7,
        new ::grpc::internal::StreamedUnaryHandler<
          ::TempoWorld::ActivateComponentRequest, ::TempoScripting::Empty>(
            [this](::grpc::ServerContext* context,
                   ::grpc::ServerUnaryStreamer<
                     ::TempoWorld::ActivateComponentRequest, ::TempoScripting::Empty>* streamer) {
                       return this->StreamedActivateComponent(context,
                         streamer);
                  }));
    }
    ~WithStreamedUnaryMethod_ActivateComponent() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable regular version of this method
    ::grpc::Status ActivateComponent(::grpc::ServerContext* /*context*/, const ::TempoWorld::ActivateComponentRequest* /*request*/, ::TempoScripting::Empty* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    // replace default version of method with streamed unary
    virtual ::grpc::Status StreamedActivateComponent(::grpc::ServerContext* context, ::grpc::ServerUnaryStreamer< ::TempoWorld::ActivateComponentRequest,::TempoScripting::Empty>* server_unary_streamer) = 0;
  };
  template <class BaseClass>
  class WithStreamedUnaryMethod_DeactivateComponent : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithStreamedUnaryMethod_DeactivateComponent() {
      ::grpc::Service::MarkMethodStreamed(8,
        new ::grpc::internal::StreamedUnaryHandler<
          ::TempoWorld::DeactivateComponentRequest, ::TempoScripting::Empty>(
            [this](::grpc::ServerContext* context,
                   ::grpc::ServerUnaryStreamer<
                     ::TempoWorld::DeactivateComponentRequest, ::TempoScripting::Empty>* streamer) {
                       return this->StreamedDeactivateComponent(context,
                         streamer);
                  }));
    }
    ~WithStreamedUnaryMethod_DeactivateComponent() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable regular version of this method
    ::grpc::Status DeactivateComponent(::grpc::ServerContext* /*context*/, const ::TempoWorld::DeactivateComponentRequest* /*request*/, ::TempoScripting::Empty* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    // replace default version of method with streamed unary
    virtual ::grpc::Status StreamedDeactivateComponent(::grpc::ServerContext* context, ::grpc::ServerUnaryStreamer< ::TempoWorld::DeactivateComponentRequest,::TempoScripting::Empty>* server_unary_streamer) = 0;
  };
  template <class BaseClass>
  class WithStreamedUnaryMethod_GetAllActors : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithStreamedUnaryMethod_GetAllActors() {
      ::grpc::Service::MarkMethodStreamed(9,
        new ::grpc::internal::StreamedUnaryHandler<
          ::TempoWorld::GetAllActorsRequest, ::TempoWorld::GetAllActorsResponse>(
            [this](::grpc::ServerContext* context,
                   ::grpc::ServerUnaryStreamer<
                     ::TempoWorld::GetAllActorsRequest, ::TempoWorld::GetAllActorsResponse>* streamer) {
                       return this->StreamedGetAllActors(context,
                         streamer);
                  }));
    }
    ~WithStreamedUnaryMethod_GetAllActors() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable regular version of this method
    ::grpc::Status GetAllActors(::grpc::ServerContext* /*context*/, const ::TempoWorld::GetAllActorsRequest* /*request*/, ::TempoWorld::GetAllActorsResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    // replace default version of method with streamed unary
    virtual ::grpc::Status StreamedGetAllActors(::grpc::ServerContext* context, ::grpc::ServerUnaryStreamer< ::TempoWorld::GetAllActorsRequest,::TempoWorld::GetAllActorsResponse>* server_unary_streamer) = 0;
  };
  template <class BaseClass>
  class WithStreamedUnaryMethod_GetAllComponents : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithStreamedUnaryMethod_GetAllComponents() {
      ::grpc::Service::MarkMethodStreamed(10,
        new ::grpc::internal::StreamedUnaryHandler<
          ::TempoWorld::GetAllComponentsRequest, ::TempoWorld::GetAllComponentsResponse>(
            [this](::grpc::ServerContext* context,
                   ::grpc::ServerUnaryStreamer<
                     ::TempoWorld::GetAllComponentsRequest, ::TempoWorld::GetAllComponentsResponse>* streamer) {
                       return this->StreamedGetAllComponents(context,
                         streamer);
                  }));
    }
    ~WithStreamedUnaryMethod_GetAllComponents() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable regular version of this method
    ::grpc::Status GetAllComponents(::grpc::ServerContext* /*context*/, const ::TempoWorld::GetAllComponentsRequest* /*request*/, ::TempoWorld::GetAllComponentsResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    // replace default version of method with streamed unary
    virtual ::grpc::Status StreamedGetAllComponents(::grpc::ServerContext* context, ::grpc::ServerUnaryStreamer< ::TempoWorld::GetAllComponentsRequest,::TempoWorld::GetAllComponentsResponse>* server_unary_streamer) = 0;
  };
  template <class BaseClass>
  class WithStreamedUnaryMethod_GetActorProperties : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithStreamedUnaryMethod_GetActorProperties() {
      ::grpc::Service::MarkMethodStreamed(11,
        new ::grpc::internal::StreamedUnaryHandler<
          ::TempoWorld::GetActorPropertiesRequest, ::TempoWorld::GetPropertiesResponse>(
            [this](::grpc::ServerContext* context,
                   ::grpc::ServerUnaryStreamer<
                     ::TempoWorld::GetActorPropertiesRequest, ::TempoWorld::GetPropertiesResponse>* streamer) {
                       return this->StreamedGetActorProperties(context,
                         streamer);
                  }));
    }
    ~WithStreamedUnaryMethod_GetActorProperties() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable regular version of this method
    ::grpc::Status GetActorProperties(::grpc::ServerContext* /*context*/, const ::TempoWorld::GetActorPropertiesRequest* /*request*/, ::TempoWorld::GetPropertiesResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    // replace default version of method with streamed unary
    virtual ::grpc::Status StreamedGetActorProperties(::grpc::ServerContext* context, ::grpc::ServerUnaryStreamer< ::TempoWorld::GetActorPropertiesRequest,::TempoWorld::GetPropertiesResponse>* server_unary_streamer) = 0;
  };
  template <class BaseClass>
  class WithStreamedUnaryMethod_GetComponentProperties : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithStreamedUnaryMethod_GetComponentProperties() {
      ::grpc::Service::MarkMethodStreamed(12,
        new ::grpc::internal::StreamedUnaryHandler<
          ::TempoWorld::GetComponentPropertiesRequest, ::TempoWorld::GetPropertiesResponse>(
            [this](::grpc::ServerContext* context,
                   ::grpc::ServerUnaryStreamer<
                     ::TempoWorld::GetComponentPropertiesRequest, ::TempoWorld::GetPropertiesResponse>* streamer) {
                       return this->StreamedGetComponentProperties(context,
                         streamer);
                  }));
    }
    ~WithStreamedUnaryMethod_GetComponentProperties() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable regular version of this method
    ::grpc::Status GetComponentProperties(::grpc::ServerContext* /*context*/, const ::TempoWorld::GetComponentPropertiesRequest* /*request*/, ::TempoWorld::GetPropertiesResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    // replace default version of method with streamed unary
    virtual ::grpc::Status StreamedGetComponentProperties(::grpc::ServerContext* context, ::grpc::ServerUnaryStreamer< ::TempoWorld::GetComponentPropertiesRequest,::TempoWorld::GetPropertiesResponse>* server_unary_streamer) = 0;
  };
  template <class BaseClass>
  class WithStreamedUnaryMethod_SetBoolProperty : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithStreamedUnaryMethod_SetBoolProperty() {
      ::grpc::Service::MarkMethodStreamed(13,
        new ::grpc::internal::StreamedUnaryHandler<
          ::TempoWorld::SetBoolPropertyRequest, ::TempoScripting::Empty>(
            [this](::grpc::ServerContext* context,
                   ::grpc::ServerUnaryStreamer<
                     ::TempoWorld::SetBoolPropertyRequest, ::TempoScripting::Empty>* streamer) {
                       return this->StreamedSetBoolProperty(context,
                         streamer);
                  }));
    }
    ~WithStreamedUnaryMethod_SetBoolProperty() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable regular version of this method
    ::grpc::Status SetBoolProperty(::grpc::ServerContext* /*context*/, const ::TempoWorld::SetBoolPropertyRequest* /*request*/, ::TempoScripting::Empty* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    // replace default version of method with streamed unary
    virtual ::grpc::Status StreamedSetBoolProperty(::grpc::ServerContext* context, ::grpc::ServerUnaryStreamer< ::TempoWorld::SetBoolPropertyRequest,::TempoScripting::Empty>* server_unary_streamer) = 0;
  };
  template <class BaseClass>
  class WithStreamedUnaryMethod_SetStringProperty : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithStreamedUnaryMethod_SetStringProperty() {
      ::grpc::Service::MarkMethodStreamed(14,
        new ::grpc::internal::StreamedUnaryHandler<
          ::TempoWorld::SetStringPropertyRequest, ::TempoScripting::Empty>(
            [this](::grpc::ServerContext* context,
                   ::grpc::ServerUnaryStreamer<
                     ::TempoWorld::SetStringPropertyRequest, ::TempoScripting::Empty>* streamer) {
                       return this->StreamedSetStringProperty(context,
                         streamer);
                  }));
    }
    ~WithStreamedUnaryMethod_SetStringProperty() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable regular version of this method
    ::grpc::Status SetStringProperty(::grpc::ServerContext* /*context*/, const ::TempoWorld::SetStringPropertyRequest* /*request*/, ::TempoScripting::Empty* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    // replace default version of method with streamed unary
    virtual ::grpc::Status StreamedSetStringProperty(::grpc::ServerContext* context, ::grpc::ServerUnaryStreamer< ::TempoWorld::SetStringPropertyRequest,::TempoScripting::Empty>* server_unary_streamer) = 0;
  };
  template <class BaseClass>
  class WithStreamedUnaryMethod_SetEnumProperty : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithStreamedUnaryMethod_SetEnumProperty() {
      ::grpc::Service::MarkMethodStreamed(15,
        new ::grpc::internal::StreamedUnaryHandler<
          ::TempoWorld::SetEnumPropertyRequest, ::TempoScripting::Empty>(
            [this](::grpc::ServerContext* context,
                   ::grpc::ServerUnaryStreamer<
                     ::TempoWorld::SetEnumPropertyRequest, ::TempoScripting::Empty>* streamer) {
                       return this->StreamedSetEnumProperty(context,
                         streamer);
                  }));
    }
    ~WithStreamedUnaryMethod_SetEnumProperty() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable regular version of this method
    ::grpc::Status SetEnumProperty(::grpc::ServerContext* /*context*/, const ::TempoWorld::SetEnumPropertyRequest* /*request*/, ::TempoScripting::Empty* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    // replace default version of method with streamed unary
    virtual ::grpc::Status StreamedSetEnumProperty(::grpc::ServerContext* context, ::grpc::ServerUnaryStreamer< ::TempoWorld::SetEnumPropertyRequest,::TempoScripting::Empty>* server_unary_streamer) = 0;
  };
  template <class BaseClass>
  class WithStreamedUnaryMethod_SetIntProperty : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithStreamedUnaryMethod_SetIntProperty() {
      ::grpc::Service::MarkMethodStreamed(16,
        new ::grpc::internal::StreamedUnaryHandler<
          ::TempoWorld::SetIntPropertyRequest, ::TempoScripting::Empty>(
            [this](::grpc::ServerContext* context,
                   ::grpc::ServerUnaryStreamer<
                     ::TempoWorld::SetIntPropertyRequest, ::TempoScripting::Empty>* streamer) {
                       return this->StreamedSetIntProperty(context,
                         streamer);
                  }));
    }
    ~WithStreamedUnaryMethod_SetIntProperty() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable regular version of this method
    ::grpc::Status SetIntProperty(::grpc::ServerContext* /*context*/, const ::TempoWorld::SetIntPropertyRequest* /*request*/, ::TempoScripting::Empty* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    // replace default version of method with streamed unary
    virtual ::grpc::Status StreamedSetIntProperty(::grpc::ServerContext* context, ::grpc::ServerUnaryStreamer< ::TempoWorld::SetIntPropertyRequest,::TempoScripting::Empty>* server_unary_streamer) = 0;
  };
  template <class BaseClass>
  class WithStreamedUnaryMethod_SetFloatProperty : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithStreamedUnaryMethod_SetFloatProperty() {
      ::grpc::Service::MarkMethodStreamed(17,
        new ::grpc::internal::StreamedUnaryHandler<
          ::TempoWorld::SetFloatPropertyRequest, ::TempoScripting::Empty>(
            [this](::grpc::ServerContext* context,
                   ::grpc::ServerUnaryStreamer<
                     ::TempoWorld::SetFloatPropertyRequest, ::TempoScripting::Empty>* streamer) {
                       return this->StreamedSetFloatProperty(context,
                         streamer);
                  }));
    }
    ~WithStreamedUnaryMethod_SetFloatProperty() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable regular version of this method
    ::grpc::Status SetFloatProperty(::grpc::ServerContext* /*context*/, const ::TempoWorld::SetFloatPropertyRequest* /*request*/, ::TempoScripting::Empty* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    // replace default version of method with streamed unary
    virtual ::grpc::Status StreamedSetFloatProperty(::grpc::ServerContext* context, ::grpc::ServerUnaryStreamer< ::TempoWorld::SetFloatPropertyRequest,::TempoScripting::Empty>* server_unary_streamer) = 0;
  };
  template <class BaseClass>
  class WithStreamedUnaryMethod_SetVectorProperty : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithStreamedUnaryMethod_SetVectorProperty() {
      ::grpc::Service::MarkMethodStreamed(18,
        new ::grpc::internal::StreamedUnaryHandler<
          ::TempoWorld::SetVectorPropertyRequest, ::TempoScripting::Empty>(
            [this](::grpc::ServerContext* context,
                   ::grpc::ServerUnaryStreamer<
                     ::TempoWorld::SetVectorPropertyRequest, ::TempoScripting::Empty>* streamer) {
                       return this->StreamedSetVectorProperty(context,
                         streamer);
                  }));
    }
    ~WithStreamedUnaryMethod_SetVectorProperty() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable regular version of this method
    ::grpc::Status SetVectorProperty(::grpc::ServerContext* /*context*/, const ::TempoWorld::SetVectorPropertyRequest* /*request*/, ::TempoScripting::Empty* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    // replace default version of method with streamed unary
    virtual ::grpc::Status StreamedSetVectorProperty(::grpc::ServerContext* context, ::grpc::ServerUnaryStreamer< ::TempoWorld::SetVectorPropertyRequest,::TempoScripting::Empty>* server_unary_streamer) = 0;
  };
  template <class BaseClass>
  class WithStreamedUnaryMethod_SetRotatorProperty : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithStreamedUnaryMethod_SetRotatorProperty() {
      ::grpc::Service::MarkMethodStreamed(19,
        new ::grpc::internal::StreamedUnaryHandler<
          ::TempoWorld::SetRotatorPropertyRequest, ::TempoScripting::Empty>(
            [this](::grpc::ServerContext* context,
                   ::grpc::ServerUnaryStreamer<
                     ::TempoWorld::SetRotatorPropertyRequest, ::TempoScripting::Empty>* streamer) {
                       return this->StreamedSetRotatorProperty(context,
                         streamer);
                  }));
    }
    ~WithStreamedUnaryMethod_SetRotatorProperty() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable regular version of this method
    ::grpc::Status SetRotatorProperty(::grpc::ServerContext* /*context*/, const ::TempoWorld::SetRotatorPropertyRequest* /*request*/, ::TempoScripting::Empty* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    // replace default version of method with streamed unary
    virtual ::grpc::Status StreamedSetRotatorProperty(::grpc::ServerContext* context, ::grpc::ServerUnaryStreamer< ::TempoWorld::SetRotatorPropertyRequest,::TempoScripting::Empty>* server_unary_streamer) = 0;
  };
  template <class BaseClass>
  class WithStreamedUnaryMethod_SetColorProperty : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithStreamedUnaryMethod_SetColorProperty() {
      ::grpc::Service::MarkMethodStreamed(20,
        new ::grpc::internal::StreamedUnaryHandler<
          ::TempoWorld::SetColorPropertyRequest, ::TempoScripting::Empty>(
            [this](::grpc::ServerContext* context,
                   ::grpc::ServerUnaryStreamer<
                     ::TempoWorld::SetColorPropertyRequest, ::TempoScripting::Empty>* streamer) {
                       return this->StreamedSetColorProperty(context,
                         streamer);
                  }));
    }
    ~WithStreamedUnaryMethod_SetColorProperty() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable regular version of this method
    ::grpc::Status SetColorProperty(::grpc::ServerContext* /*context*/, const ::TempoWorld::SetColorPropertyRequest* /*request*/, ::TempoScripting::Empty* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    // replace default version of method with streamed unary
    virtual ::grpc::Status StreamedSetColorProperty(::grpc::ServerContext* context, ::grpc::ServerUnaryStreamer< ::TempoWorld::SetColorPropertyRequest,::TempoScripting::Empty>* server_unary_streamer) = 0;
  };
  template <class BaseClass>
  class WithStreamedUnaryMethod_SetClassProperty : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithStreamedUnaryMethod_SetClassProperty() {
      ::grpc::Service::MarkMethodStreamed(21,
        new ::grpc::internal::StreamedUnaryHandler<
          ::TempoWorld::SetClassPropertyRequest, ::TempoScripting::Empty>(
            [this](::grpc::ServerContext* context,
                   ::grpc::ServerUnaryStreamer<
                     ::TempoWorld::SetClassPropertyRequest, ::TempoScripting::Empty>* streamer) {
                       return this->StreamedSetClassProperty(context,
                         streamer);
                  }));
    }
    ~WithStreamedUnaryMethod_SetClassProperty() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable regular version of this method
    ::grpc::Status SetClassProperty(::grpc::ServerContext* /*context*/, const ::TempoWorld::SetClassPropertyRequest* /*request*/, ::TempoScripting::Empty* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    // replace default version of method with streamed unary
    virtual ::grpc::Status StreamedSetClassProperty(::grpc::ServerContext* context, ::grpc::ServerUnaryStreamer< ::TempoWorld::SetClassPropertyRequest,::TempoScripting::Empty>* server_unary_streamer) = 0;
  };
  template <class BaseClass>
  class WithStreamedUnaryMethod_SetAssetProperty : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithStreamedUnaryMethod_SetAssetProperty() {
      ::grpc::Service::MarkMethodStreamed(22,
        new ::grpc::internal::StreamedUnaryHandler<
          ::TempoWorld::SetAssetPropertyRequest, ::TempoScripting::Empty>(
            [this](::grpc::ServerContext* context,
                   ::grpc::ServerUnaryStreamer<
                     ::TempoWorld::SetAssetPropertyRequest, ::TempoScripting::Empty>* streamer) {
                       return this->StreamedSetAssetProperty(context,
                         streamer);
                  }));
    }
    ~WithStreamedUnaryMethod_SetAssetProperty() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable regular version of this method
    ::grpc::Status SetAssetProperty(::grpc::ServerContext* /*context*/, const ::TempoWorld::SetAssetPropertyRequest* /*request*/, ::TempoScripting::Empty* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    // replace default version of method with streamed unary
    virtual ::grpc::Status StreamedSetAssetProperty(::grpc::ServerContext* context, ::grpc::ServerUnaryStreamer< ::TempoWorld::SetAssetPropertyRequest,::TempoScripting::Empty>* server_unary_streamer) = 0;
  };
  template <class BaseClass>
  class WithStreamedUnaryMethod_SetActorProperty : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithStreamedUnaryMethod_SetActorProperty() {
      ::grpc::Service::MarkMethodStreamed(23,
        new ::grpc::internal::StreamedUnaryHandler<
          ::TempoWorld::SetActorPropertyRequest, ::TempoScripting::Empty>(
            [this](::grpc::ServerContext* context,
                   ::grpc::ServerUnaryStreamer<
                     ::TempoWorld::SetActorPropertyRequest, ::TempoScripting::Empty>* streamer) {
                       return this->StreamedSetActorProperty(context,
                         streamer);
                  }));
    }
    ~WithStreamedUnaryMethod_SetActorProperty() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable regular version of this method
    ::grpc::Status SetActorProperty(::grpc::ServerContext* /*context*/, const ::TempoWorld::SetActorPropertyRequest* /*request*/, ::TempoScripting::Empty* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    // replace default version of method with streamed unary
    virtual ::grpc::Status StreamedSetActorProperty(::grpc::ServerContext* context, ::grpc::ServerUnaryStreamer< ::TempoWorld::SetActorPropertyRequest,::TempoScripting::Empty>* server_unary_streamer) = 0;
  };
  template <class BaseClass>
  class WithStreamedUnaryMethod_SetComponentProperty : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithStreamedUnaryMethod_SetComponentProperty() {
      ::grpc::Service::MarkMethodStreamed(24,
        new ::grpc::internal::StreamedUnaryHandler<
          ::TempoWorld::SetComponentPropertyRequest, ::TempoScripting::Empty>(
            [this](::grpc::ServerContext* context,
                   ::grpc::ServerUnaryStreamer<
                     ::TempoWorld::SetComponentPropertyRequest, ::TempoScripting::Empty>* streamer) {
                       return this->StreamedSetComponentProperty(context,
                         streamer);
                  }));
    }
    ~WithStreamedUnaryMethod_SetComponentProperty() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable regular version of this method
    ::grpc::Status SetComponentProperty(::grpc::ServerContext* /*context*/, const ::TempoWorld::SetComponentPropertyRequest* /*request*/, ::TempoScripting::Empty* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    // replace default version of method with streamed unary
    virtual ::grpc::Status StreamedSetComponentProperty(::grpc::ServerContext* context, ::grpc::ServerUnaryStreamer< ::TempoWorld::SetComponentPropertyRequest,::TempoScripting::Empty>* server_unary_streamer) = 0;
  };
  template <class BaseClass>
  class WithStreamedUnaryMethod_SetBoolArrayProperty : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithStreamedUnaryMethod_SetBoolArrayProperty() {
      ::grpc::Service::MarkMethodStreamed(25,
        new ::grpc::internal::StreamedUnaryHandler<
          ::TempoWorld::SetBoolArrayPropertyRequest, ::TempoScripting::Empty>(
            [this](::grpc::ServerContext* context,
                   ::grpc::ServerUnaryStreamer<
                     ::TempoWorld::SetBoolArrayPropertyRequest, ::TempoScripting::Empty>* streamer) {
                       return this->StreamedSetBoolArrayProperty(context,
                         streamer);
                  }));
    }
    ~WithStreamedUnaryMethod_SetBoolArrayProperty() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable regular version of this method
    ::grpc::Status SetBoolArrayProperty(::grpc::ServerContext* /*context*/, const ::TempoWorld::SetBoolArrayPropertyRequest* /*request*/, ::TempoScripting::Empty* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    // replace default version of method with streamed unary
    virtual ::grpc::Status StreamedSetBoolArrayProperty(::grpc::ServerContext* context, ::grpc::ServerUnaryStreamer< ::TempoWorld::SetBoolArrayPropertyRequest,::TempoScripting::Empty>* server_unary_streamer) = 0;
  };
  template <class BaseClass>
  class WithStreamedUnaryMethod_SetStringArrayProperty : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithStreamedUnaryMethod_SetStringArrayProperty() {
      ::grpc::Service::MarkMethodStreamed(26,
        new ::grpc::internal::StreamedUnaryHandler<
          ::TempoWorld::SetStringArrayPropertyRequest, ::TempoScripting::Empty>(
            [this](::grpc::ServerContext* context,
                   ::grpc::ServerUnaryStreamer<
                     ::TempoWorld::SetStringArrayPropertyRequest, ::TempoScripting::Empty>* streamer) {
                       return this->StreamedSetStringArrayProperty(context,
                         streamer);
                  }));
    }
    ~WithStreamedUnaryMethod_SetStringArrayProperty() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable regular version of this method
    ::grpc::Status SetStringArrayProperty(::grpc::ServerContext* /*context*/, const ::TempoWorld::SetStringArrayPropertyRequest* /*request*/, ::TempoScripting::Empty* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    // replace default version of method with streamed unary
    virtual ::grpc::Status StreamedSetStringArrayProperty(::grpc::ServerContext* context, ::grpc::ServerUnaryStreamer< ::TempoWorld::SetStringArrayPropertyRequest,::TempoScripting::Empty>* server_unary_streamer) = 0;
  };
  template <class BaseClass>
  class WithStreamedUnaryMethod_SetEnumArrayProperty : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithStreamedUnaryMethod_SetEnumArrayProperty() {
      ::grpc::Service::MarkMethodStreamed(27,
        new ::grpc::internal::StreamedUnaryHandler<
          ::TempoWorld::SetEnumArrayPropertyRequest, ::TempoScripting::Empty>(
            [this](::grpc::ServerContext* context,
                   ::grpc::ServerUnaryStreamer<
                     ::TempoWorld::SetEnumArrayPropertyRequest, ::TempoScripting::Empty>* streamer) {
                       return this->StreamedSetEnumArrayProperty(context,
                         streamer);
                  }));
    }
    ~WithStreamedUnaryMethod_SetEnumArrayProperty() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable regular version of this method
    ::grpc::Status SetEnumArrayProperty(::grpc::ServerContext* /*context*/, const ::TempoWorld::SetEnumArrayPropertyRequest* /*request*/, ::TempoScripting::Empty* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    // replace default version of method with streamed unary
    virtual ::grpc::Status StreamedSetEnumArrayProperty(::grpc::ServerContext* context, ::grpc::ServerUnaryStreamer< ::TempoWorld::SetEnumArrayPropertyRequest,::TempoScripting::Empty>* server_unary_streamer) = 0;
  };
  template <class BaseClass>
  class WithStreamedUnaryMethod_SetIntArrayProperty : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithStreamedUnaryMethod_SetIntArrayProperty() {
      ::grpc::Service::MarkMethodStreamed(28,
        new ::grpc::internal::StreamedUnaryHandler<
          ::TempoWorld::SetIntArrayPropertyRequest, ::TempoScripting::Empty>(
            [this](::grpc::ServerContext* context,
                   ::grpc::ServerUnaryStreamer<
                     ::TempoWorld::SetIntArrayPropertyRequest, ::TempoScripting::Empty>* streamer) {
                       return this->StreamedSetIntArrayProperty(context,
                         streamer);
                  }));
    }
    ~WithStreamedUnaryMethod_SetIntArrayProperty() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable regular version of this method
    ::grpc::Status SetIntArrayProperty(::grpc::ServerContext* /*context*/, const ::TempoWorld::SetIntArrayPropertyRequest* /*request*/, ::TempoScripting::Empty* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    // replace default version of method with streamed unary
    virtual ::grpc::Status StreamedSetIntArrayProperty(::grpc::ServerContext* context, ::grpc::ServerUnaryStreamer< ::TempoWorld::SetIntArrayPropertyRequest,::TempoScripting::Empty>* server_unary_streamer) = 0;
  };
  template <class BaseClass>
  class WithStreamedUnaryMethod_SetFloatArrayProperty : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithStreamedUnaryMethod_SetFloatArrayProperty() {
      ::grpc::Service::MarkMethodStreamed(29,
        new ::grpc::internal::StreamedUnaryHandler<
          ::TempoWorld::SetFloatArrayPropertyRequest, ::TempoScripting::Empty>(
            [this](::grpc::ServerContext* context,
                   ::grpc::ServerUnaryStreamer<
                     ::TempoWorld::SetFloatArrayPropertyRequest, ::TempoScripting::Empty>* streamer) {
                       return this->StreamedSetFloatArrayProperty(context,
                         streamer);
                  }));
    }
    ~WithStreamedUnaryMethod_SetFloatArrayProperty() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable regular version of this method
    ::grpc::Status SetFloatArrayProperty(::grpc::ServerContext* /*context*/, const ::TempoWorld::SetFloatArrayPropertyRequest* /*request*/, ::TempoScripting::Empty* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    // replace default version of method with streamed unary
    virtual ::grpc::Status StreamedSetFloatArrayProperty(::grpc::ServerContext* context, ::grpc::ServerUnaryStreamer< ::TempoWorld::SetFloatArrayPropertyRequest,::TempoScripting::Empty>* server_unary_streamer) = 0;
  };
  template <class BaseClass>
  class WithStreamedUnaryMethod_SetClassArrayProperty : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithStreamedUnaryMethod_SetClassArrayProperty() {
      ::grpc::Service::MarkMethodStreamed(30,
        new ::grpc::internal::StreamedUnaryHandler<
          ::TempoWorld::SetClassArrayPropertyRequest, ::TempoScripting::Empty>(
            [this](::grpc::ServerContext* context,
                   ::grpc::ServerUnaryStreamer<
                     ::TempoWorld::SetClassArrayPropertyRequest, ::TempoScripting::Empty>* streamer) {
                       return this->StreamedSetClassArrayProperty(context,
                         streamer);
                  }));
    }
    ~WithStreamedUnaryMethod_SetClassArrayProperty() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable regular version of this method
    ::grpc::Status SetClassArrayProperty(::grpc::ServerContext* /*context*/, const ::TempoWorld::SetClassArrayPropertyRequest* /*request*/, ::TempoScripting::Empty* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    // replace default version of method with streamed unary
    virtual ::grpc::Status StreamedSetClassArrayProperty(::grpc::ServerContext* context, ::grpc::ServerUnaryStreamer< ::TempoWorld::SetClassArrayPropertyRequest,::TempoScripting::Empty>* server_unary_streamer) = 0;
  };
  template <class BaseClass>
  class WithStreamedUnaryMethod_SetAssetArrayProperty : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithStreamedUnaryMethod_SetAssetArrayProperty() {
      ::grpc::Service::MarkMethodStreamed(31,
        new ::grpc::internal::StreamedUnaryHandler<
          ::TempoWorld::SetAssetArrayPropertyRequest, ::TempoScripting::Empty>(
            [this](::grpc::ServerContext* context,
                   ::grpc::ServerUnaryStreamer<
                     ::TempoWorld::SetAssetArrayPropertyRequest, ::TempoScripting::Empty>* streamer) {
                       return this->StreamedSetAssetArrayProperty(context,
                         streamer);
                  }));
    }
    ~WithStreamedUnaryMethod_SetAssetArrayProperty() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable regular version of this method
    ::grpc::Status SetAssetArrayProperty(::grpc::ServerContext* /*context*/, const ::TempoWorld::SetAssetArrayPropertyRequest* /*request*/, ::TempoScripting::Empty* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    // replace default version of method with streamed unary
    virtual ::grpc::Status StreamedSetAssetArrayProperty(::grpc::ServerContext* context, ::grpc::ServerUnaryStreamer< ::TempoWorld::SetAssetArrayPropertyRequest,::TempoScripting::Empty>* server_unary_streamer) = 0;
  };
  template <class BaseClass>
  class WithStreamedUnaryMethod_SetActorArrayProperty : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithStreamedUnaryMethod_SetActorArrayProperty() {
      ::grpc::Service::MarkMethodStreamed(32,
        new ::grpc::internal::StreamedUnaryHandler<
          ::TempoWorld::SetActorArrayPropertyRequest, ::TempoScripting::Empty>(
            [this](::grpc::ServerContext* context,
                   ::grpc::ServerUnaryStreamer<
                     ::TempoWorld::SetActorArrayPropertyRequest, ::TempoScripting::Empty>* streamer) {
                       return this->StreamedSetActorArrayProperty(context,
                         streamer);
                  }));
    }
    ~WithStreamedUnaryMethod_SetActorArrayProperty() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable regular version of this method
    ::grpc::Status SetActorArrayProperty(::grpc::ServerContext* /*context*/, const ::TempoWorld::SetActorArrayPropertyRequest* /*request*/, ::TempoScripting::Empty* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    // replace default version of method with streamed unary
    virtual ::grpc::Status StreamedSetActorArrayProperty(::grpc::ServerContext* context, ::grpc::ServerUnaryStreamer< ::TempoWorld::SetActorArrayPropertyRequest,::TempoScripting::Empty>* server_unary_streamer) = 0;
  };
  template <class BaseClass>
  class WithStreamedUnaryMethod_SetComponentArrayProperty : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithStreamedUnaryMethod_SetComponentArrayProperty() {
      ::grpc::Service::MarkMethodStreamed(33,
        new ::grpc::internal::StreamedUnaryHandler<
          ::TempoWorld::SetComponentArrayPropertyRequest, ::TempoScripting::Empty>(
            [this](::grpc::ServerContext* context,
                   ::grpc::ServerUnaryStreamer<
                     ::TempoWorld::SetComponentArrayPropertyRequest, ::TempoScripting::Empty>* streamer) {
                       return this->StreamedSetComponentArrayProperty(context,
                         streamer);
                  }));
    }
    ~WithStreamedUnaryMethod_SetComponentArrayProperty() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable regular version of this method
    ::grpc::Status SetComponentArrayProperty(::grpc::ServerContext* /*context*/, const ::TempoWorld::SetComponentArrayPropertyRequest* /*request*/, ::TempoScripting::Empty* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    // replace default version of method with streamed unary
    virtual ::grpc::Status StreamedSetComponentArrayProperty(::grpc::ServerContext* context, ::grpc::ServerUnaryStreamer< ::TempoWorld::SetComponentArrayPropertyRequest,::TempoScripting::Empty>* server_unary_streamer) = 0;
  };
  template <class BaseClass>
  class WithStreamedUnaryMethod_CallFunction : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithStreamedUnaryMethod_CallFunction() {
      ::grpc::Service::MarkMethodStreamed(34,
        new ::grpc::internal::StreamedUnaryHandler<
          ::TempoWorld::CallFunctionRequest, ::TempoScripting::Empty>(
            [this](::grpc::ServerContext* context,
                   ::grpc::ServerUnaryStreamer<
                     ::TempoWorld::CallFunctionRequest, ::TempoScripting::Empty>* streamer) {
                       return this->StreamedCallFunction(context,
                         streamer);
                  }));
    }
    ~WithStreamedUnaryMethod_CallFunction() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable regular version of this method
    ::grpc::Status CallFunction(::grpc::ServerContext* /*context*/, const ::TempoWorld::CallFunctionRequest* /*request*/, ::TempoScripting::Empty* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    // replace default version of method with streamed unary
    virtual ::grpc::Status StreamedCallFunction(::grpc::ServerContext* context, ::grpc::ServerUnaryStreamer< ::TempoWorld::CallFunctionRequest,::TempoScripting::Empty>* server_unary_streamer) = 0;
  };
  typedef WithStreamedUnaryMethod_SpawnActor<WithStreamedUnaryMethod_FinishSpawningActor<WithStreamedUnaryMethod_DestroyActor<WithStreamedUnaryMethod_AddComponent<WithStreamedUnaryMethod_DestroyComponent<WithStreamedUnaryMethod_SetActorTransform<WithStreamedUnaryMethod_SetComponentTransform<WithStreamedUnaryMethod_ActivateComponent<WithStreamedUnaryMethod_DeactivateComponent<WithStreamedUnaryMethod_GetAllActors<WithStreamedUnaryMethod_GetAllComponents<WithStreamedUnaryMethod_GetActorProperties<WithStreamedUnaryMethod_GetComponentProperties<WithStreamedUnaryMethod_SetBoolProperty<WithStreamedUnaryMethod_SetStringProperty<WithStreamedUnaryMethod_SetEnumProperty<WithStreamedUnaryMethod_SetIntProperty<WithStreamedUnaryMethod_SetFloatProperty<WithStreamedUnaryMethod_SetVectorProperty<WithStreamedUnaryMethod_SetRotatorProperty<WithStreamedUnaryMethod_SetColorProperty<WithStreamedUnaryMethod_SetClassProperty<WithStreamedUnaryMethod_SetAssetProperty<WithStreamedUnaryMethod_SetActorProperty<WithStreamedUnaryMethod_SetComponentProperty<WithStreamedUnaryMethod_SetBoolArrayProperty<WithStreamedUnaryMethod_SetStringArrayProperty<WithStreamedUnaryMethod_SetEnumArrayProperty<WithStreamedUnaryMethod_SetIntArrayProperty<WithStreamedUnaryMethod_SetFloatArrayProperty<WithStreamedUnaryMethod_SetClassArrayProperty<WithStreamedUnaryMethod_SetAssetArrayProperty<WithStreamedUnaryMethod_SetActorArrayProperty<WithStreamedUnaryMethod_SetComponentArrayProperty<WithStreamedUnaryMethod_CallFunction<Service > > > > > > > > > > > > > > > > > > > > > > > > > > > > > > > > > > > StreamedUnaryService;
  typedef Service SplitStreamedService;
  typedef WithStreamedUnaryMethod_SpawnActor<WithStreamedUnaryMethod_FinishSpawningActor<WithStreamedUnaryMethod_DestroyActor<WithStreamedUnaryMethod_AddComponent<WithStreamedUnaryMethod_DestroyComponent<WithStreamedUnaryMethod_SetActorTransform<WithStreamedUnaryMethod_SetComponentTransform<WithStreamedUnaryMethod_ActivateComponent<WithStreamedUnaryMethod_DeactivateComponent<WithStreamedUnaryMethod_GetAllActors<WithStreamedUnaryMethod_GetAllComponents<WithStreamedUnaryMethod_GetActorProperties<WithStreamedUnaryMethod_GetComponentProperties<WithStreamedUnaryMethod_SetBoolProperty<WithStreamedUnaryMethod_SetStringProperty<WithStreamedUnaryMethod_SetEnumProperty<WithStreamedUnaryMethod_SetIntProperty<WithStreamedUnaryMethod_SetFloatProperty<WithStreamedUnaryMethod_SetVectorProperty<WithStreamedUnaryMethod_SetRotatorProperty<WithStreamedUnaryMethod_SetColorProperty<WithStreamedUnaryMethod_SetClassProperty<WithStreamedUnaryMethod_SetAssetProperty<WithStreamedUnaryMethod_SetActorProperty<WithStreamedUnaryMethod_SetComponentProperty<WithStreamedUnaryMethod_SetBoolArrayProperty<WithStreamedUnaryMethod_SetStringArrayProperty<WithStreamedUnaryMethod_SetEnumArrayProperty<WithStreamedUnaryMethod_SetIntArrayProperty<WithStreamedUnaryMethod_SetFloatArrayProperty<WithStreamedUnaryMethod_SetClassArrayProperty<WithStreamedUnaryMethod_SetAssetArrayProperty<WithStreamedUnaryMethod_SetActorArrayProperty<WithStreamedUnaryMethod_SetComponentArrayProperty<WithStreamedUnaryMethod_CallFunction<Service > > > > > > > > > > > > > > > > > > > > > > > > > > > > > > > > > > > StreamedService;
};

}  // namespace TempoWorld


#endif  // GRPC_TempoWorld_2fActorControl_2eproto__INCLUDED
