// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: TempoMapQuery/MapQueries.proto

#include "TempoMapQuery/MapQueries.pb.h"

#include <algorithm>
#include "google/protobuf/io/coded_stream.h"
#include "google/protobuf/extension_set.h"
#include "google/protobuf/wire_format_lite.h"
#include "google/protobuf/descriptor.h"
#include "google/protobuf/generated_message_reflection.h"
#include "google/protobuf/reflection_ops.h"
#include "google/protobuf/wire_format.h"
#include "google/protobuf/generated_message_tctable_impl.h"
// @@protoc_insertion_point(includes)

// Must be included last.
#include "google/protobuf/port_def.inc"
PROTOBUF_PRAGMA_INIT_SEG
namespace _pb = ::google::protobuf_tempo;
namespace _pbi = ::google::protobuf_tempo::internal;
namespace _fl = ::google::protobuf_tempo::internal::field_layout;
namespace TempoMapQuery {

inline constexpr ZoneConnection::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : id_{0},
        _cached_size_{0} {}

template <typename>
PROTOBUF_CONSTEXPR ZoneConnection::ZoneConnection(::_pbi::ConstantInitialized)
    : _impl_(::_pbi::ConstantInitialized()) {}
struct ZoneConnectionDefaultTypeInternal {
  PROTOBUF_CONSTEXPR ZoneConnectionDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~ZoneConnectionDefaultTypeInternal() {}
  union {
    ZoneConnection _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT TEMPOMAPQUERY_API
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 ZoneConnectionDefaultTypeInternal _ZoneConnection_default_instance_;

inline constexpr TagFilter::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : any_tags_{},
        all_tags_{},
        none_tags_{},
        _cached_size_{0} {}

template <typename>
PROTOBUF_CONSTEXPR TagFilter::TagFilter(::_pbi::ConstantInitialized)
    : _impl_(::_pbi::ConstantInitialized()) {}
struct TagFilterDefaultTypeInternal {
  PROTOBUF_CONSTEXPR TagFilterDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~TagFilterDefaultTypeInternal() {}
  union {
    TagFilter _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT TEMPOMAPQUERY_API
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 TagFilterDefaultTypeInternal _TagFilter_default_instance_;

inline constexpr LaneConnection::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : id_{0},
        relationship_{static_cast< ::TempoMapQuery::LaneRelationship >(0)},
        _cached_size_{0} {}

template <typename>
PROTOBUF_CONSTEXPR LaneConnection::LaneConnection(::_pbi::ConstantInitialized)
    : _impl_(::_pbi::ConstantInitialized()) {}
struct LaneConnectionDefaultTypeInternal {
  PROTOBUF_CONSTEXPR LaneConnectionDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~LaneConnectionDefaultTypeInternal() {}
  union {
    LaneConnection _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT TEMPOMAPQUERY_API
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 LaneConnectionDefaultTypeInternal _LaneConnection_default_instance_;

inline constexpr LaneAccessibilityResponse::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : accessibility_{static_cast< ::TempoMapQuery::LaneAccessibility >(0)},
        _cached_size_{0} {}

template <typename>
PROTOBUF_CONSTEXPR LaneAccessibilityResponse::LaneAccessibilityResponse(::_pbi::ConstantInitialized)
    : _impl_(::_pbi::ConstantInitialized()) {}
struct LaneAccessibilityResponseDefaultTypeInternal {
  PROTOBUF_CONSTEXPR LaneAccessibilityResponseDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~LaneAccessibilityResponseDefaultTypeInternal() {}
  union {
    LaneAccessibilityResponse _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT TEMPOMAPQUERY_API
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 LaneAccessibilityResponseDefaultTypeInternal _LaneAccessibilityResponse_default_instance_;

inline constexpr LaneAccessibilityRequest::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : from_id_{0},
        to_id_{0},
        _cached_size_{0} {}

template <typename>
PROTOBUF_CONSTEXPR LaneAccessibilityRequest::LaneAccessibilityRequest(::_pbi::ConstantInitialized)
    : _impl_(::_pbi::ConstantInitialized()) {}
struct LaneAccessibilityRequestDefaultTypeInternal {
  PROTOBUF_CONSTEXPR LaneAccessibilityRequestDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~LaneAccessibilityRequestDefaultTypeInternal() {}
  union {
    LaneAccessibilityRequest _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT TEMPOMAPQUERY_API
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 LaneAccessibilityRequestDefaultTypeInternal _LaneAccessibilityRequest_default_instance_;

inline constexpr ZoneDataRequest::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : _cached_size_{0},
        tag_filter_{nullptr},
        center_{nullptr},
        radius_{0} {}

template <typename>
PROTOBUF_CONSTEXPR ZoneDataRequest::ZoneDataRequest(::_pbi::ConstantInitialized)
    : _impl_(::_pbi::ConstantInitialized()) {}
struct ZoneDataRequestDefaultTypeInternal {
  PROTOBUF_CONSTEXPR ZoneDataRequestDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~ZoneDataRequestDefaultTypeInternal() {}
  union {
    ZoneDataRequest _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT TEMPOMAPQUERY_API
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 ZoneDataRequestDefaultTypeInternal _ZoneDataRequest_default_instance_;

inline constexpr ZoneData::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : tags_{},
        boundary_points_{},
        connections_{},
        id_{0},
        _cached_size_{0} {}

template <typename>
PROTOBUF_CONSTEXPR ZoneData::ZoneData(::_pbi::ConstantInitialized)
    : _impl_(::_pbi::ConstantInitialized()) {}
struct ZoneDataDefaultTypeInternal {
  PROTOBUF_CONSTEXPR ZoneDataDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~ZoneDataDefaultTypeInternal() {}
  union {
    ZoneData _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT TEMPOMAPQUERY_API
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 ZoneDataDefaultTypeInternal _ZoneData_default_instance_;

inline constexpr LaneDataRequest::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : _cached_size_{0},
        tag_filter_{nullptr},
        center_{nullptr},
        radius_{0} {}

template <typename>
PROTOBUF_CONSTEXPR LaneDataRequest::LaneDataRequest(::_pbi::ConstantInitialized)
    : _impl_(::_pbi::ConstantInitialized()) {}
struct LaneDataRequestDefaultTypeInternal {
  PROTOBUF_CONSTEXPR LaneDataRequestDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~LaneDataRequestDefaultTypeInternal() {}
  union {
    LaneDataRequest _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT TEMPOMAPQUERY_API
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 LaneDataRequestDefaultTypeInternal _LaneDataRequest_default_instance_;

inline constexpr LaneData::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : tags_{},
        center_points_{},
        connections_{},
        width_{0},
        id_{0},
        _cached_size_{0} {}

template <typename>
PROTOBUF_CONSTEXPR LaneData::LaneData(::_pbi::ConstantInitialized)
    : _impl_(::_pbi::ConstantInitialized()) {}
struct LaneDataDefaultTypeInternal {
  PROTOBUF_CONSTEXPR LaneDataDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~LaneDataDefaultTypeInternal() {}
  union {
    LaneData _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT TEMPOMAPQUERY_API
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 LaneDataDefaultTypeInternal _LaneData_default_instance_;

inline constexpr ZoneDataResponse::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : zones_{},
        _cached_size_{0} {}

template <typename>
PROTOBUF_CONSTEXPR ZoneDataResponse::ZoneDataResponse(::_pbi::ConstantInitialized)
    : _impl_(::_pbi::ConstantInitialized()) {}
struct ZoneDataResponseDefaultTypeInternal {
  PROTOBUF_CONSTEXPR ZoneDataResponseDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~ZoneDataResponseDefaultTypeInternal() {}
  union {
    ZoneDataResponse _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT TEMPOMAPQUERY_API
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 ZoneDataResponseDefaultTypeInternal _ZoneDataResponse_default_instance_;

inline constexpr LaneDataResponse::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : lanes_{},
        _cached_size_{0} {}

template <typename>
PROTOBUF_CONSTEXPR LaneDataResponse::LaneDataResponse(::_pbi::ConstantInitialized)
    : _impl_(::_pbi::ConstantInitialized()) {}
struct LaneDataResponseDefaultTypeInternal {
  PROTOBUF_CONSTEXPR LaneDataResponseDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~LaneDataResponseDefaultTypeInternal() {}
  union {
    LaneDataResponse _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT TEMPOMAPQUERY_API
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 LaneDataResponseDefaultTypeInternal _LaneDataResponse_default_instance_;
}  // namespace TempoMapQuery
static ::_pb::Metadata file_level_metadata_TempoMapQuery_2fMapQueries_2eproto[11];
static const ::_pb::EnumDescriptor* file_level_enum_descriptors_TempoMapQuery_2fMapQueries_2eproto[2];
static constexpr const ::_pb::ServiceDescriptor**
    file_level_service_descriptors_TempoMapQuery_2fMapQueries_2eproto = nullptr;
const ::uint32_t TableStruct_TempoMapQuery_2fMapQueries_2eproto::offsets[] PROTOBUF_SECTION_VARIABLE(
    protodesc_cold) = {
    ~0u,  // no _has_bits_
    PROTOBUF_FIELD_OFFSET(::TempoMapQuery::TagFilter, _internal_metadata_),
    ~0u,  // no _extensions_
    ~0u,  // no _oneof_case_
    ~0u,  // no _weak_field_map_
    ~0u,  // no _inlined_string_donated_
    ~0u,  // no _split_
    ~0u,  // no sizeof(Split)
    PROTOBUF_FIELD_OFFSET(::TempoMapQuery::TagFilter, _impl_.any_tags_),
    PROTOBUF_FIELD_OFFSET(::TempoMapQuery::TagFilter, _impl_.all_tags_),
    PROTOBUF_FIELD_OFFSET(::TempoMapQuery::TagFilter, _impl_.none_tags_),
    PROTOBUF_FIELD_OFFSET(::TempoMapQuery::LaneDataRequest, _impl_._has_bits_),
    PROTOBUF_FIELD_OFFSET(::TempoMapQuery::LaneDataRequest, _internal_metadata_),
    ~0u,  // no _extensions_
    ~0u,  // no _oneof_case_
    ~0u,  // no _weak_field_map_
    ~0u,  // no _inlined_string_donated_
    ~0u,  // no _split_
    ~0u,  // no sizeof(Split)
    PROTOBUF_FIELD_OFFSET(::TempoMapQuery::LaneDataRequest, _impl_.tag_filter_),
    PROTOBUF_FIELD_OFFSET(::TempoMapQuery::LaneDataRequest, _impl_.center_),
    PROTOBUF_FIELD_OFFSET(::TempoMapQuery::LaneDataRequest, _impl_.radius_),
    0,
    1,
    ~0u,
    ~0u,  // no _has_bits_
    PROTOBUF_FIELD_OFFSET(::TempoMapQuery::LaneConnection, _internal_metadata_),
    ~0u,  // no _extensions_
    ~0u,  // no _oneof_case_
    ~0u,  // no _weak_field_map_
    ~0u,  // no _inlined_string_donated_
    ~0u,  // no _split_
    ~0u,  // no sizeof(Split)
    PROTOBUF_FIELD_OFFSET(::TempoMapQuery::LaneConnection, _impl_.id_),
    PROTOBUF_FIELD_OFFSET(::TempoMapQuery::LaneConnection, _impl_.relationship_),
    ~0u,  // no _has_bits_
    PROTOBUF_FIELD_OFFSET(::TempoMapQuery::LaneData, _internal_metadata_),
    ~0u,  // no _extensions_
    ~0u,  // no _oneof_case_
    ~0u,  // no _weak_field_map_
    ~0u,  // no _inlined_string_donated_
    ~0u,  // no _split_
    ~0u,  // no sizeof(Split)
    PROTOBUF_FIELD_OFFSET(::TempoMapQuery::LaneData, _impl_.id_),
    PROTOBUF_FIELD_OFFSET(::TempoMapQuery::LaneData, _impl_.tags_),
    PROTOBUF_FIELD_OFFSET(::TempoMapQuery::LaneData, _impl_.center_points_),
    PROTOBUF_FIELD_OFFSET(::TempoMapQuery::LaneData, _impl_.width_),
    PROTOBUF_FIELD_OFFSET(::TempoMapQuery::LaneData, _impl_.connections_),
    ~0u,  // no _has_bits_
    PROTOBUF_FIELD_OFFSET(::TempoMapQuery::LaneDataResponse, _internal_metadata_),
    ~0u,  // no _extensions_
    ~0u,  // no _oneof_case_
    ~0u,  // no _weak_field_map_
    ~0u,  // no _inlined_string_donated_
    ~0u,  // no _split_
    ~0u,  // no sizeof(Split)
    PROTOBUF_FIELD_OFFSET(::TempoMapQuery::LaneDataResponse, _impl_.lanes_),
    PROTOBUF_FIELD_OFFSET(::TempoMapQuery::ZoneDataRequest, _impl_._has_bits_),
    PROTOBUF_FIELD_OFFSET(::TempoMapQuery::ZoneDataRequest, _internal_metadata_),
    ~0u,  // no _extensions_
    ~0u,  // no _oneof_case_
    ~0u,  // no _weak_field_map_
    ~0u,  // no _inlined_string_donated_
    ~0u,  // no _split_
    ~0u,  // no sizeof(Split)
    PROTOBUF_FIELD_OFFSET(::TempoMapQuery::ZoneDataRequest, _impl_.tag_filter_),
    PROTOBUF_FIELD_OFFSET(::TempoMapQuery::ZoneDataRequest, _impl_.center_),
    PROTOBUF_FIELD_OFFSET(::TempoMapQuery::ZoneDataRequest, _impl_.radius_),
    0,
    1,
    ~0u,
    ~0u,  // no _has_bits_
    PROTOBUF_FIELD_OFFSET(::TempoMapQuery::ZoneConnection, _internal_metadata_),
    ~0u,  // no _extensions_
    ~0u,  // no _oneof_case_
    ~0u,  // no _weak_field_map_
    ~0u,  // no _inlined_string_donated_
    ~0u,  // no _split_
    ~0u,  // no sizeof(Split)
    PROTOBUF_FIELD_OFFSET(::TempoMapQuery::ZoneConnection, _impl_.id_),
    ~0u,  // no _has_bits_
    PROTOBUF_FIELD_OFFSET(::TempoMapQuery::ZoneData, _internal_metadata_),
    ~0u,  // no _extensions_
    ~0u,  // no _oneof_case_
    ~0u,  // no _weak_field_map_
    ~0u,  // no _inlined_string_donated_
    ~0u,  // no _split_
    ~0u,  // no sizeof(Split)
    PROTOBUF_FIELD_OFFSET(::TempoMapQuery::ZoneData, _impl_.id_),
    PROTOBUF_FIELD_OFFSET(::TempoMapQuery::ZoneData, _impl_.tags_),
    PROTOBUF_FIELD_OFFSET(::TempoMapQuery::ZoneData, _impl_.boundary_points_),
    PROTOBUF_FIELD_OFFSET(::TempoMapQuery::ZoneData, _impl_.connections_),
    ~0u,  // no _has_bits_
    PROTOBUF_FIELD_OFFSET(::TempoMapQuery::ZoneDataResponse, _internal_metadata_),
    ~0u,  // no _extensions_
    ~0u,  // no _oneof_case_
    ~0u,  // no _weak_field_map_
    ~0u,  // no _inlined_string_donated_
    ~0u,  // no _split_
    ~0u,  // no sizeof(Split)
    PROTOBUF_FIELD_OFFSET(::TempoMapQuery::ZoneDataResponse, _impl_.zones_),
    ~0u,  // no _has_bits_
    PROTOBUF_FIELD_OFFSET(::TempoMapQuery::LaneAccessibilityRequest, _internal_metadata_),
    ~0u,  // no _extensions_
    ~0u,  // no _oneof_case_
    ~0u,  // no _weak_field_map_
    ~0u,  // no _inlined_string_donated_
    ~0u,  // no _split_
    ~0u,  // no sizeof(Split)
    PROTOBUF_FIELD_OFFSET(::TempoMapQuery::LaneAccessibilityRequest, _impl_.from_id_),
    PROTOBUF_FIELD_OFFSET(::TempoMapQuery::LaneAccessibilityRequest, _impl_.to_id_),
    ~0u,  // no _has_bits_
    PROTOBUF_FIELD_OFFSET(::TempoMapQuery::LaneAccessibilityResponse, _internal_metadata_),
    ~0u,  // no _extensions_
    ~0u,  // no _oneof_case_
    ~0u,  // no _weak_field_map_
    ~0u,  // no _inlined_string_donated_
    ~0u,  // no _split_
    ~0u,  // no sizeof(Split)
    PROTOBUF_FIELD_OFFSET(::TempoMapQuery::LaneAccessibilityResponse, _impl_.accessibility_),
};

static const ::_pbi::MigrationSchema
    schemas[] PROTOBUF_SECTION_VARIABLE(protodesc_cold) = {
        {0, -1, -1, sizeof(::TempoMapQuery::TagFilter)},
        {11, 22, -1, sizeof(::TempoMapQuery::LaneDataRequest)},
        {25, -1, -1, sizeof(::TempoMapQuery::LaneConnection)},
        {35, -1, -1, sizeof(::TempoMapQuery::LaneData)},
        {48, -1, -1, sizeof(::TempoMapQuery::LaneDataResponse)},
        {57, 68, -1, sizeof(::TempoMapQuery::ZoneDataRequest)},
        {71, -1, -1, sizeof(::TempoMapQuery::ZoneConnection)},
        {80, -1, -1, sizeof(::TempoMapQuery::ZoneData)},
        {92, -1, -1, sizeof(::TempoMapQuery::ZoneDataResponse)},
        {101, -1, -1, sizeof(::TempoMapQuery::LaneAccessibilityRequest)},
        {111, -1, -1, sizeof(::TempoMapQuery::LaneAccessibilityResponse)},
};

static const ::_pb::Message* const file_default_instances[] = {
    &::TempoMapQuery::_TagFilter_default_instance_._instance,
    &::TempoMapQuery::_LaneDataRequest_default_instance_._instance,
    &::TempoMapQuery::_LaneConnection_default_instance_._instance,
    &::TempoMapQuery::_LaneData_default_instance_._instance,
    &::TempoMapQuery::_LaneDataResponse_default_instance_._instance,
    &::TempoMapQuery::_ZoneDataRequest_default_instance_._instance,
    &::TempoMapQuery::_ZoneConnection_default_instance_._instance,
    &::TempoMapQuery::_ZoneData_default_instance_._instance,
    &::TempoMapQuery::_ZoneDataResponse_default_instance_._instance,
    &::TempoMapQuery::_LaneAccessibilityRequest_default_instance_._instance,
    &::TempoMapQuery::_LaneAccessibilityResponse_default_instance_._instance,
};
const char descriptor_table_protodef_TempoMapQuery_2fMapQueries_2eproto[] PROTOBUF_SECTION_VARIABLE(protodesc_cold) = {
    "\n\036TempoMapQuery/MapQueries.proto\022\rTempoM"
    "apQuery\032\035TempoScripting/Geometry.proto\"B"
    "\n\tTagFilter\022\020\n\010any_tags\030\001 \003(\t\022\020\n\010all_tag"
    "s\030\002 \003(\t\022\021\n\tnone_tags\030\004 \003(\t\"y\n\017LaneDataRe"
    "quest\022,\n\ntag_filter\030\001 \001(\0132\030.TempoMapQuer"
    "y.TagFilter\022(\n\006center\030\002 \001(\0132\030.TempoScrip"
    "ting.Vector2D\022\016\n\006radius\030\003 \001(\001\"S\n\016LaneCon"
    "nection\022\n\n\002id\030\002 \001(\005\0225\n\014relationship\030\003 \001("
    "\0162\037.TempoMapQuery.LaneRelationship\"\226\001\n\010L"
    "aneData\022\n\n\002id\030\001 \001(\005\022\014\n\004tags\030\002 \003(\t\022-\n\rcen"
    "ter_points\030\003 \003(\0132\026.TempoScripting.Vector"
    "\022\r\n\005width\030\004 \001(\001\0222\n\013connections\030\005 \003(\0132\035.T"
    "empoMapQuery.LaneConnection\":\n\020LaneDataR"
    "esponse\022&\n\005lanes\030\001 \003(\0132\027.TempoMapQuery.L"
    "aneData\"w\n\017ZoneDataRequest\022,\n\ntag_filter"
    "\030\001 \001(\0132\030.TempoMapQuery.TagFilter\022&\n\006cent"
    "er\030\002 \001(\0132\026.TempoScripting.Vector\022\016\n\006radi"
    "us\030\003 \001(\001\"\034\n\016ZoneConnection\022\n\n\002id\030\001 \001(\005\"\211"
    "\001\n\010ZoneData\022\n\n\002id\030\001 \001(\005\022\014\n\004tags\030\002 \003(\t\022/\n"
    "\017boundary_points\030\004 \003(\0132\026.TempoScripting."
    "Vector\0222\n\013connections\030\005 \003(\0132\035.TempoMapQu"
    "ery.ZoneConnection\":\n\020ZoneDataResponse\022&"
    "\n\005zones\030\001 \003(\0132\027.TempoMapQuery.ZoneData\":"
    "\n\030LaneAccessibilityRequest\022\017\n\007from_id\030\001 "
    "\001(\005\022\r\n\005to_id\030\002 \001(\005\"T\n\031LaneAccessibilityR"
    "esponse\0227\n\raccessibility\030\001 \001(\0162 .TempoMa"
    "pQuery.LaneAccessibility*P\n\020LaneRelation"
    "ship\022\016\n\nLR_UNKNOWN\020\000\022\r\n\tSUCCESSOR\020\001\022\017\n\013P"
    "REDECESSOR\020\002\022\014\n\010NEIGHBOR\020\003*z\n\021LaneAccess"
    "ibility\022\016\n\nLA_UNKNOWN\020\000\022\t\n\005GREEN\020\001\022\n\n\006YE"
    "LLOW\020\002\022\007\n\003RED\020\003\022\r\n\tSTOP_SIGN\020\004\022\016\n\nYIELD_"
    "SIGN\020\005\022\026\n\022NO_TRAFFIC_CONTROL\020\0062\206\003\n\017MapQu"
    "eryService\022K\n\010GetLanes\022\036.TempoMapQuery.L"
    "aneDataRequest\032\037.TempoMapQuery.LaneDataR"
    "esponse\022i\n\024GetLaneAccessibility\022\'.TempoM"
    "apQuery.LaneAccessibilityRequest\032(.Tempo"
    "MapQuery.LaneAccessibilityResponse\022n\n\027St"
    "reamLaneAccessibility\022\'.TempoMapQuery.La"
    "neAccessibilityRequest\032(.TempoMapQuery.L"
    "aneAccessibilityResponse0\001\022K\n\010GetZones\022\036"
    ".TempoMapQuery.ZoneDataRequest\032\037.TempoMa"
    "pQuery.ZoneDataResponseb\006proto3"
};
static const ::_pbi::DescriptorTable* const descriptor_table_TempoMapQuery_2fMapQueries_2eproto_deps[1] =
    {
        &::descriptor_table_TempoScripting_2fGeometry_2eproto,
};
static ::absl_tempo::once_flag descriptor_table_TempoMapQuery_2fMapQueries_2eproto_once;
const ::_pbi::DescriptorTable descriptor_table_TempoMapQuery_2fMapQueries_2eproto = {
    false,
    false,
    1671,
    descriptor_table_protodef_TempoMapQuery_2fMapQueries_2eproto,
    "TempoMapQuery/MapQueries.proto",
    &descriptor_table_TempoMapQuery_2fMapQueries_2eproto_once,
    descriptor_table_TempoMapQuery_2fMapQueries_2eproto_deps,
    1,
    11,
    schemas,
    file_default_instances,
    TableStruct_TempoMapQuery_2fMapQueries_2eproto::offsets,
    file_level_metadata_TempoMapQuery_2fMapQueries_2eproto,
    file_level_enum_descriptors_TempoMapQuery_2fMapQueries_2eproto,
    file_level_service_descriptors_TempoMapQuery_2fMapQueries_2eproto,
};

// This function exists to be marked as weak.
// It can significantly speed up compilation by breaking up LLVM's SCC
// in the .pb.cc translation units. Large translation units see a
// reduction of more than 35% of walltime for optimized builds. Without
// the weak attribute all the messages in the file, including all the
// vtables and everything they use become part of the same SCC through
// a cycle like:
// GetMetadata -> descriptor table -> default instances ->
//   vtables -> GetMetadata
// By adding a weak function here we break the connection from the
// individual vtables back into the descriptor table.
PROTOBUF_ATTRIBUTE_WEAK const ::_pbi::DescriptorTable* descriptor_table_TempoMapQuery_2fMapQueries_2eproto_getter() {
  return &descriptor_table_TempoMapQuery_2fMapQueries_2eproto;
}
// Force running AddDescriptors() at dynamic initialization time.
PROTOBUF_ATTRIBUTE_INIT_PRIORITY2
static ::_pbi::AddDescriptorsRunner dynamic_init_dummy_TempoMapQuery_2fMapQueries_2eproto(&descriptor_table_TempoMapQuery_2fMapQueries_2eproto);
namespace TempoMapQuery {
const ::google::protobuf_tempo::EnumDescriptor* LaneRelationship_descriptor() {
  ::google::protobuf_tempo::internal::AssignDescriptors(&descriptor_table_TempoMapQuery_2fMapQueries_2eproto);
  return file_level_enum_descriptors_TempoMapQuery_2fMapQueries_2eproto[0];
}
PROTOBUF_CONSTINIT const uint32_t LaneRelationship_internal_data_[] = {
    262144u, 0u, };
bool LaneRelationship_IsValid(int value) {
  return 0 <= value && value <= 3;
}
const ::google::protobuf_tempo::EnumDescriptor* LaneAccessibility_descriptor() {
  ::google::protobuf_tempo::internal::AssignDescriptors(&descriptor_table_TempoMapQuery_2fMapQueries_2eproto);
  return file_level_enum_descriptors_TempoMapQuery_2fMapQueries_2eproto[1];
}
PROTOBUF_CONSTINIT const uint32_t LaneAccessibility_internal_data_[] = {
    458752u, 0u, };
bool LaneAccessibility_IsValid(int value) {
  return 0 <= value && value <= 6;
}
// ===================================================================

class TagFilter::_Internal {
 public:
};

TagFilter::TagFilter(::google::protobuf_tempo::Arena* arena)
    : ::google::protobuf_tempo::Message(arena) {
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:TempoMapQuery.TagFilter)
}
inline PROTOBUF_NDEBUG_INLINE TagFilter::Impl_::Impl_(
    ::google::protobuf_tempo::internal::InternalVisibility visibility, ::google::protobuf_tempo::Arena* arena,
    const Impl_& from)
      : any_tags_{visibility, arena, from.any_tags_},
        all_tags_{visibility, arena, from.all_tags_},
        none_tags_{visibility, arena, from.none_tags_},
        _cached_size_{0} {}

TagFilter::TagFilter(
    ::google::protobuf_tempo::Arena* arena,
    const TagFilter& from)
    : ::google::protobuf_tempo::Message(arena) {
  TagFilter* const _this = this;
  (void)_this;
  _internal_metadata_.MergeFrom<::google::protobuf_tempo::UnknownFieldSet>(
      from._internal_metadata_);
  new (&_impl_) Impl_(internal_visibility(), arena, from._impl_);

  // @@protoc_insertion_point(copy_constructor:TempoMapQuery.TagFilter)
}
inline PROTOBUF_NDEBUG_INLINE TagFilter::Impl_::Impl_(
    ::google::protobuf_tempo::internal::InternalVisibility visibility,
    ::google::protobuf_tempo::Arena* arena)
      : any_tags_{visibility, arena},
        all_tags_{visibility, arena},
        none_tags_{visibility, arena},
        _cached_size_{0} {}

inline void TagFilter::SharedCtor(::_pb::Arena* arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
}
TagFilter::~TagFilter() {
  // @@protoc_insertion_point(destructor:TempoMapQuery.TagFilter)
  _internal_metadata_.Delete<::google::protobuf_tempo::UnknownFieldSet>();
  SharedDtor();
}
inline void TagFilter::SharedDtor() {
  ABSL_DCHECK(GetArena() == nullptr);
  _impl_.~Impl_();
}

PROTOBUF_NOINLINE void TagFilter::Clear() {
// @@protoc_insertion_point(message_clear_start:TempoMapQuery.TagFilter)
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.any_tags_.Clear();
  _impl_.all_tags_.Clear();
  _impl_.none_tags_.Clear();
  _internal_metadata_.Clear<::google::protobuf_tempo::UnknownFieldSet>();
}

const char* TagFilter::_InternalParse(
    const char* ptr, ::_pbi::ParseContext* ctx) {
  ptr = ::_pbi::TcParser::ParseLoop(this, ptr, ctx, &_table_.header);
  return ptr;
}


PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<2, 3, 0, 57, 2> TagFilter::_table_ = {
  {
    0,  // no _has_bits_
    0, // no _extensions_
    4, 24,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967284,  // skipmap
    offsetof(decltype(_table_), field_entries),
    3,  // num_field_entries
    0,  // num_aux_entries
    offsetof(decltype(_table_), field_names),  // no aux_entries
    &_TagFilter_default_instance_._instance,
    ::_pbi::TcParser::GenericFallback,  // fallback
  }, {{
    // repeated string none_tags = 4;
    {::_pbi::TcParser::FastUR1,
     {34, 63, 0, PROTOBUF_FIELD_OFFSET(TagFilter, _impl_.none_tags_)}},
    // repeated string any_tags = 1;
    {::_pbi::TcParser::FastUR1,
     {10, 63, 0, PROTOBUF_FIELD_OFFSET(TagFilter, _impl_.any_tags_)}},
    // repeated string all_tags = 2;
    {::_pbi::TcParser::FastUR1,
     {18, 63, 0, PROTOBUF_FIELD_OFFSET(TagFilter, _impl_.all_tags_)}},
    {::_pbi::TcParser::MiniParse, {}},
  }}, {{
    65535, 65535
  }}, {{
    // repeated string any_tags = 1;
    {PROTOBUF_FIELD_OFFSET(TagFilter, _impl_.any_tags_), 0, 0,
    (0 | ::_fl::kFcRepeated | ::_fl::kUtf8String | ::_fl::kRepSString)},
    // repeated string all_tags = 2;
    {PROTOBUF_FIELD_OFFSET(TagFilter, _impl_.all_tags_), 0, 0,
    (0 | ::_fl::kFcRepeated | ::_fl::kUtf8String | ::_fl::kRepSString)},
    // repeated string none_tags = 4;
    {PROTOBUF_FIELD_OFFSET(TagFilter, _impl_.none_tags_), 0, 0,
    (0 | ::_fl::kFcRepeated | ::_fl::kUtf8String | ::_fl::kRepSString)},
  }},
  // no aux_entries
  {{
    "\27\10\10\11\0\0\0\0"
    "TempoMapQuery.TagFilter"
    "any_tags"
    "all_tags"
    "none_tags"
  }},
};

::uint8_t* TagFilter::_InternalSerialize(
    ::uint8_t* target,
    ::google::protobuf_tempo::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:TempoMapQuery.TagFilter)
  ::uint32_t cached_has_bits = 0;
  (void)cached_has_bits;

  // repeated string any_tags = 1;
  for (int i = 0, n = this->_internal_any_tags_size(); i < n; ++i) {
    const auto& s = this->_internal_any_tags().Get(i);
    ::google::protobuf_tempo::internal::WireFormatLite::VerifyUtf8String(
        s.data(), static_cast<int>(s.length()), ::google::protobuf_tempo::internal::WireFormatLite::SERIALIZE, "TempoMapQuery.TagFilter.any_tags");
    target = stream->WriteString(1, s, target);
  }

  // repeated string all_tags = 2;
  for (int i = 0, n = this->_internal_all_tags_size(); i < n; ++i) {
    const auto& s = this->_internal_all_tags().Get(i);
    ::google::protobuf_tempo::internal::WireFormatLite::VerifyUtf8String(
        s.data(), static_cast<int>(s.length()), ::google::protobuf_tempo::internal::WireFormatLite::SERIALIZE, "TempoMapQuery.TagFilter.all_tags");
    target = stream->WriteString(2, s, target);
  }

  // repeated string none_tags = 4;
  for (int i = 0, n = this->_internal_none_tags_size(); i < n; ++i) {
    const auto& s = this->_internal_none_tags().Get(i);
    ::google::protobuf_tempo::internal::WireFormatLite::VerifyUtf8String(
        s.data(), static_cast<int>(s.length()), ::google::protobuf_tempo::internal::WireFormatLite::SERIALIZE, "TempoMapQuery.TagFilter.none_tags");
    target = stream->WriteString(4, s, target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target =
        ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
            _internal_metadata_.unknown_fields<::google::protobuf_tempo::UnknownFieldSet>(::google::protobuf_tempo::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:TempoMapQuery.TagFilter)
  return target;
}

::size_t TagFilter::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:TempoMapQuery.TagFilter)
  ::size_t total_size = 0;

  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // repeated string any_tags = 1;
  total_size += 1 * ::google::protobuf_tempo::internal::FromIntSize(_internal_any_tags().size());
  for (int i = 0, n = _internal_any_tags().size(); i < n; ++i) {
    total_size += ::google::protobuf_tempo::internal::WireFormatLite::StringSize(
        _internal_any_tags().Get(i));
  }
  // repeated string all_tags = 2;
  total_size += 1 * ::google::protobuf_tempo::internal::FromIntSize(_internal_all_tags().size());
  for (int i = 0, n = _internal_all_tags().size(); i < n; ++i) {
    total_size += ::google::protobuf_tempo::internal::WireFormatLite::StringSize(
        _internal_all_tags().Get(i));
  }
  // repeated string none_tags = 4;
  total_size += 1 * ::google::protobuf_tempo::internal::FromIntSize(_internal_none_tags().size());
  for (int i = 0, n = _internal_none_tags().size(); i < n; ++i) {
    total_size += ::google::protobuf_tempo::internal::WireFormatLite::StringSize(
        _internal_none_tags().Get(i));
  }
  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::google::protobuf_tempo::Message::ClassData TagFilter::_class_data_ = {
    TagFilter::MergeImpl,
    nullptr,  // OnDemandRegisterArenaDtor
};
const ::google::protobuf_tempo::Message::ClassData* TagFilter::GetClassData() const {
  return &_class_data_;
}

void TagFilter::MergeImpl(::google::protobuf_tempo::Message& to_msg, const ::google::protobuf_tempo::Message& from_msg) {
  auto* const _this = static_cast<TagFilter*>(&to_msg);
  auto& from = static_cast<const TagFilter&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:TempoMapQuery.TagFilter)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  _this->_internal_mutable_any_tags()->MergeFrom(from._internal_any_tags());
  _this->_internal_mutable_all_tags()->MergeFrom(from._internal_all_tags());
  _this->_internal_mutable_none_tags()->MergeFrom(from._internal_none_tags());
  _this->_internal_metadata_.MergeFrom<::google::protobuf_tempo::UnknownFieldSet>(from._internal_metadata_);
}

void TagFilter::CopyFrom(const TagFilter& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:TempoMapQuery.TagFilter)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

PROTOBUF_NOINLINE bool TagFilter::IsInitialized() const {
  return true;
}

::_pbi::CachedSize* TagFilter::AccessCachedSize() const {
  return &_impl_._cached_size_;
}
void TagFilter::InternalSwap(TagFilter* PROTOBUF_RESTRICT other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  _impl_.any_tags_.InternalSwap(&other->_impl_.any_tags_);
  _impl_.all_tags_.InternalSwap(&other->_impl_.all_tags_);
  _impl_.none_tags_.InternalSwap(&other->_impl_.none_tags_);
}

::google::protobuf_tempo::Metadata TagFilter::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_TempoMapQuery_2fMapQueries_2eproto_getter, &descriptor_table_TempoMapQuery_2fMapQueries_2eproto_once,
      file_level_metadata_TempoMapQuery_2fMapQueries_2eproto[0]);
}
// ===================================================================

class LaneDataRequest::_Internal {
 public:
  using HasBits = decltype(std::declval<LaneDataRequest>()._impl_._has_bits_);
  static constexpr ::int32_t kHasBitsOffset =
    8 * PROTOBUF_FIELD_OFFSET(LaneDataRequest, _impl_._has_bits_);
  static const ::TempoMapQuery::TagFilter& tag_filter(const LaneDataRequest* msg);
  static void set_has_tag_filter(HasBits* has_bits) {
    (*has_bits)[0] |= 1u;
  }
  static const ::TempoScripting::Vector2D& center(const LaneDataRequest* msg);
  static void set_has_center(HasBits* has_bits) {
    (*has_bits)[0] |= 2u;
  }
};

const ::TempoMapQuery::TagFilter& LaneDataRequest::_Internal::tag_filter(const LaneDataRequest* msg) {
  return *msg->_impl_.tag_filter_;
}
const ::TempoScripting::Vector2D& LaneDataRequest::_Internal::center(const LaneDataRequest* msg) {
  return *msg->_impl_.center_;
}
void LaneDataRequest::clear_center() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  if (_impl_.center_ != nullptr) _impl_.center_->Clear();
  _impl_._has_bits_[0] &= ~0x00000002u;
}
LaneDataRequest::LaneDataRequest(::google::protobuf_tempo::Arena* arena)
    : ::google::protobuf_tempo::Message(arena) {
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:TempoMapQuery.LaneDataRequest)
}
inline PROTOBUF_NDEBUG_INLINE LaneDataRequest::Impl_::Impl_(
    ::google::protobuf_tempo::internal::InternalVisibility visibility, ::google::protobuf_tempo::Arena* arena,
    const Impl_& from)
      : _has_bits_{from._has_bits_},
        _cached_size_{0} {}

LaneDataRequest::LaneDataRequest(
    ::google::protobuf_tempo::Arena* arena,
    const LaneDataRequest& from)
    : ::google::protobuf_tempo::Message(arena) {
  LaneDataRequest* const _this = this;
  (void)_this;
  _internal_metadata_.MergeFrom<::google::protobuf_tempo::UnknownFieldSet>(
      from._internal_metadata_);
  new (&_impl_) Impl_(internal_visibility(), arena, from._impl_);
  ::uint32_t cached_has_bits = _impl_._has_bits_[0];
  _impl_.tag_filter_ = (cached_has_bits & 0x00000001u)
                ? CreateMaybeMessage<::TempoMapQuery::TagFilter>(arena, *from._impl_.tag_filter_)
                : nullptr;
  _impl_.center_ = (cached_has_bits & 0x00000002u)
                ? CreateMaybeMessage<::TempoScripting::Vector2D>(arena, *from._impl_.center_)
                : nullptr;
  _impl_.radius_ = from._impl_.radius_;

  // @@protoc_insertion_point(copy_constructor:TempoMapQuery.LaneDataRequest)
}
inline PROTOBUF_NDEBUG_INLINE LaneDataRequest::Impl_::Impl_(
    ::google::protobuf_tempo::internal::InternalVisibility visibility,
    ::google::protobuf_tempo::Arena* arena)
      : _cached_size_{0} {}

inline void LaneDataRequest::SharedCtor(::_pb::Arena* arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
  ::memset(reinterpret_cast<char *>(&_impl_) +
               offsetof(Impl_, tag_filter_),
           0,
           offsetof(Impl_, radius_) -
               offsetof(Impl_, tag_filter_) +
               sizeof(Impl_::radius_));
}
LaneDataRequest::~LaneDataRequest() {
  // @@protoc_insertion_point(destructor:TempoMapQuery.LaneDataRequest)
  _internal_metadata_.Delete<::google::protobuf_tempo::UnknownFieldSet>();
  SharedDtor();
}
inline void LaneDataRequest::SharedDtor() {
  ABSL_DCHECK(GetArena() == nullptr);
  delete _impl_.tag_filter_;
  delete _impl_.center_;
  _impl_.~Impl_();
}

PROTOBUF_NOINLINE void LaneDataRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:TempoMapQuery.LaneDataRequest)
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x00000003u) {
    if (cached_has_bits & 0x00000001u) {
      ABSL_DCHECK(_impl_.tag_filter_ != nullptr);
      _impl_.tag_filter_->Clear();
    }
    if (cached_has_bits & 0x00000002u) {
      ABSL_DCHECK(_impl_.center_ != nullptr);
      _impl_.center_->Clear();
    }
  }
  _impl_.radius_ = 0;
  _impl_._has_bits_.Clear();
  _internal_metadata_.Clear<::google::protobuf_tempo::UnknownFieldSet>();
}

const char* LaneDataRequest::_InternalParse(
    const char* ptr, ::_pbi::ParseContext* ctx) {
  ptr = ::_pbi::TcParser::ParseLoop(this, ptr, ctx, &_table_.header);
  return ptr;
}


PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<2, 3, 2, 0, 2> LaneDataRequest::_table_ = {
  {
    PROTOBUF_FIELD_OFFSET(LaneDataRequest, _impl_._has_bits_),
    0, // no _extensions_
    3, 24,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967288,  // skipmap
    offsetof(decltype(_table_), field_entries),
    3,  // num_field_entries
    2,  // num_aux_entries
    offsetof(decltype(_table_), aux_entries),
    &_LaneDataRequest_default_instance_._instance,
    ::_pbi::TcParser::GenericFallback,  // fallback
  }, {{
    {::_pbi::TcParser::MiniParse, {}},
    // .TempoMapQuery.TagFilter tag_filter = 1;
    {::_pbi::TcParser::FastMtS1,
     {10, 0, 0, PROTOBUF_FIELD_OFFSET(LaneDataRequest, _impl_.tag_filter_)}},
    // .TempoScripting.Vector2D center = 2;
    {::_pbi::TcParser::FastMtS1,
     {18, 1, 1, PROTOBUF_FIELD_OFFSET(LaneDataRequest, _impl_.center_)}},
    // double radius = 3;
    {::_pbi::TcParser::FastF64S1,
     {25, 63, 0, PROTOBUF_FIELD_OFFSET(LaneDataRequest, _impl_.radius_)}},
  }}, {{
    65535, 65535
  }}, {{
    // .TempoMapQuery.TagFilter tag_filter = 1;
    {PROTOBUF_FIELD_OFFSET(LaneDataRequest, _impl_.tag_filter_), _Internal::kHasBitsOffset + 0, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kMessage | ::_fl::kTvTable)},
    // .TempoScripting.Vector2D center = 2;
    {PROTOBUF_FIELD_OFFSET(LaneDataRequest, _impl_.center_), _Internal::kHasBitsOffset + 1, 1,
    (0 | ::_fl::kFcOptional | ::_fl::kMessage | ::_fl::kTvTable)},
    // double radius = 3;
    {PROTOBUF_FIELD_OFFSET(LaneDataRequest, _impl_.radius_), -1, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kDouble)},
  }}, {{
    {::_pbi::TcParser::GetTable<::TempoMapQuery::TagFilter>()},
    {::_pbi::TcParser::GetTable<::TempoScripting::Vector2D>()},
  }}, {{
  }},
};

::uint8_t* LaneDataRequest::_InternalSerialize(
    ::uint8_t* target,
    ::google::protobuf_tempo::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:TempoMapQuery.LaneDataRequest)
  ::uint32_t cached_has_bits = 0;
  (void)cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  // .TempoMapQuery.TagFilter tag_filter = 1;
  if (cached_has_bits & 0x00000001u) {
    target = ::google::protobuf_tempo::internal::WireFormatLite::InternalWriteMessage(
        1, _Internal::tag_filter(this),
        _Internal::tag_filter(this).GetCachedSize(), target, stream);
  }

  // .TempoScripting.Vector2D center = 2;
  if (cached_has_bits & 0x00000002u) {
    target = ::google::protobuf_tempo::internal::WireFormatLite::InternalWriteMessage(
        2, _Internal::center(this),
        _Internal::center(this).GetCachedSize(), target, stream);
  }

  // double radius = 3;
  static_assert(sizeof(::uint64_t) == sizeof(double),
                "Code assumes ::uint64_t and double are the same size.");
  double tmp_radius = this->_internal_radius();
  ::uint64_t raw_radius;
  memcpy(&raw_radius, &tmp_radius, sizeof(tmp_radius));
  if (raw_radius != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteDoubleToArray(
        3, this->_internal_radius(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target =
        ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
            _internal_metadata_.unknown_fields<::google::protobuf_tempo::UnknownFieldSet>(::google::protobuf_tempo::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:TempoMapQuery.LaneDataRequest)
  return target;
}

::size_t LaneDataRequest::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:TempoMapQuery.LaneDataRequest)
  ::size_t total_size = 0;

  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x00000003u) {
    // .TempoMapQuery.TagFilter tag_filter = 1;
    if (cached_has_bits & 0x00000001u) {
      total_size +=
          1 + ::google::protobuf_tempo::internal::WireFormatLite::MessageSize(*_impl_.tag_filter_);
    }

    // .TempoScripting.Vector2D center = 2;
    if (cached_has_bits & 0x00000002u) {
      total_size +=
          1 + ::google::protobuf_tempo::internal::WireFormatLite::MessageSize(*_impl_.center_);
    }

  }
  // double radius = 3;
  static_assert(sizeof(::uint64_t) == sizeof(double),
                "Code assumes ::uint64_t and double are the same size.");
  double tmp_radius = this->_internal_radius();
  ::uint64_t raw_radius;
  memcpy(&raw_radius, &tmp_radius, sizeof(tmp_radius));
  if (raw_radius != 0) {
    total_size += 9;
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::google::protobuf_tempo::Message::ClassData LaneDataRequest::_class_data_ = {
    LaneDataRequest::MergeImpl,
    nullptr,  // OnDemandRegisterArenaDtor
};
const ::google::protobuf_tempo::Message::ClassData* LaneDataRequest::GetClassData() const {
  return &_class_data_;
}

void LaneDataRequest::MergeImpl(::google::protobuf_tempo::Message& to_msg, const ::google::protobuf_tempo::Message& from_msg) {
  auto* const _this = static_cast<LaneDataRequest*>(&to_msg);
  auto& from = static_cast<const LaneDataRequest&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:TempoMapQuery.LaneDataRequest)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._impl_._has_bits_[0];
  if (cached_has_bits & 0x00000003u) {
    if (cached_has_bits & 0x00000001u) {
      _this->_internal_mutable_tag_filter()->::TempoMapQuery::TagFilter::MergeFrom(
          from._internal_tag_filter());
    }
    if (cached_has_bits & 0x00000002u) {
      _this->_internal_mutable_center()->::TempoScripting::Vector2D::MergeFrom(
          from._internal_center());
    }
  }
  static_assert(sizeof(::uint64_t) == sizeof(double),
                "Code assumes ::uint64_t and double are the same size.");
  double tmp_radius = from._internal_radius();
  ::uint64_t raw_radius;
  memcpy(&raw_radius, &tmp_radius, sizeof(tmp_radius));
  if (raw_radius != 0) {
    _this->_internal_set_radius(from._internal_radius());
  }
  _this->_internal_metadata_.MergeFrom<::google::protobuf_tempo::UnknownFieldSet>(from._internal_metadata_);
}

void LaneDataRequest::CopyFrom(const LaneDataRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:TempoMapQuery.LaneDataRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

PROTOBUF_NOINLINE bool LaneDataRequest::IsInitialized() const {
  return true;
}

::_pbi::CachedSize* LaneDataRequest::AccessCachedSize() const {
  return &_impl_._cached_size_;
}
void LaneDataRequest::InternalSwap(LaneDataRequest* PROTOBUF_RESTRICT other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_._has_bits_[0], other->_impl_._has_bits_[0]);
  ::google::protobuf_tempo::internal::memswap<
      PROTOBUF_FIELD_OFFSET(LaneDataRequest, _impl_.radius_)
      + sizeof(LaneDataRequest::_impl_.radius_)
      - PROTOBUF_FIELD_OFFSET(LaneDataRequest, _impl_.tag_filter_)>(
          reinterpret_cast<char*>(&_impl_.tag_filter_),
          reinterpret_cast<char*>(&other->_impl_.tag_filter_));
}

::google::protobuf_tempo::Metadata LaneDataRequest::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_TempoMapQuery_2fMapQueries_2eproto_getter, &descriptor_table_TempoMapQuery_2fMapQueries_2eproto_once,
      file_level_metadata_TempoMapQuery_2fMapQueries_2eproto[1]);
}
// ===================================================================

class LaneConnection::_Internal {
 public:
};

LaneConnection::LaneConnection(::google::protobuf_tempo::Arena* arena)
    : ::google::protobuf_tempo::Message(arena) {
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:TempoMapQuery.LaneConnection)
}
LaneConnection::LaneConnection(
    ::google::protobuf_tempo::Arena* arena, const LaneConnection& from)
    : LaneConnection(arena) {
  MergeFrom(from);
}
inline PROTOBUF_NDEBUG_INLINE LaneConnection::Impl_::Impl_(
    ::google::protobuf_tempo::internal::InternalVisibility visibility,
    ::google::protobuf_tempo::Arena* arena)
      : _cached_size_{0} {}

inline void LaneConnection::SharedCtor(::_pb::Arena* arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
  ::memset(reinterpret_cast<char *>(&_impl_) +
               offsetof(Impl_, id_),
           0,
           offsetof(Impl_, relationship_) -
               offsetof(Impl_, id_) +
               sizeof(Impl_::relationship_));
}
LaneConnection::~LaneConnection() {
  // @@protoc_insertion_point(destructor:TempoMapQuery.LaneConnection)
  _internal_metadata_.Delete<::google::protobuf_tempo::UnknownFieldSet>();
  SharedDtor();
}
inline void LaneConnection::SharedDtor() {
  ABSL_DCHECK(GetArena() == nullptr);
  _impl_.~Impl_();
}

PROTOBUF_NOINLINE void LaneConnection::Clear() {
// @@protoc_insertion_point(message_clear_start:TempoMapQuery.LaneConnection)
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  ::memset(&_impl_.id_, 0, static_cast<::size_t>(
      reinterpret_cast<char*>(&_impl_.relationship_) -
      reinterpret_cast<char*>(&_impl_.id_)) + sizeof(_impl_.relationship_));
  _internal_metadata_.Clear<::google::protobuf_tempo::UnknownFieldSet>();
}

const char* LaneConnection::_InternalParse(
    const char* ptr, ::_pbi::ParseContext* ctx) {
  ptr = ::_pbi::TcParser::ParseLoop(this, ptr, ctx, &_table_.header);
  return ptr;
}


PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<1, 2, 0, 0, 2> LaneConnection::_table_ = {
  {
    0,  // no _has_bits_
    0, // no _extensions_
    3, 8,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967289,  // skipmap
    offsetof(decltype(_table_), field_entries),
    2,  // num_field_entries
    0,  // num_aux_entries
    offsetof(decltype(_table_), field_names),  // no aux_entries
    &_LaneConnection_default_instance_._instance,
    ::_pbi::TcParser::GenericFallback,  // fallback
  }, {{
    // int32 id = 2;
    {::_pbi::TcParser::SingularVarintNoZag1<::uint32_t, offsetof(LaneConnection, _impl_.id_), 63>(),
     {16, 63, 0, PROTOBUF_FIELD_OFFSET(LaneConnection, _impl_.id_)}},
    // .TempoMapQuery.LaneRelationship relationship = 3;
    {::_pbi::TcParser::SingularVarintNoZag1<::uint32_t, offsetof(LaneConnection, _impl_.relationship_), 63>(),
     {24, 63, 0, PROTOBUF_FIELD_OFFSET(LaneConnection, _impl_.relationship_)}},
  }}, {{
    65535, 65535
  }}, {{
    // int32 id = 2;
    {PROTOBUF_FIELD_OFFSET(LaneConnection, _impl_.id_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kInt32)},
    // .TempoMapQuery.LaneRelationship relationship = 3;
    {PROTOBUF_FIELD_OFFSET(LaneConnection, _impl_.relationship_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kOpenEnum)},
  }},
  // no aux_entries
  {{
  }},
};

::uint8_t* LaneConnection::_InternalSerialize(
    ::uint8_t* target,
    ::google::protobuf_tempo::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:TempoMapQuery.LaneConnection)
  ::uint32_t cached_has_bits = 0;
  (void)cached_has_bits;

  // int32 id = 2;
  if (this->_internal_id() != 0) {
    target = ::google::protobuf_tempo::internal::WireFormatLite::
        WriteInt32ToArrayWithField<2>(
            stream, this->_internal_id(), target);
  }

  // .TempoMapQuery.LaneRelationship relationship = 3;
  if (this->_internal_relationship() != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteEnumToArray(
        3, this->_internal_relationship(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target =
        ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
            _internal_metadata_.unknown_fields<::google::protobuf_tempo::UnknownFieldSet>(::google::protobuf_tempo::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:TempoMapQuery.LaneConnection)
  return target;
}

::size_t LaneConnection::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:TempoMapQuery.LaneConnection)
  ::size_t total_size = 0;

  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // int32 id = 2;
  if (this->_internal_id() != 0) {
    total_size += ::_pbi::WireFormatLite::Int32SizePlusOne(
        this->_internal_id());
  }

  // .TempoMapQuery.LaneRelationship relationship = 3;
  if (this->_internal_relationship() != 0) {
    total_size += 1 +
                  ::_pbi::WireFormatLite::EnumSize(this->_internal_relationship());
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::google::protobuf_tempo::Message::ClassData LaneConnection::_class_data_ = {
    LaneConnection::MergeImpl,
    nullptr,  // OnDemandRegisterArenaDtor
};
const ::google::protobuf_tempo::Message::ClassData* LaneConnection::GetClassData() const {
  return &_class_data_;
}

void LaneConnection::MergeImpl(::google::protobuf_tempo::Message& to_msg, const ::google::protobuf_tempo::Message& from_msg) {
  auto* const _this = static_cast<LaneConnection*>(&to_msg);
  auto& from = static_cast<const LaneConnection&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:TempoMapQuery.LaneConnection)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (from._internal_id() != 0) {
    _this->_internal_set_id(from._internal_id());
  }
  if (from._internal_relationship() != 0) {
    _this->_internal_set_relationship(from._internal_relationship());
  }
  _this->_internal_metadata_.MergeFrom<::google::protobuf_tempo::UnknownFieldSet>(from._internal_metadata_);
}

void LaneConnection::CopyFrom(const LaneConnection& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:TempoMapQuery.LaneConnection)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

PROTOBUF_NOINLINE bool LaneConnection::IsInitialized() const {
  return true;
}

::_pbi::CachedSize* LaneConnection::AccessCachedSize() const {
  return &_impl_._cached_size_;
}
void LaneConnection::InternalSwap(LaneConnection* PROTOBUF_RESTRICT other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  ::google::protobuf_tempo::internal::memswap<
      PROTOBUF_FIELD_OFFSET(LaneConnection, _impl_.relationship_)
      + sizeof(LaneConnection::_impl_.relationship_)
      - PROTOBUF_FIELD_OFFSET(LaneConnection, _impl_.id_)>(
          reinterpret_cast<char*>(&_impl_.id_),
          reinterpret_cast<char*>(&other->_impl_.id_));
}

::google::protobuf_tempo::Metadata LaneConnection::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_TempoMapQuery_2fMapQueries_2eproto_getter, &descriptor_table_TempoMapQuery_2fMapQueries_2eproto_once,
      file_level_metadata_TempoMapQuery_2fMapQueries_2eproto[2]);
}
// ===================================================================

class LaneData::_Internal {
 public:
};

void LaneData::clear_center_points() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _impl_.center_points_.Clear();
}
LaneData::LaneData(::google::protobuf_tempo::Arena* arena)
    : ::google::protobuf_tempo::Message(arena) {
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:TempoMapQuery.LaneData)
}
inline PROTOBUF_NDEBUG_INLINE LaneData::Impl_::Impl_(
    ::google::protobuf_tempo::internal::InternalVisibility visibility, ::google::protobuf_tempo::Arena* arena,
    const Impl_& from)
      : tags_{visibility, arena, from.tags_},
        center_points_{visibility, arena, from.center_points_},
        connections_{visibility, arena, from.connections_},
        _cached_size_{0} {}

LaneData::LaneData(
    ::google::protobuf_tempo::Arena* arena,
    const LaneData& from)
    : ::google::protobuf_tempo::Message(arena) {
  LaneData* const _this = this;
  (void)_this;
  _internal_metadata_.MergeFrom<::google::protobuf_tempo::UnknownFieldSet>(
      from._internal_metadata_);
  new (&_impl_) Impl_(internal_visibility(), arena, from._impl_);
  ::memcpy(reinterpret_cast<char *>(&_impl_) +
               offsetof(Impl_, width_),
           reinterpret_cast<const char *>(&from._impl_) +
               offsetof(Impl_, width_),
           offsetof(Impl_, id_) -
               offsetof(Impl_, width_) +
               sizeof(Impl_::id_));

  // @@protoc_insertion_point(copy_constructor:TempoMapQuery.LaneData)
}
inline PROTOBUF_NDEBUG_INLINE LaneData::Impl_::Impl_(
    ::google::protobuf_tempo::internal::InternalVisibility visibility,
    ::google::protobuf_tempo::Arena* arena)
      : tags_{visibility, arena},
        center_points_{visibility, arena},
        connections_{visibility, arena},
        _cached_size_{0} {}

inline void LaneData::SharedCtor(::_pb::Arena* arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
  ::memset(reinterpret_cast<char *>(&_impl_) +
               offsetof(Impl_, width_),
           0,
           offsetof(Impl_, id_) -
               offsetof(Impl_, width_) +
               sizeof(Impl_::id_));
}
LaneData::~LaneData() {
  // @@protoc_insertion_point(destructor:TempoMapQuery.LaneData)
  _internal_metadata_.Delete<::google::protobuf_tempo::UnknownFieldSet>();
  SharedDtor();
}
inline void LaneData::SharedDtor() {
  ABSL_DCHECK(GetArena() == nullptr);
  _impl_.~Impl_();
}

PROTOBUF_NOINLINE void LaneData::Clear() {
// @@protoc_insertion_point(message_clear_start:TempoMapQuery.LaneData)
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.tags_.Clear();
  _impl_.center_points_.Clear();
  _impl_.connections_.Clear();
  ::memset(&_impl_.width_, 0, static_cast<::size_t>(
      reinterpret_cast<char*>(&_impl_.id_) -
      reinterpret_cast<char*>(&_impl_.width_)) + sizeof(_impl_.id_));
  _internal_metadata_.Clear<::google::protobuf_tempo::UnknownFieldSet>();
}

const char* LaneData::_InternalParse(
    const char* ptr, ::_pbi::ParseContext* ctx) {
  ptr = ::_pbi::TcParser::ParseLoop(this, ptr, ctx, &_table_.header);
  return ptr;
}


PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<3, 5, 2, 35, 2> LaneData::_table_ = {
  {
    0,  // no _has_bits_
    0, // no _extensions_
    5, 56,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967264,  // skipmap
    offsetof(decltype(_table_), field_entries),
    5,  // num_field_entries
    2,  // num_aux_entries
    offsetof(decltype(_table_), aux_entries),
    &_LaneData_default_instance_._instance,
    ::_pbi::TcParser::GenericFallback,  // fallback
  }, {{
    {::_pbi::TcParser::MiniParse, {}},
    // int32 id = 1;
    {::_pbi::TcParser::SingularVarintNoZag1<::uint32_t, offsetof(LaneData, _impl_.id_), 63>(),
     {8, 63, 0, PROTOBUF_FIELD_OFFSET(LaneData, _impl_.id_)}},
    // repeated string tags = 2;
    {::_pbi::TcParser::FastUR1,
     {18, 63, 0, PROTOBUF_FIELD_OFFSET(LaneData, _impl_.tags_)}},
    // repeated .TempoScripting.Vector center_points = 3;
    {::_pbi::TcParser::FastMtR1,
     {26, 63, 0, PROTOBUF_FIELD_OFFSET(LaneData, _impl_.center_points_)}},
    // double width = 4;
    {::_pbi::TcParser::FastF64S1,
     {33, 63, 0, PROTOBUF_FIELD_OFFSET(LaneData, _impl_.width_)}},
    // repeated .TempoMapQuery.LaneConnection connections = 5;
    {::_pbi::TcParser::FastMtR1,
     {42, 63, 1, PROTOBUF_FIELD_OFFSET(LaneData, _impl_.connections_)}},
    {::_pbi::TcParser::MiniParse, {}},
    {::_pbi::TcParser::MiniParse, {}},
  }}, {{
    65535, 65535
  }}, {{
    // int32 id = 1;
    {PROTOBUF_FIELD_OFFSET(LaneData, _impl_.id_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kInt32)},
    // repeated string tags = 2;
    {PROTOBUF_FIELD_OFFSET(LaneData, _impl_.tags_), 0, 0,
    (0 | ::_fl::kFcRepeated | ::_fl::kUtf8String | ::_fl::kRepSString)},
    // repeated .TempoScripting.Vector center_points = 3;
    {PROTOBUF_FIELD_OFFSET(LaneData, _impl_.center_points_), 0, 0,
    (0 | ::_fl::kFcRepeated | ::_fl::kMessage | ::_fl::kTvTable)},
    // double width = 4;
    {PROTOBUF_FIELD_OFFSET(LaneData, _impl_.width_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kDouble)},
    // repeated .TempoMapQuery.LaneConnection connections = 5;
    {PROTOBUF_FIELD_OFFSET(LaneData, _impl_.connections_), 0, 1,
    (0 | ::_fl::kFcRepeated | ::_fl::kMessage | ::_fl::kTvTable)},
  }}, {{
    {::_pbi::TcParser::GetTable<::TempoScripting::Vector>()},
    {::_pbi::TcParser::GetTable<::TempoMapQuery::LaneConnection>()},
  }}, {{
    "\26\0\4\0\0\0\0\0"
    "TempoMapQuery.LaneData"
    "tags"
  }},
};

::uint8_t* LaneData::_InternalSerialize(
    ::uint8_t* target,
    ::google::protobuf_tempo::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:TempoMapQuery.LaneData)
  ::uint32_t cached_has_bits = 0;
  (void)cached_has_bits;

  // int32 id = 1;
  if (this->_internal_id() != 0) {
    target = ::google::protobuf_tempo::internal::WireFormatLite::
        WriteInt32ToArrayWithField<1>(
            stream, this->_internal_id(), target);
  }

  // repeated string tags = 2;
  for (int i = 0, n = this->_internal_tags_size(); i < n; ++i) {
    const auto& s = this->_internal_tags().Get(i);
    ::google::protobuf_tempo::internal::WireFormatLite::VerifyUtf8String(
        s.data(), static_cast<int>(s.length()), ::google::protobuf_tempo::internal::WireFormatLite::SERIALIZE, "TempoMapQuery.LaneData.tags");
    target = stream->WriteString(2, s, target);
  }

  // repeated .TempoScripting.Vector center_points = 3;
  for (unsigned i = 0,
      n = static_cast<unsigned>(this->_internal_center_points_size()); i < n; i++) {
    const auto& repfield = this->_internal_center_points().Get(i);
    target = ::google::protobuf_tempo::internal::WireFormatLite::
        InternalWriteMessage(3, repfield, repfield.GetCachedSize(), target, stream);
  }

  // double width = 4;
  static_assert(sizeof(::uint64_t) == sizeof(double),
                "Code assumes ::uint64_t and double are the same size.");
  double tmp_width = this->_internal_width();
  ::uint64_t raw_width;
  memcpy(&raw_width, &tmp_width, sizeof(tmp_width));
  if (raw_width != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteDoubleToArray(
        4, this->_internal_width(), target);
  }

  // repeated .TempoMapQuery.LaneConnection connections = 5;
  for (unsigned i = 0,
      n = static_cast<unsigned>(this->_internal_connections_size()); i < n; i++) {
    const auto& repfield = this->_internal_connections().Get(i);
    target = ::google::protobuf_tempo::internal::WireFormatLite::
        InternalWriteMessage(5, repfield, repfield.GetCachedSize(), target, stream);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target =
        ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
            _internal_metadata_.unknown_fields<::google::protobuf_tempo::UnknownFieldSet>(::google::protobuf_tempo::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:TempoMapQuery.LaneData)
  return target;
}

::size_t LaneData::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:TempoMapQuery.LaneData)
  ::size_t total_size = 0;

  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // repeated string tags = 2;
  total_size += 1 * ::google::protobuf_tempo::internal::FromIntSize(_internal_tags().size());
  for (int i = 0, n = _internal_tags().size(); i < n; ++i) {
    total_size += ::google::protobuf_tempo::internal::WireFormatLite::StringSize(
        _internal_tags().Get(i));
  }
  // repeated .TempoScripting.Vector center_points = 3;
  total_size += 1UL * this->_internal_center_points_size();
  for (const auto& msg : this->_internal_center_points()) {
    total_size +=
      ::google::protobuf_tempo::internal::WireFormatLite::MessageSize(msg);
  }
  // repeated .TempoMapQuery.LaneConnection connections = 5;
  total_size += 1UL * this->_internal_connections_size();
  for (const auto& msg : this->_internal_connections()) {
    total_size +=
      ::google::protobuf_tempo::internal::WireFormatLite::MessageSize(msg);
  }
  // double width = 4;
  static_assert(sizeof(::uint64_t) == sizeof(double),
                "Code assumes ::uint64_t and double are the same size.");
  double tmp_width = this->_internal_width();
  ::uint64_t raw_width;
  memcpy(&raw_width, &tmp_width, sizeof(tmp_width));
  if (raw_width != 0) {
    total_size += 9;
  }

  // int32 id = 1;
  if (this->_internal_id() != 0) {
    total_size += ::_pbi::WireFormatLite::Int32SizePlusOne(
        this->_internal_id());
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::google::protobuf_tempo::Message::ClassData LaneData::_class_data_ = {
    LaneData::MergeImpl,
    nullptr,  // OnDemandRegisterArenaDtor
};
const ::google::protobuf_tempo::Message::ClassData* LaneData::GetClassData() const {
  return &_class_data_;
}

void LaneData::MergeImpl(::google::protobuf_tempo::Message& to_msg, const ::google::protobuf_tempo::Message& from_msg) {
  auto* const _this = static_cast<LaneData*>(&to_msg);
  auto& from = static_cast<const LaneData&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:TempoMapQuery.LaneData)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  _this->_internal_mutable_tags()->MergeFrom(from._internal_tags());
  _this->_internal_mutable_center_points()->MergeFrom(
      from._internal_center_points());
  _this->_internal_mutable_connections()->MergeFrom(
      from._internal_connections());
  static_assert(sizeof(::uint64_t) == sizeof(double),
                "Code assumes ::uint64_t and double are the same size.");
  double tmp_width = from._internal_width();
  ::uint64_t raw_width;
  memcpy(&raw_width, &tmp_width, sizeof(tmp_width));
  if (raw_width != 0) {
    _this->_internal_set_width(from._internal_width());
  }
  if (from._internal_id() != 0) {
    _this->_internal_set_id(from._internal_id());
  }
  _this->_internal_metadata_.MergeFrom<::google::protobuf_tempo::UnknownFieldSet>(from._internal_metadata_);
}

void LaneData::CopyFrom(const LaneData& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:TempoMapQuery.LaneData)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

PROTOBUF_NOINLINE bool LaneData::IsInitialized() const {
  return true;
}

::_pbi::CachedSize* LaneData::AccessCachedSize() const {
  return &_impl_._cached_size_;
}
void LaneData::InternalSwap(LaneData* PROTOBUF_RESTRICT other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  _impl_.tags_.InternalSwap(&other->_impl_.tags_);
  _impl_.center_points_.InternalSwap(&other->_impl_.center_points_);
  _impl_.connections_.InternalSwap(&other->_impl_.connections_);
  ::google::protobuf_tempo::internal::memswap<
      PROTOBUF_FIELD_OFFSET(LaneData, _impl_.id_)
      + sizeof(LaneData::_impl_.id_)
      - PROTOBUF_FIELD_OFFSET(LaneData, _impl_.width_)>(
          reinterpret_cast<char*>(&_impl_.width_),
          reinterpret_cast<char*>(&other->_impl_.width_));
}

::google::protobuf_tempo::Metadata LaneData::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_TempoMapQuery_2fMapQueries_2eproto_getter, &descriptor_table_TempoMapQuery_2fMapQueries_2eproto_once,
      file_level_metadata_TempoMapQuery_2fMapQueries_2eproto[3]);
}
// ===================================================================

class LaneDataResponse::_Internal {
 public:
};

LaneDataResponse::LaneDataResponse(::google::protobuf_tempo::Arena* arena)
    : ::google::protobuf_tempo::Message(arena) {
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:TempoMapQuery.LaneDataResponse)
}
inline PROTOBUF_NDEBUG_INLINE LaneDataResponse::Impl_::Impl_(
    ::google::protobuf_tempo::internal::InternalVisibility visibility, ::google::protobuf_tempo::Arena* arena,
    const Impl_& from)
      : lanes_{visibility, arena, from.lanes_},
        _cached_size_{0} {}

LaneDataResponse::LaneDataResponse(
    ::google::protobuf_tempo::Arena* arena,
    const LaneDataResponse& from)
    : ::google::protobuf_tempo::Message(arena) {
  LaneDataResponse* const _this = this;
  (void)_this;
  _internal_metadata_.MergeFrom<::google::protobuf_tempo::UnknownFieldSet>(
      from._internal_metadata_);
  new (&_impl_) Impl_(internal_visibility(), arena, from._impl_);

  // @@protoc_insertion_point(copy_constructor:TempoMapQuery.LaneDataResponse)
}
inline PROTOBUF_NDEBUG_INLINE LaneDataResponse::Impl_::Impl_(
    ::google::protobuf_tempo::internal::InternalVisibility visibility,
    ::google::protobuf_tempo::Arena* arena)
      : lanes_{visibility, arena},
        _cached_size_{0} {}

inline void LaneDataResponse::SharedCtor(::_pb::Arena* arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
}
LaneDataResponse::~LaneDataResponse() {
  // @@protoc_insertion_point(destructor:TempoMapQuery.LaneDataResponse)
  _internal_metadata_.Delete<::google::protobuf_tempo::UnknownFieldSet>();
  SharedDtor();
}
inline void LaneDataResponse::SharedDtor() {
  ABSL_DCHECK(GetArena() == nullptr);
  _impl_.~Impl_();
}

PROTOBUF_NOINLINE void LaneDataResponse::Clear() {
// @@protoc_insertion_point(message_clear_start:TempoMapQuery.LaneDataResponse)
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.lanes_.Clear();
  _internal_metadata_.Clear<::google::protobuf_tempo::UnknownFieldSet>();
}

const char* LaneDataResponse::_InternalParse(
    const char* ptr, ::_pbi::ParseContext* ctx) {
  ptr = ::_pbi::TcParser::ParseLoop(this, ptr, ctx, &_table_.header);
  return ptr;
}


PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<0, 1, 1, 0, 2> LaneDataResponse::_table_ = {
  {
    0,  // no _has_bits_
    0, // no _extensions_
    1, 0,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967294,  // skipmap
    offsetof(decltype(_table_), field_entries),
    1,  // num_field_entries
    1,  // num_aux_entries
    offsetof(decltype(_table_), aux_entries),
    &_LaneDataResponse_default_instance_._instance,
    ::_pbi::TcParser::GenericFallback,  // fallback
  }, {{
    // repeated .TempoMapQuery.LaneData lanes = 1;
    {::_pbi::TcParser::FastMtR1,
     {10, 63, 0, PROTOBUF_FIELD_OFFSET(LaneDataResponse, _impl_.lanes_)}},
  }}, {{
    65535, 65535
  }}, {{
    // repeated .TempoMapQuery.LaneData lanes = 1;
    {PROTOBUF_FIELD_OFFSET(LaneDataResponse, _impl_.lanes_), 0, 0,
    (0 | ::_fl::kFcRepeated | ::_fl::kMessage | ::_fl::kTvTable)},
  }}, {{
    {::_pbi::TcParser::GetTable<::TempoMapQuery::LaneData>()},
  }}, {{
  }},
};

::uint8_t* LaneDataResponse::_InternalSerialize(
    ::uint8_t* target,
    ::google::protobuf_tempo::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:TempoMapQuery.LaneDataResponse)
  ::uint32_t cached_has_bits = 0;
  (void)cached_has_bits;

  // repeated .TempoMapQuery.LaneData lanes = 1;
  for (unsigned i = 0,
      n = static_cast<unsigned>(this->_internal_lanes_size()); i < n; i++) {
    const auto& repfield = this->_internal_lanes().Get(i);
    target = ::google::protobuf_tempo::internal::WireFormatLite::
        InternalWriteMessage(1, repfield, repfield.GetCachedSize(), target, stream);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target =
        ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
            _internal_metadata_.unknown_fields<::google::protobuf_tempo::UnknownFieldSet>(::google::protobuf_tempo::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:TempoMapQuery.LaneDataResponse)
  return target;
}

::size_t LaneDataResponse::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:TempoMapQuery.LaneDataResponse)
  ::size_t total_size = 0;

  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // repeated .TempoMapQuery.LaneData lanes = 1;
  total_size += 1UL * this->_internal_lanes_size();
  for (const auto& msg : this->_internal_lanes()) {
    total_size +=
      ::google::protobuf_tempo::internal::WireFormatLite::MessageSize(msg);
  }
  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::google::protobuf_tempo::Message::ClassData LaneDataResponse::_class_data_ = {
    LaneDataResponse::MergeImpl,
    nullptr,  // OnDemandRegisterArenaDtor
};
const ::google::protobuf_tempo::Message::ClassData* LaneDataResponse::GetClassData() const {
  return &_class_data_;
}

void LaneDataResponse::MergeImpl(::google::protobuf_tempo::Message& to_msg, const ::google::protobuf_tempo::Message& from_msg) {
  auto* const _this = static_cast<LaneDataResponse*>(&to_msg);
  auto& from = static_cast<const LaneDataResponse&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:TempoMapQuery.LaneDataResponse)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  _this->_internal_mutable_lanes()->MergeFrom(
      from._internal_lanes());
  _this->_internal_metadata_.MergeFrom<::google::protobuf_tempo::UnknownFieldSet>(from._internal_metadata_);
}

void LaneDataResponse::CopyFrom(const LaneDataResponse& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:TempoMapQuery.LaneDataResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

PROTOBUF_NOINLINE bool LaneDataResponse::IsInitialized() const {
  return true;
}

::_pbi::CachedSize* LaneDataResponse::AccessCachedSize() const {
  return &_impl_._cached_size_;
}
void LaneDataResponse::InternalSwap(LaneDataResponse* PROTOBUF_RESTRICT other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  _impl_.lanes_.InternalSwap(&other->_impl_.lanes_);
}

::google::protobuf_tempo::Metadata LaneDataResponse::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_TempoMapQuery_2fMapQueries_2eproto_getter, &descriptor_table_TempoMapQuery_2fMapQueries_2eproto_once,
      file_level_metadata_TempoMapQuery_2fMapQueries_2eproto[4]);
}
// ===================================================================

class ZoneDataRequest::_Internal {
 public:
  using HasBits = decltype(std::declval<ZoneDataRequest>()._impl_._has_bits_);
  static constexpr ::int32_t kHasBitsOffset =
    8 * PROTOBUF_FIELD_OFFSET(ZoneDataRequest, _impl_._has_bits_);
  static const ::TempoMapQuery::TagFilter& tag_filter(const ZoneDataRequest* msg);
  static void set_has_tag_filter(HasBits* has_bits) {
    (*has_bits)[0] |= 1u;
  }
  static const ::TempoScripting::Vector& center(const ZoneDataRequest* msg);
  static void set_has_center(HasBits* has_bits) {
    (*has_bits)[0] |= 2u;
  }
};

const ::TempoMapQuery::TagFilter& ZoneDataRequest::_Internal::tag_filter(const ZoneDataRequest* msg) {
  return *msg->_impl_.tag_filter_;
}
const ::TempoScripting::Vector& ZoneDataRequest::_Internal::center(const ZoneDataRequest* msg) {
  return *msg->_impl_.center_;
}
void ZoneDataRequest::clear_center() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  if (_impl_.center_ != nullptr) _impl_.center_->Clear();
  _impl_._has_bits_[0] &= ~0x00000002u;
}
ZoneDataRequest::ZoneDataRequest(::google::protobuf_tempo::Arena* arena)
    : ::google::protobuf_tempo::Message(arena) {
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:TempoMapQuery.ZoneDataRequest)
}
inline PROTOBUF_NDEBUG_INLINE ZoneDataRequest::Impl_::Impl_(
    ::google::protobuf_tempo::internal::InternalVisibility visibility, ::google::protobuf_tempo::Arena* arena,
    const Impl_& from)
      : _has_bits_{from._has_bits_},
        _cached_size_{0} {}

ZoneDataRequest::ZoneDataRequest(
    ::google::protobuf_tempo::Arena* arena,
    const ZoneDataRequest& from)
    : ::google::protobuf_tempo::Message(arena) {
  ZoneDataRequest* const _this = this;
  (void)_this;
  _internal_metadata_.MergeFrom<::google::protobuf_tempo::UnknownFieldSet>(
      from._internal_metadata_);
  new (&_impl_) Impl_(internal_visibility(), arena, from._impl_);
  ::uint32_t cached_has_bits = _impl_._has_bits_[0];
  _impl_.tag_filter_ = (cached_has_bits & 0x00000001u)
                ? CreateMaybeMessage<::TempoMapQuery::TagFilter>(arena, *from._impl_.tag_filter_)
                : nullptr;
  _impl_.center_ = (cached_has_bits & 0x00000002u)
                ? CreateMaybeMessage<::TempoScripting::Vector>(arena, *from._impl_.center_)
                : nullptr;
  _impl_.radius_ = from._impl_.radius_;

  // @@protoc_insertion_point(copy_constructor:TempoMapQuery.ZoneDataRequest)
}
inline PROTOBUF_NDEBUG_INLINE ZoneDataRequest::Impl_::Impl_(
    ::google::protobuf_tempo::internal::InternalVisibility visibility,
    ::google::protobuf_tempo::Arena* arena)
      : _cached_size_{0} {}

inline void ZoneDataRequest::SharedCtor(::_pb::Arena* arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
  ::memset(reinterpret_cast<char *>(&_impl_) +
               offsetof(Impl_, tag_filter_),
           0,
           offsetof(Impl_, radius_) -
               offsetof(Impl_, tag_filter_) +
               sizeof(Impl_::radius_));
}
ZoneDataRequest::~ZoneDataRequest() {
  // @@protoc_insertion_point(destructor:TempoMapQuery.ZoneDataRequest)
  _internal_metadata_.Delete<::google::protobuf_tempo::UnknownFieldSet>();
  SharedDtor();
}
inline void ZoneDataRequest::SharedDtor() {
  ABSL_DCHECK(GetArena() == nullptr);
  delete _impl_.tag_filter_;
  delete _impl_.center_;
  _impl_.~Impl_();
}

PROTOBUF_NOINLINE void ZoneDataRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:TempoMapQuery.ZoneDataRequest)
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x00000003u) {
    if (cached_has_bits & 0x00000001u) {
      ABSL_DCHECK(_impl_.tag_filter_ != nullptr);
      _impl_.tag_filter_->Clear();
    }
    if (cached_has_bits & 0x00000002u) {
      ABSL_DCHECK(_impl_.center_ != nullptr);
      _impl_.center_->Clear();
    }
  }
  _impl_.radius_ = 0;
  _impl_._has_bits_.Clear();
  _internal_metadata_.Clear<::google::protobuf_tempo::UnknownFieldSet>();
}

const char* ZoneDataRequest::_InternalParse(
    const char* ptr, ::_pbi::ParseContext* ctx) {
  ptr = ::_pbi::TcParser::ParseLoop(this, ptr, ctx, &_table_.header);
  return ptr;
}


PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<2, 3, 2, 0, 2> ZoneDataRequest::_table_ = {
  {
    PROTOBUF_FIELD_OFFSET(ZoneDataRequest, _impl_._has_bits_),
    0, // no _extensions_
    3, 24,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967288,  // skipmap
    offsetof(decltype(_table_), field_entries),
    3,  // num_field_entries
    2,  // num_aux_entries
    offsetof(decltype(_table_), aux_entries),
    &_ZoneDataRequest_default_instance_._instance,
    ::_pbi::TcParser::GenericFallback,  // fallback
  }, {{
    {::_pbi::TcParser::MiniParse, {}},
    // .TempoMapQuery.TagFilter tag_filter = 1;
    {::_pbi::TcParser::FastMtS1,
     {10, 0, 0, PROTOBUF_FIELD_OFFSET(ZoneDataRequest, _impl_.tag_filter_)}},
    // .TempoScripting.Vector center = 2;
    {::_pbi::TcParser::FastMtS1,
     {18, 1, 1, PROTOBUF_FIELD_OFFSET(ZoneDataRequest, _impl_.center_)}},
    // double radius = 3;
    {::_pbi::TcParser::FastF64S1,
     {25, 63, 0, PROTOBUF_FIELD_OFFSET(ZoneDataRequest, _impl_.radius_)}},
  }}, {{
    65535, 65535
  }}, {{
    // .TempoMapQuery.TagFilter tag_filter = 1;
    {PROTOBUF_FIELD_OFFSET(ZoneDataRequest, _impl_.tag_filter_), _Internal::kHasBitsOffset + 0, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kMessage | ::_fl::kTvTable)},
    // .TempoScripting.Vector center = 2;
    {PROTOBUF_FIELD_OFFSET(ZoneDataRequest, _impl_.center_), _Internal::kHasBitsOffset + 1, 1,
    (0 | ::_fl::kFcOptional | ::_fl::kMessage | ::_fl::kTvTable)},
    // double radius = 3;
    {PROTOBUF_FIELD_OFFSET(ZoneDataRequest, _impl_.radius_), -1, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kDouble)},
  }}, {{
    {::_pbi::TcParser::GetTable<::TempoMapQuery::TagFilter>()},
    {::_pbi::TcParser::GetTable<::TempoScripting::Vector>()},
  }}, {{
  }},
};

::uint8_t* ZoneDataRequest::_InternalSerialize(
    ::uint8_t* target,
    ::google::protobuf_tempo::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:TempoMapQuery.ZoneDataRequest)
  ::uint32_t cached_has_bits = 0;
  (void)cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  // .TempoMapQuery.TagFilter tag_filter = 1;
  if (cached_has_bits & 0x00000001u) {
    target = ::google::protobuf_tempo::internal::WireFormatLite::InternalWriteMessage(
        1, _Internal::tag_filter(this),
        _Internal::tag_filter(this).GetCachedSize(), target, stream);
  }

  // .TempoScripting.Vector center = 2;
  if (cached_has_bits & 0x00000002u) {
    target = ::google::protobuf_tempo::internal::WireFormatLite::InternalWriteMessage(
        2, _Internal::center(this),
        _Internal::center(this).GetCachedSize(), target, stream);
  }

  // double radius = 3;
  static_assert(sizeof(::uint64_t) == sizeof(double),
                "Code assumes ::uint64_t and double are the same size.");
  double tmp_radius = this->_internal_radius();
  ::uint64_t raw_radius;
  memcpy(&raw_radius, &tmp_radius, sizeof(tmp_radius));
  if (raw_radius != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteDoubleToArray(
        3, this->_internal_radius(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target =
        ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
            _internal_metadata_.unknown_fields<::google::protobuf_tempo::UnknownFieldSet>(::google::protobuf_tempo::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:TempoMapQuery.ZoneDataRequest)
  return target;
}

::size_t ZoneDataRequest::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:TempoMapQuery.ZoneDataRequest)
  ::size_t total_size = 0;

  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x00000003u) {
    // .TempoMapQuery.TagFilter tag_filter = 1;
    if (cached_has_bits & 0x00000001u) {
      total_size +=
          1 + ::google::protobuf_tempo::internal::WireFormatLite::MessageSize(*_impl_.tag_filter_);
    }

    // .TempoScripting.Vector center = 2;
    if (cached_has_bits & 0x00000002u) {
      total_size +=
          1 + ::google::protobuf_tempo::internal::WireFormatLite::MessageSize(*_impl_.center_);
    }

  }
  // double radius = 3;
  static_assert(sizeof(::uint64_t) == sizeof(double),
                "Code assumes ::uint64_t and double are the same size.");
  double tmp_radius = this->_internal_radius();
  ::uint64_t raw_radius;
  memcpy(&raw_radius, &tmp_radius, sizeof(tmp_radius));
  if (raw_radius != 0) {
    total_size += 9;
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::google::protobuf_tempo::Message::ClassData ZoneDataRequest::_class_data_ = {
    ZoneDataRequest::MergeImpl,
    nullptr,  // OnDemandRegisterArenaDtor
};
const ::google::protobuf_tempo::Message::ClassData* ZoneDataRequest::GetClassData() const {
  return &_class_data_;
}

void ZoneDataRequest::MergeImpl(::google::protobuf_tempo::Message& to_msg, const ::google::protobuf_tempo::Message& from_msg) {
  auto* const _this = static_cast<ZoneDataRequest*>(&to_msg);
  auto& from = static_cast<const ZoneDataRequest&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:TempoMapQuery.ZoneDataRequest)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._impl_._has_bits_[0];
  if (cached_has_bits & 0x00000003u) {
    if (cached_has_bits & 0x00000001u) {
      _this->_internal_mutable_tag_filter()->::TempoMapQuery::TagFilter::MergeFrom(
          from._internal_tag_filter());
    }
    if (cached_has_bits & 0x00000002u) {
      _this->_internal_mutable_center()->::TempoScripting::Vector::MergeFrom(
          from._internal_center());
    }
  }
  static_assert(sizeof(::uint64_t) == sizeof(double),
                "Code assumes ::uint64_t and double are the same size.");
  double tmp_radius = from._internal_radius();
  ::uint64_t raw_radius;
  memcpy(&raw_radius, &tmp_radius, sizeof(tmp_radius));
  if (raw_radius != 0) {
    _this->_internal_set_radius(from._internal_radius());
  }
  _this->_internal_metadata_.MergeFrom<::google::protobuf_tempo::UnknownFieldSet>(from._internal_metadata_);
}

void ZoneDataRequest::CopyFrom(const ZoneDataRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:TempoMapQuery.ZoneDataRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

PROTOBUF_NOINLINE bool ZoneDataRequest::IsInitialized() const {
  return true;
}

::_pbi::CachedSize* ZoneDataRequest::AccessCachedSize() const {
  return &_impl_._cached_size_;
}
void ZoneDataRequest::InternalSwap(ZoneDataRequest* PROTOBUF_RESTRICT other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_._has_bits_[0], other->_impl_._has_bits_[0]);
  ::google::protobuf_tempo::internal::memswap<
      PROTOBUF_FIELD_OFFSET(ZoneDataRequest, _impl_.radius_)
      + sizeof(ZoneDataRequest::_impl_.radius_)
      - PROTOBUF_FIELD_OFFSET(ZoneDataRequest, _impl_.tag_filter_)>(
          reinterpret_cast<char*>(&_impl_.tag_filter_),
          reinterpret_cast<char*>(&other->_impl_.tag_filter_));
}

::google::protobuf_tempo::Metadata ZoneDataRequest::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_TempoMapQuery_2fMapQueries_2eproto_getter, &descriptor_table_TempoMapQuery_2fMapQueries_2eproto_once,
      file_level_metadata_TempoMapQuery_2fMapQueries_2eproto[5]);
}
// ===================================================================

class ZoneConnection::_Internal {
 public:
};

ZoneConnection::ZoneConnection(::google::protobuf_tempo::Arena* arena)
    : ::google::protobuf_tempo::Message(arena) {
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:TempoMapQuery.ZoneConnection)
}
ZoneConnection::ZoneConnection(
    ::google::protobuf_tempo::Arena* arena, const ZoneConnection& from)
    : ZoneConnection(arena) {
  MergeFrom(from);
}
inline PROTOBUF_NDEBUG_INLINE ZoneConnection::Impl_::Impl_(
    ::google::protobuf_tempo::internal::InternalVisibility visibility,
    ::google::protobuf_tempo::Arena* arena)
      : _cached_size_{0} {}

inline void ZoneConnection::SharedCtor(::_pb::Arena* arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
  _impl_.id_ = {};
}
ZoneConnection::~ZoneConnection() {
  // @@protoc_insertion_point(destructor:TempoMapQuery.ZoneConnection)
  _internal_metadata_.Delete<::google::protobuf_tempo::UnknownFieldSet>();
  SharedDtor();
}
inline void ZoneConnection::SharedDtor() {
  ABSL_DCHECK(GetArena() == nullptr);
  _impl_.~Impl_();
}

PROTOBUF_NOINLINE void ZoneConnection::Clear() {
// @@protoc_insertion_point(message_clear_start:TempoMapQuery.ZoneConnection)
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.id_ = 0;
  _internal_metadata_.Clear<::google::protobuf_tempo::UnknownFieldSet>();
}

const char* ZoneConnection::_InternalParse(
    const char* ptr, ::_pbi::ParseContext* ctx) {
  ptr = ::_pbi::TcParser::ParseLoop(this, ptr, ctx, &_table_.header);
  return ptr;
}


PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<0, 1, 0, 0, 2> ZoneConnection::_table_ = {
  {
    0,  // no _has_bits_
    0, // no _extensions_
    1, 0,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967294,  // skipmap
    offsetof(decltype(_table_), field_entries),
    1,  // num_field_entries
    0,  // num_aux_entries
    offsetof(decltype(_table_), field_names),  // no aux_entries
    &_ZoneConnection_default_instance_._instance,
    ::_pbi::TcParser::GenericFallback,  // fallback
  }, {{
    // int32 id = 1;
    {::_pbi::TcParser::SingularVarintNoZag1<::uint32_t, offsetof(ZoneConnection, _impl_.id_), 63>(),
     {8, 63, 0, PROTOBUF_FIELD_OFFSET(ZoneConnection, _impl_.id_)}},
  }}, {{
    65535, 65535
  }}, {{
    // int32 id = 1;
    {PROTOBUF_FIELD_OFFSET(ZoneConnection, _impl_.id_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kInt32)},
  }},
  // no aux_entries
  {{
  }},
};

::uint8_t* ZoneConnection::_InternalSerialize(
    ::uint8_t* target,
    ::google::protobuf_tempo::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:TempoMapQuery.ZoneConnection)
  ::uint32_t cached_has_bits = 0;
  (void)cached_has_bits;

  // int32 id = 1;
  if (this->_internal_id() != 0) {
    target = ::google::protobuf_tempo::internal::WireFormatLite::
        WriteInt32ToArrayWithField<1>(
            stream, this->_internal_id(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target =
        ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
            _internal_metadata_.unknown_fields<::google::protobuf_tempo::UnknownFieldSet>(::google::protobuf_tempo::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:TempoMapQuery.ZoneConnection)
  return target;
}

::size_t ZoneConnection::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:TempoMapQuery.ZoneConnection)
  ::size_t total_size = 0;

  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // int32 id = 1;
  if (this->_internal_id() != 0) {
    total_size += ::_pbi::WireFormatLite::Int32SizePlusOne(
        this->_internal_id());
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::google::protobuf_tempo::Message::ClassData ZoneConnection::_class_data_ = {
    ZoneConnection::MergeImpl,
    nullptr,  // OnDemandRegisterArenaDtor
};
const ::google::protobuf_tempo::Message::ClassData* ZoneConnection::GetClassData() const {
  return &_class_data_;
}

void ZoneConnection::MergeImpl(::google::protobuf_tempo::Message& to_msg, const ::google::protobuf_tempo::Message& from_msg) {
  auto* const _this = static_cast<ZoneConnection*>(&to_msg);
  auto& from = static_cast<const ZoneConnection&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:TempoMapQuery.ZoneConnection)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (from._internal_id() != 0) {
    _this->_internal_set_id(from._internal_id());
  }
  _this->_internal_metadata_.MergeFrom<::google::protobuf_tempo::UnknownFieldSet>(from._internal_metadata_);
}

void ZoneConnection::CopyFrom(const ZoneConnection& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:TempoMapQuery.ZoneConnection)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

PROTOBUF_NOINLINE bool ZoneConnection::IsInitialized() const {
  return true;
}

::_pbi::CachedSize* ZoneConnection::AccessCachedSize() const {
  return &_impl_._cached_size_;
}
void ZoneConnection::InternalSwap(ZoneConnection* PROTOBUF_RESTRICT other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
        swap(_impl_.id_, other->_impl_.id_);
}

::google::protobuf_tempo::Metadata ZoneConnection::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_TempoMapQuery_2fMapQueries_2eproto_getter, &descriptor_table_TempoMapQuery_2fMapQueries_2eproto_once,
      file_level_metadata_TempoMapQuery_2fMapQueries_2eproto[6]);
}
// ===================================================================

class ZoneData::_Internal {
 public:
};

void ZoneData::clear_boundary_points() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _impl_.boundary_points_.Clear();
}
ZoneData::ZoneData(::google::protobuf_tempo::Arena* arena)
    : ::google::protobuf_tempo::Message(arena) {
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:TempoMapQuery.ZoneData)
}
inline PROTOBUF_NDEBUG_INLINE ZoneData::Impl_::Impl_(
    ::google::protobuf_tempo::internal::InternalVisibility visibility, ::google::protobuf_tempo::Arena* arena,
    const Impl_& from)
      : tags_{visibility, arena, from.tags_},
        boundary_points_{visibility, arena, from.boundary_points_},
        connections_{visibility, arena, from.connections_},
        _cached_size_{0} {}

ZoneData::ZoneData(
    ::google::protobuf_tempo::Arena* arena,
    const ZoneData& from)
    : ::google::protobuf_tempo::Message(arena) {
  ZoneData* const _this = this;
  (void)_this;
  _internal_metadata_.MergeFrom<::google::protobuf_tempo::UnknownFieldSet>(
      from._internal_metadata_);
  new (&_impl_) Impl_(internal_visibility(), arena, from._impl_);
  _impl_.id_ = from._impl_.id_;

  // @@protoc_insertion_point(copy_constructor:TempoMapQuery.ZoneData)
}
inline PROTOBUF_NDEBUG_INLINE ZoneData::Impl_::Impl_(
    ::google::protobuf_tempo::internal::InternalVisibility visibility,
    ::google::protobuf_tempo::Arena* arena)
      : tags_{visibility, arena},
        boundary_points_{visibility, arena},
        connections_{visibility, arena},
        _cached_size_{0} {}

inline void ZoneData::SharedCtor(::_pb::Arena* arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
  _impl_.id_ = {};
}
ZoneData::~ZoneData() {
  // @@protoc_insertion_point(destructor:TempoMapQuery.ZoneData)
  _internal_metadata_.Delete<::google::protobuf_tempo::UnknownFieldSet>();
  SharedDtor();
}
inline void ZoneData::SharedDtor() {
  ABSL_DCHECK(GetArena() == nullptr);
  _impl_.~Impl_();
}

PROTOBUF_NOINLINE void ZoneData::Clear() {
// @@protoc_insertion_point(message_clear_start:TempoMapQuery.ZoneData)
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.tags_.Clear();
  _impl_.boundary_points_.Clear();
  _impl_.connections_.Clear();
  _impl_.id_ = 0;
  _internal_metadata_.Clear<::google::protobuf_tempo::UnknownFieldSet>();
}

const char* ZoneData::_InternalParse(
    const char* ptr, ::_pbi::ParseContext* ctx) {
  ptr = ::_pbi::TcParser::ParseLoop(this, ptr, ctx, &_table_.header);
  return ptr;
}


PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<3, 4, 2, 35, 2> ZoneData::_table_ = {
  {
    0,  // no _has_bits_
    0, // no _extensions_
    5, 56,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967268,  // skipmap
    offsetof(decltype(_table_), field_entries),
    4,  // num_field_entries
    2,  // num_aux_entries
    offsetof(decltype(_table_), aux_entries),
    &_ZoneData_default_instance_._instance,
    ::_pbi::TcParser::GenericFallback,  // fallback
  }, {{
    {::_pbi::TcParser::MiniParse, {}},
    // int32 id = 1;
    {::_pbi::TcParser::SingularVarintNoZag1<::uint32_t, offsetof(ZoneData, _impl_.id_), 63>(),
     {8, 63, 0, PROTOBUF_FIELD_OFFSET(ZoneData, _impl_.id_)}},
    // repeated string tags = 2;
    {::_pbi::TcParser::FastUR1,
     {18, 63, 0, PROTOBUF_FIELD_OFFSET(ZoneData, _impl_.tags_)}},
    {::_pbi::TcParser::MiniParse, {}},
    // repeated .TempoScripting.Vector boundary_points = 4;
    {::_pbi::TcParser::FastMtR1,
     {34, 63, 0, PROTOBUF_FIELD_OFFSET(ZoneData, _impl_.boundary_points_)}},
    // repeated .TempoMapQuery.ZoneConnection connections = 5;
    {::_pbi::TcParser::FastMtR1,
     {42, 63, 1, PROTOBUF_FIELD_OFFSET(ZoneData, _impl_.connections_)}},
    {::_pbi::TcParser::MiniParse, {}},
    {::_pbi::TcParser::MiniParse, {}},
  }}, {{
    65535, 65535
  }}, {{
    // int32 id = 1;
    {PROTOBUF_FIELD_OFFSET(ZoneData, _impl_.id_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kInt32)},
    // repeated string tags = 2;
    {PROTOBUF_FIELD_OFFSET(ZoneData, _impl_.tags_), 0, 0,
    (0 | ::_fl::kFcRepeated | ::_fl::kUtf8String | ::_fl::kRepSString)},
    // repeated .TempoScripting.Vector boundary_points = 4;
    {PROTOBUF_FIELD_OFFSET(ZoneData, _impl_.boundary_points_), 0, 0,
    (0 | ::_fl::kFcRepeated | ::_fl::kMessage | ::_fl::kTvTable)},
    // repeated .TempoMapQuery.ZoneConnection connections = 5;
    {PROTOBUF_FIELD_OFFSET(ZoneData, _impl_.connections_), 0, 1,
    (0 | ::_fl::kFcRepeated | ::_fl::kMessage | ::_fl::kTvTable)},
  }}, {{
    {::_pbi::TcParser::GetTable<::TempoScripting::Vector>()},
    {::_pbi::TcParser::GetTable<::TempoMapQuery::ZoneConnection>()},
  }}, {{
    "\26\0\4\0\0\0\0\0"
    "TempoMapQuery.ZoneData"
    "tags"
  }},
};

::uint8_t* ZoneData::_InternalSerialize(
    ::uint8_t* target,
    ::google::protobuf_tempo::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:TempoMapQuery.ZoneData)
  ::uint32_t cached_has_bits = 0;
  (void)cached_has_bits;

  // int32 id = 1;
  if (this->_internal_id() != 0) {
    target = ::google::protobuf_tempo::internal::WireFormatLite::
        WriteInt32ToArrayWithField<1>(
            stream, this->_internal_id(), target);
  }

  // repeated string tags = 2;
  for (int i = 0, n = this->_internal_tags_size(); i < n; ++i) {
    const auto& s = this->_internal_tags().Get(i);
    ::google::protobuf_tempo::internal::WireFormatLite::VerifyUtf8String(
        s.data(), static_cast<int>(s.length()), ::google::protobuf_tempo::internal::WireFormatLite::SERIALIZE, "TempoMapQuery.ZoneData.tags");
    target = stream->WriteString(2, s, target);
  }

  // repeated .TempoScripting.Vector boundary_points = 4;
  for (unsigned i = 0,
      n = static_cast<unsigned>(this->_internal_boundary_points_size()); i < n; i++) {
    const auto& repfield = this->_internal_boundary_points().Get(i);
    target = ::google::protobuf_tempo::internal::WireFormatLite::
        InternalWriteMessage(4, repfield, repfield.GetCachedSize(), target, stream);
  }

  // repeated .TempoMapQuery.ZoneConnection connections = 5;
  for (unsigned i = 0,
      n = static_cast<unsigned>(this->_internal_connections_size()); i < n; i++) {
    const auto& repfield = this->_internal_connections().Get(i);
    target = ::google::protobuf_tempo::internal::WireFormatLite::
        InternalWriteMessage(5, repfield, repfield.GetCachedSize(), target, stream);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target =
        ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
            _internal_metadata_.unknown_fields<::google::protobuf_tempo::UnknownFieldSet>(::google::protobuf_tempo::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:TempoMapQuery.ZoneData)
  return target;
}

::size_t ZoneData::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:TempoMapQuery.ZoneData)
  ::size_t total_size = 0;

  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // repeated string tags = 2;
  total_size += 1 * ::google::protobuf_tempo::internal::FromIntSize(_internal_tags().size());
  for (int i = 0, n = _internal_tags().size(); i < n; ++i) {
    total_size += ::google::protobuf_tempo::internal::WireFormatLite::StringSize(
        _internal_tags().Get(i));
  }
  // repeated .TempoScripting.Vector boundary_points = 4;
  total_size += 1UL * this->_internal_boundary_points_size();
  for (const auto& msg : this->_internal_boundary_points()) {
    total_size +=
      ::google::protobuf_tempo::internal::WireFormatLite::MessageSize(msg);
  }
  // repeated .TempoMapQuery.ZoneConnection connections = 5;
  total_size += 1UL * this->_internal_connections_size();
  for (const auto& msg : this->_internal_connections()) {
    total_size +=
      ::google::protobuf_tempo::internal::WireFormatLite::MessageSize(msg);
  }
  // int32 id = 1;
  if (this->_internal_id() != 0) {
    total_size += ::_pbi::WireFormatLite::Int32SizePlusOne(
        this->_internal_id());
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::google::protobuf_tempo::Message::ClassData ZoneData::_class_data_ = {
    ZoneData::MergeImpl,
    nullptr,  // OnDemandRegisterArenaDtor
};
const ::google::protobuf_tempo::Message::ClassData* ZoneData::GetClassData() const {
  return &_class_data_;
}

void ZoneData::MergeImpl(::google::protobuf_tempo::Message& to_msg, const ::google::protobuf_tempo::Message& from_msg) {
  auto* const _this = static_cast<ZoneData*>(&to_msg);
  auto& from = static_cast<const ZoneData&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:TempoMapQuery.ZoneData)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  _this->_internal_mutable_tags()->MergeFrom(from._internal_tags());
  _this->_internal_mutable_boundary_points()->MergeFrom(
      from._internal_boundary_points());
  _this->_internal_mutable_connections()->MergeFrom(
      from._internal_connections());
  if (from._internal_id() != 0) {
    _this->_internal_set_id(from._internal_id());
  }
  _this->_internal_metadata_.MergeFrom<::google::protobuf_tempo::UnknownFieldSet>(from._internal_metadata_);
}

void ZoneData::CopyFrom(const ZoneData& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:TempoMapQuery.ZoneData)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

PROTOBUF_NOINLINE bool ZoneData::IsInitialized() const {
  return true;
}

::_pbi::CachedSize* ZoneData::AccessCachedSize() const {
  return &_impl_._cached_size_;
}
void ZoneData::InternalSwap(ZoneData* PROTOBUF_RESTRICT other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  _impl_.tags_.InternalSwap(&other->_impl_.tags_);
  _impl_.boundary_points_.InternalSwap(&other->_impl_.boundary_points_);
  _impl_.connections_.InternalSwap(&other->_impl_.connections_);
        swap(_impl_.id_, other->_impl_.id_);
}

::google::protobuf_tempo::Metadata ZoneData::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_TempoMapQuery_2fMapQueries_2eproto_getter, &descriptor_table_TempoMapQuery_2fMapQueries_2eproto_once,
      file_level_metadata_TempoMapQuery_2fMapQueries_2eproto[7]);
}
// ===================================================================

class ZoneDataResponse::_Internal {
 public:
};

ZoneDataResponse::ZoneDataResponse(::google::protobuf_tempo::Arena* arena)
    : ::google::protobuf_tempo::Message(arena) {
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:TempoMapQuery.ZoneDataResponse)
}
inline PROTOBUF_NDEBUG_INLINE ZoneDataResponse::Impl_::Impl_(
    ::google::protobuf_tempo::internal::InternalVisibility visibility, ::google::protobuf_tempo::Arena* arena,
    const Impl_& from)
      : zones_{visibility, arena, from.zones_},
        _cached_size_{0} {}

ZoneDataResponse::ZoneDataResponse(
    ::google::protobuf_tempo::Arena* arena,
    const ZoneDataResponse& from)
    : ::google::protobuf_tempo::Message(arena) {
  ZoneDataResponse* const _this = this;
  (void)_this;
  _internal_metadata_.MergeFrom<::google::protobuf_tempo::UnknownFieldSet>(
      from._internal_metadata_);
  new (&_impl_) Impl_(internal_visibility(), arena, from._impl_);

  // @@protoc_insertion_point(copy_constructor:TempoMapQuery.ZoneDataResponse)
}
inline PROTOBUF_NDEBUG_INLINE ZoneDataResponse::Impl_::Impl_(
    ::google::protobuf_tempo::internal::InternalVisibility visibility,
    ::google::protobuf_tempo::Arena* arena)
      : zones_{visibility, arena},
        _cached_size_{0} {}

inline void ZoneDataResponse::SharedCtor(::_pb::Arena* arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
}
ZoneDataResponse::~ZoneDataResponse() {
  // @@protoc_insertion_point(destructor:TempoMapQuery.ZoneDataResponse)
  _internal_metadata_.Delete<::google::protobuf_tempo::UnknownFieldSet>();
  SharedDtor();
}
inline void ZoneDataResponse::SharedDtor() {
  ABSL_DCHECK(GetArena() == nullptr);
  _impl_.~Impl_();
}

PROTOBUF_NOINLINE void ZoneDataResponse::Clear() {
// @@protoc_insertion_point(message_clear_start:TempoMapQuery.ZoneDataResponse)
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.zones_.Clear();
  _internal_metadata_.Clear<::google::protobuf_tempo::UnknownFieldSet>();
}

const char* ZoneDataResponse::_InternalParse(
    const char* ptr, ::_pbi::ParseContext* ctx) {
  ptr = ::_pbi::TcParser::ParseLoop(this, ptr, ctx, &_table_.header);
  return ptr;
}


PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<0, 1, 1, 0, 2> ZoneDataResponse::_table_ = {
  {
    0,  // no _has_bits_
    0, // no _extensions_
    1, 0,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967294,  // skipmap
    offsetof(decltype(_table_), field_entries),
    1,  // num_field_entries
    1,  // num_aux_entries
    offsetof(decltype(_table_), aux_entries),
    &_ZoneDataResponse_default_instance_._instance,
    ::_pbi::TcParser::GenericFallback,  // fallback
  }, {{
    // repeated .TempoMapQuery.ZoneData zones = 1;
    {::_pbi::TcParser::FastMtR1,
     {10, 63, 0, PROTOBUF_FIELD_OFFSET(ZoneDataResponse, _impl_.zones_)}},
  }}, {{
    65535, 65535
  }}, {{
    // repeated .TempoMapQuery.ZoneData zones = 1;
    {PROTOBUF_FIELD_OFFSET(ZoneDataResponse, _impl_.zones_), 0, 0,
    (0 | ::_fl::kFcRepeated | ::_fl::kMessage | ::_fl::kTvTable)},
  }}, {{
    {::_pbi::TcParser::GetTable<::TempoMapQuery::ZoneData>()},
  }}, {{
  }},
};

::uint8_t* ZoneDataResponse::_InternalSerialize(
    ::uint8_t* target,
    ::google::protobuf_tempo::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:TempoMapQuery.ZoneDataResponse)
  ::uint32_t cached_has_bits = 0;
  (void)cached_has_bits;

  // repeated .TempoMapQuery.ZoneData zones = 1;
  for (unsigned i = 0,
      n = static_cast<unsigned>(this->_internal_zones_size()); i < n; i++) {
    const auto& repfield = this->_internal_zones().Get(i);
    target = ::google::protobuf_tempo::internal::WireFormatLite::
        InternalWriteMessage(1, repfield, repfield.GetCachedSize(), target, stream);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target =
        ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
            _internal_metadata_.unknown_fields<::google::protobuf_tempo::UnknownFieldSet>(::google::protobuf_tempo::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:TempoMapQuery.ZoneDataResponse)
  return target;
}

::size_t ZoneDataResponse::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:TempoMapQuery.ZoneDataResponse)
  ::size_t total_size = 0;

  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // repeated .TempoMapQuery.ZoneData zones = 1;
  total_size += 1UL * this->_internal_zones_size();
  for (const auto& msg : this->_internal_zones()) {
    total_size +=
      ::google::protobuf_tempo::internal::WireFormatLite::MessageSize(msg);
  }
  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::google::protobuf_tempo::Message::ClassData ZoneDataResponse::_class_data_ = {
    ZoneDataResponse::MergeImpl,
    nullptr,  // OnDemandRegisterArenaDtor
};
const ::google::protobuf_tempo::Message::ClassData* ZoneDataResponse::GetClassData() const {
  return &_class_data_;
}

void ZoneDataResponse::MergeImpl(::google::protobuf_tempo::Message& to_msg, const ::google::protobuf_tempo::Message& from_msg) {
  auto* const _this = static_cast<ZoneDataResponse*>(&to_msg);
  auto& from = static_cast<const ZoneDataResponse&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:TempoMapQuery.ZoneDataResponse)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  _this->_internal_mutable_zones()->MergeFrom(
      from._internal_zones());
  _this->_internal_metadata_.MergeFrom<::google::protobuf_tempo::UnknownFieldSet>(from._internal_metadata_);
}

void ZoneDataResponse::CopyFrom(const ZoneDataResponse& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:TempoMapQuery.ZoneDataResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

PROTOBUF_NOINLINE bool ZoneDataResponse::IsInitialized() const {
  return true;
}

::_pbi::CachedSize* ZoneDataResponse::AccessCachedSize() const {
  return &_impl_._cached_size_;
}
void ZoneDataResponse::InternalSwap(ZoneDataResponse* PROTOBUF_RESTRICT other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  _impl_.zones_.InternalSwap(&other->_impl_.zones_);
}

::google::protobuf_tempo::Metadata ZoneDataResponse::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_TempoMapQuery_2fMapQueries_2eproto_getter, &descriptor_table_TempoMapQuery_2fMapQueries_2eproto_once,
      file_level_metadata_TempoMapQuery_2fMapQueries_2eproto[8]);
}
// ===================================================================

class LaneAccessibilityRequest::_Internal {
 public:
};

LaneAccessibilityRequest::LaneAccessibilityRequest(::google::protobuf_tempo::Arena* arena)
    : ::google::protobuf_tempo::Message(arena) {
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:TempoMapQuery.LaneAccessibilityRequest)
}
LaneAccessibilityRequest::LaneAccessibilityRequest(
    ::google::protobuf_tempo::Arena* arena, const LaneAccessibilityRequest& from)
    : LaneAccessibilityRequest(arena) {
  MergeFrom(from);
}
inline PROTOBUF_NDEBUG_INLINE LaneAccessibilityRequest::Impl_::Impl_(
    ::google::protobuf_tempo::internal::InternalVisibility visibility,
    ::google::protobuf_tempo::Arena* arena)
      : _cached_size_{0} {}

inline void LaneAccessibilityRequest::SharedCtor(::_pb::Arena* arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
  ::memset(reinterpret_cast<char *>(&_impl_) +
               offsetof(Impl_, from_id_),
           0,
           offsetof(Impl_, to_id_) -
               offsetof(Impl_, from_id_) +
               sizeof(Impl_::to_id_));
}
LaneAccessibilityRequest::~LaneAccessibilityRequest() {
  // @@protoc_insertion_point(destructor:TempoMapQuery.LaneAccessibilityRequest)
  _internal_metadata_.Delete<::google::protobuf_tempo::UnknownFieldSet>();
  SharedDtor();
}
inline void LaneAccessibilityRequest::SharedDtor() {
  ABSL_DCHECK(GetArena() == nullptr);
  _impl_.~Impl_();
}

PROTOBUF_NOINLINE void LaneAccessibilityRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:TempoMapQuery.LaneAccessibilityRequest)
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  ::memset(&_impl_.from_id_, 0, static_cast<::size_t>(
      reinterpret_cast<char*>(&_impl_.to_id_) -
      reinterpret_cast<char*>(&_impl_.from_id_)) + sizeof(_impl_.to_id_));
  _internal_metadata_.Clear<::google::protobuf_tempo::UnknownFieldSet>();
}

const char* LaneAccessibilityRequest::_InternalParse(
    const char* ptr, ::_pbi::ParseContext* ctx) {
  ptr = ::_pbi::TcParser::ParseLoop(this, ptr, ctx, &_table_.header);
  return ptr;
}


PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<1, 2, 0, 0, 2> LaneAccessibilityRequest::_table_ = {
  {
    0,  // no _has_bits_
    0, // no _extensions_
    2, 8,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967292,  // skipmap
    offsetof(decltype(_table_), field_entries),
    2,  // num_field_entries
    0,  // num_aux_entries
    offsetof(decltype(_table_), field_names),  // no aux_entries
    &_LaneAccessibilityRequest_default_instance_._instance,
    ::_pbi::TcParser::GenericFallback,  // fallback
  }, {{
    // int32 to_id = 2;
    {::_pbi::TcParser::SingularVarintNoZag1<::uint32_t, offsetof(LaneAccessibilityRequest, _impl_.to_id_), 63>(),
     {16, 63, 0, PROTOBUF_FIELD_OFFSET(LaneAccessibilityRequest, _impl_.to_id_)}},
    // int32 from_id = 1;
    {::_pbi::TcParser::SingularVarintNoZag1<::uint32_t, offsetof(LaneAccessibilityRequest, _impl_.from_id_), 63>(),
     {8, 63, 0, PROTOBUF_FIELD_OFFSET(LaneAccessibilityRequest, _impl_.from_id_)}},
  }}, {{
    65535, 65535
  }}, {{
    // int32 from_id = 1;
    {PROTOBUF_FIELD_OFFSET(LaneAccessibilityRequest, _impl_.from_id_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kInt32)},
    // int32 to_id = 2;
    {PROTOBUF_FIELD_OFFSET(LaneAccessibilityRequest, _impl_.to_id_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kInt32)},
  }},
  // no aux_entries
  {{
  }},
};

::uint8_t* LaneAccessibilityRequest::_InternalSerialize(
    ::uint8_t* target,
    ::google::protobuf_tempo::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:TempoMapQuery.LaneAccessibilityRequest)
  ::uint32_t cached_has_bits = 0;
  (void)cached_has_bits;

  // int32 from_id = 1;
  if (this->_internal_from_id() != 0) {
    target = ::google::protobuf_tempo::internal::WireFormatLite::
        WriteInt32ToArrayWithField<1>(
            stream, this->_internal_from_id(), target);
  }

  // int32 to_id = 2;
  if (this->_internal_to_id() != 0) {
    target = ::google::protobuf_tempo::internal::WireFormatLite::
        WriteInt32ToArrayWithField<2>(
            stream, this->_internal_to_id(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target =
        ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
            _internal_metadata_.unknown_fields<::google::protobuf_tempo::UnknownFieldSet>(::google::protobuf_tempo::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:TempoMapQuery.LaneAccessibilityRequest)
  return target;
}

::size_t LaneAccessibilityRequest::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:TempoMapQuery.LaneAccessibilityRequest)
  ::size_t total_size = 0;

  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // int32 from_id = 1;
  if (this->_internal_from_id() != 0) {
    total_size += ::_pbi::WireFormatLite::Int32SizePlusOne(
        this->_internal_from_id());
  }

  // int32 to_id = 2;
  if (this->_internal_to_id() != 0) {
    total_size += ::_pbi::WireFormatLite::Int32SizePlusOne(
        this->_internal_to_id());
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::google::protobuf_tempo::Message::ClassData LaneAccessibilityRequest::_class_data_ = {
    LaneAccessibilityRequest::MergeImpl,
    nullptr,  // OnDemandRegisterArenaDtor
};
const ::google::protobuf_tempo::Message::ClassData* LaneAccessibilityRequest::GetClassData() const {
  return &_class_data_;
}

void LaneAccessibilityRequest::MergeImpl(::google::protobuf_tempo::Message& to_msg, const ::google::protobuf_tempo::Message& from_msg) {
  auto* const _this = static_cast<LaneAccessibilityRequest*>(&to_msg);
  auto& from = static_cast<const LaneAccessibilityRequest&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:TempoMapQuery.LaneAccessibilityRequest)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (from._internal_from_id() != 0) {
    _this->_internal_set_from_id(from._internal_from_id());
  }
  if (from._internal_to_id() != 0) {
    _this->_internal_set_to_id(from._internal_to_id());
  }
  _this->_internal_metadata_.MergeFrom<::google::protobuf_tempo::UnknownFieldSet>(from._internal_metadata_);
}

void LaneAccessibilityRequest::CopyFrom(const LaneAccessibilityRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:TempoMapQuery.LaneAccessibilityRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

PROTOBUF_NOINLINE bool LaneAccessibilityRequest::IsInitialized() const {
  return true;
}

::_pbi::CachedSize* LaneAccessibilityRequest::AccessCachedSize() const {
  return &_impl_._cached_size_;
}
void LaneAccessibilityRequest::InternalSwap(LaneAccessibilityRequest* PROTOBUF_RESTRICT other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  ::google::protobuf_tempo::internal::memswap<
      PROTOBUF_FIELD_OFFSET(LaneAccessibilityRequest, _impl_.to_id_)
      + sizeof(LaneAccessibilityRequest::_impl_.to_id_)
      - PROTOBUF_FIELD_OFFSET(LaneAccessibilityRequest, _impl_.from_id_)>(
          reinterpret_cast<char*>(&_impl_.from_id_),
          reinterpret_cast<char*>(&other->_impl_.from_id_));
}

::google::protobuf_tempo::Metadata LaneAccessibilityRequest::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_TempoMapQuery_2fMapQueries_2eproto_getter, &descriptor_table_TempoMapQuery_2fMapQueries_2eproto_once,
      file_level_metadata_TempoMapQuery_2fMapQueries_2eproto[9]);
}
// ===================================================================

class LaneAccessibilityResponse::_Internal {
 public:
};

LaneAccessibilityResponse::LaneAccessibilityResponse(::google::protobuf_tempo::Arena* arena)
    : ::google::protobuf_tempo::Message(arena) {
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:TempoMapQuery.LaneAccessibilityResponse)
}
LaneAccessibilityResponse::LaneAccessibilityResponse(
    ::google::protobuf_tempo::Arena* arena, const LaneAccessibilityResponse& from)
    : LaneAccessibilityResponse(arena) {
  MergeFrom(from);
}
inline PROTOBUF_NDEBUG_INLINE LaneAccessibilityResponse::Impl_::Impl_(
    ::google::protobuf_tempo::internal::InternalVisibility visibility,
    ::google::protobuf_tempo::Arena* arena)
      : _cached_size_{0} {}

inline void LaneAccessibilityResponse::SharedCtor(::_pb::Arena* arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
  _impl_.accessibility_ = {};
}
LaneAccessibilityResponse::~LaneAccessibilityResponse() {
  // @@protoc_insertion_point(destructor:TempoMapQuery.LaneAccessibilityResponse)
  _internal_metadata_.Delete<::google::protobuf_tempo::UnknownFieldSet>();
  SharedDtor();
}
inline void LaneAccessibilityResponse::SharedDtor() {
  ABSL_DCHECK(GetArena() == nullptr);
  _impl_.~Impl_();
}

PROTOBUF_NOINLINE void LaneAccessibilityResponse::Clear() {
// @@protoc_insertion_point(message_clear_start:TempoMapQuery.LaneAccessibilityResponse)
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.accessibility_ = 0;
  _internal_metadata_.Clear<::google::protobuf_tempo::UnknownFieldSet>();
}

const char* LaneAccessibilityResponse::_InternalParse(
    const char* ptr, ::_pbi::ParseContext* ctx) {
  ptr = ::_pbi::TcParser::ParseLoop(this, ptr, ctx, &_table_.header);
  return ptr;
}


PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<0, 1, 0, 0, 2> LaneAccessibilityResponse::_table_ = {
  {
    0,  // no _has_bits_
    0, // no _extensions_
    1, 0,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967294,  // skipmap
    offsetof(decltype(_table_), field_entries),
    1,  // num_field_entries
    0,  // num_aux_entries
    offsetof(decltype(_table_), field_names),  // no aux_entries
    &_LaneAccessibilityResponse_default_instance_._instance,
    ::_pbi::TcParser::GenericFallback,  // fallback
  }, {{
    // .TempoMapQuery.LaneAccessibility accessibility = 1;
    {::_pbi::TcParser::SingularVarintNoZag1<::uint32_t, offsetof(LaneAccessibilityResponse, _impl_.accessibility_), 63>(),
     {8, 63, 0, PROTOBUF_FIELD_OFFSET(LaneAccessibilityResponse, _impl_.accessibility_)}},
  }}, {{
    65535, 65535
  }}, {{
    // .TempoMapQuery.LaneAccessibility accessibility = 1;
    {PROTOBUF_FIELD_OFFSET(LaneAccessibilityResponse, _impl_.accessibility_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kOpenEnum)},
  }},
  // no aux_entries
  {{
  }},
};

::uint8_t* LaneAccessibilityResponse::_InternalSerialize(
    ::uint8_t* target,
    ::google::protobuf_tempo::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:TempoMapQuery.LaneAccessibilityResponse)
  ::uint32_t cached_has_bits = 0;
  (void)cached_has_bits;

  // .TempoMapQuery.LaneAccessibility accessibility = 1;
  if (this->_internal_accessibility() != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteEnumToArray(
        1, this->_internal_accessibility(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target =
        ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
            _internal_metadata_.unknown_fields<::google::protobuf_tempo::UnknownFieldSet>(::google::protobuf_tempo::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:TempoMapQuery.LaneAccessibilityResponse)
  return target;
}

::size_t LaneAccessibilityResponse::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:TempoMapQuery.LaneAccessibilityResponse)
  ::size_t total_size = 0;

  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // .TempoMapQuery.LaneAccessibility accessibility = 1;
  if (this->_internal_accessibility() != 0) {
    total_size += 1 +
                  ::_pbi::WireFormatLite::EnumSize(this->_internal_accessibility());
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::google::protobuf_tempo::Message::ClassData LaneAccessibilityResponse::_class_data_ = {
    LaneAccessibilityResponse::MergeImpl,
    nullptr,  // OnDemandRegisterArenaDtor
};
const ::google::protobuf_tempo::Message::ClassData* LaneAccessibilityResponse::GetClassData() const {
  return &_class_data_;
}

void LaneAccessibilityResponse::MergeImpl(::google::protobuf_tempo::Message& to_msg, const ::google::protobuf_tempo::Message& from_msg) {
  auto* const _this = static_cast<LaneAccessibilityResponse*>(&to_msg);
  auto& from = static_cast<const LaneAccessibilityResponse&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:TempoMapQuery.LaneAccessibilityResponse)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (from._internal_accessibility() != 0) {
    _this->_internal_set_accessibility(from._internal_accessibility());
  }
  _this->_internal_metadata_.MergeFrom<::google::protobuf_tempo::UnknownFieldSet>(from._internal_metadata_);
}

void LaneAccessibilityResponse::CopyFrom(const LaneAccessibilityResponse& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:TempoMapQuery.LaneAccessibilityResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

PROTOBUF_NOINLINE bool LaneAccessibilityResponse::IsInitialized() const {
  return true;
}

::_pbi::CachedSize* LaneAccessibilityResponse::AccessCachedSize() const {
  return &_impl_._cached_size_;
}
void LaneAccessibilityResponse::InternalSwap(LaneAccessibilityResponse* PROTOBUF_RESTRICT other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_.accessibility_, other->_impl_.accessibility_);
}

::google::protobuf_tempo::Metadata LaneAccessibilityResponse::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_TempoMapQuery_2fMapQueries_2eproto_getter, &descriptor_table_TempoMapQuery_2fMapQueries_2eproto_once,
      file_level_metadata_TempoMapQuery_2fMapQueries_2eproto[10]);
}
// @@protoc_insertion_point(namespace_scope)
}  // namespace TempoMapQuery
namespace google {
namespace protobuf_tempo {
}  // namespace protobuf_tempo
}  // namespace google
// @@protoc_insertion_point(global_scope)
#include "google/protobuf/port_undef.inc"
