// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: TempoTime/Time.proto
// Protobuf C++ Version: 4.25.1

#ifndef GOOGLE_PROTOBUF_INCLUDED_TempoTime_2fTime_2eproto_2epb_2eh
#define GOOGLE_PROTOBUF_INCLUDED_TempoTime_2fTime_2eproto_2epb_2eh

#include <limits>
#include <string>
#include <type_traits>
#include <utility>

#include "google/protobuf/port_def.inc"
#if PROTOBUF_VERSION < 4025000
#error "This file was generated by a newer version of protoc which is"
#error "incompatible with your Protocol Buffer headers. Please update"
#error "your headers."
#endif  // PROTOBUF_VERSION

#if 4025001 < PROTOBUF_MIN_PROTOC_VERSION
#error "This file was generated by an older version of protoc which is"
#error "incompatible with your Protocol Buffer headers. Please"
#error "regenerate this file with a newer version of protoc."
#endif  // PROTOBUF_MIN_PROTOC_VERSION
#include "google/protobuf/port_undef.inc"
#include "google/protobuf/io/coded_stream.h"
#include "google/protobuf/arena.h"
#include "google/protobuf/arenastring.h"
#include "google/protobuf/generated_message_tctable_decl.h"
#include "google/protobuf/generated_message_util.h"
#include "google/protobuf/metadata_lite.h"
#include "google/protobuf/generated_message_reflection.h"
#include "google/protobuf/message.h"
#include "google/protobuf/repeated_field.h"  // IWYU pragma: export
#include "google/protobuf/extension_set.h"  // IWYU pragma: export
#include "google/protobuf/generated_enum_reflection.h"
#include "google/protobuf/unknown_field_set.h"
#include "TempoScripting/Empty.pb.h"
// @@protoc_insertion_point(includes)

// Must be included last.
#include "google/protobuf/port_def.inc"

#define PROTOBUF_INTERNAL_EXPORT_TempoTime_2fTime_2eproto TEMPOTIME_API

namespace google {
namespace protobuf_tempo {
namespace internal {
class AnyMetadata;
}  // namespace internal
}  // namespace protobuf_tempo
}  // namespace google

// Internal implementation detail -- do not use these members.
struct TEMPOTIME_API TableStruct_TempoTime_2fTime_2eproto {
  static const ::uint32_t offsets[];
};
TEMPOTIME_API extern const ::google::protobuf_tempo::internal::DescriptorTable
    descriptor_table_TempoTime_2fTime_2eproto;
namespace TempoTime {
class AdvanceStepsRequest;
struct AdvanceStepsRequestDefaultTypeInternal;
TEMPOTIME_API extern AdvanceStepsRequestDefaultTypeInternal _AdvanceStepsRequest_default_instance_;
class SetSimStepsPerSecondRequest;
struct SetSimStepsPerSecondRequestDefaultTypeInternal;
TEMPOTIME_API extern SetSimStepsPerSecondRequestDefaultTypeInternal _SetSimStepsPerSecondRequest_default_instance_;
class TimeModeRequest;
struct TimeModeRequestDefaultTypeInternal;
TEMPOTIME_API extern TimeModeRequestDefaultTypeInternal _TimeModeRequest_default_instance_;
}  // namespace TempoTime
namespace google {
namespace protobuf_tempo {
}  // namespace protobuf_tempo
}  // namespace google

namespace TempoTime {
enum TimeMode : int {
  WALL_CLOCK = 0,
  FIXED_STEP = 1,
  TimeMode_INT_MIN_SENTINEL_DO_NOT_USE_ =
      std::numeric_limits<::int32_t>::min(),
  TimeMode_INT_MAX_SENTINEL_DO_NOT_USE_ =
      std::numeric_limits<::int32_t>::max(),
};

TEMPOTIME_API bool TimeMode_IsValid(int value);
TEMPOTIME_API extern const uint32_t TimeMode_internal_data_[];
constexpr TimeMode TimeMode_MIN = static_cast<TimeMode>(0);
constexpr TimeMode TimeMode_MAX = static_cast<TimeMode>(1);
constexpr int TimeMode_ARRAYSIZE = 1 + 1;
TEMPOTIME_API const ::google::protobuf_tempo::EnumDescriptor*
TimeMode_descriptor();
template <typename T>
const std::string& TimeMode_Name(T value) {
  static_assert(std::is_same<T, TimeMode>::value ||
                    std::is_integral<T>::value,
                "Incorrect type passed to TimeMode_Name().");
  return TimeMode_Name(static_cast<TimeMode>(value));
}
template <>
inline const std::string& TimeMode_Name(TimeMode value) {
  return ::google::protobuf_tempo::internal::NameOfDenseEnum<TimeMode_descriptor,
                                                 0, 1>(
      static_cast<int>(value));
}
inline bool TimeMode_Parse(absl_tempo::string_view name, TimeMode* value) {
  return ::google::protobuf_tempo::internal::ParseNamedEnum<TimeMode>(
      TimeMode_descriptor(), name, value);
}

// ===================================================================


// -------------------------------------------------------------------

class TEMPOTIME_API TimeModeRequest final :
    public ::google::protobuf_tempo::Message /* @@protoc_insertion_point(class_definition:TempoTime.TimeModeRequest) */ {
 public:
  inline TimeModeRequest() : TimeModeRequest(nullptr) {}
  ~TimeModeRequest() override;
  template<typename = void>
  explicit PROTOBUF_CONSTEXPR TimeModeRequest(::google::protobuf_tempo::internal::ConstantInitialized);

  inline TimeModeRequest(const TimeModeRequest& from)
      : TimeModeRequest(nullptr, from) {}
  TimeModeRequest(TimeModeRequest&& from) noexcept
    : TimeModeRequest() {
    *this = ::std::move(from);
  }

  inline TimeModeRequest& operator=(const TimeModeRequest& from) {
    CopyFrom(from);
    return *this;
  }
  inline TimeModeRequest& operator=(TimeModeRequest&& from) noexcept {
    if (this == &from) return *this;
    if (GetArena() == from.GetArena()
  #ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetArena() != nullptr
  #endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf_tempo::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf_tempo::UnknownFieldSet>(::google::protobuf_tempo::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf_tempo::UnknownFieldSet* mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf_tempo::UnknownFieldSet>();
  }

  static const ::google::protobuf_tempo::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf_tempo::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf_tempo::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const TimeModeRequest& default_instance() {
    return *internal_default_instance();
  }
  static inline const TimeModeRequest* internal_default_instance() {
    return reinterpret_cast<const TimeModeRequest*>(
               &_TimeModeRequest_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    0;

  friend void swap(TimeModeRequest& a, TimeModeRequest& b) {
    a.Swap(&b);
  }
  inline void Swap(TimeModeRequest* other) {
    if (other == this) return;
  #ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() != nullptr &&
        GetArena() == other->GetArena()) {
   #else  // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() == other->GetArena()) {
  #endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::google::protobuf_tempo::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(TimeModeRequest* other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  TimeModeRequest* New(::google::protobuf_tempo::Arena* arena = nullptr) const final {
    return CreateMaybeMessage<TimeModeRequest>(arena);
  }
  using ::google::protobuf_tempo::Message::CopyFrom;
  void CopyFrom(const TimeModeRequest& from);
  using ::google::protobuf_tempo::Message::MergeFrom;
  void MergeFrom( const TimeModeRequest& from) {
    TimeModeRequest::MergeImpl(*this, from);
  }
  private:
  static void MergeImpl(::google::protobuf_tempo::Message& to_msg, const ::google::protobuf_tempo::Message& from_msg);
  public:
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  ::size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::google::protobuf_tempo::internal::ParseContext* ctx) final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target, ::google::protobuf_tempo::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  ::google::protobuf_tempo::internal::CachedSize* AccessCachedSize() const final;
  void SharedCtor(::google::protobuf_tempo::Arena* arena);
  void SharedDtor();
  void InternalSwap(TimeModeRequest* other);

  private:
  friend class ::google::protobuf_tempo::internal::AnyMetadata;
  static ::absl_tempo::string_view FullMessageName() {
    return "TempoTime.TimeModeRequest";
  }
  protected:
  explicit TimeModeRequest(::google::protobuf_tempo::Arena* arena);
  TimeModeRequest(::google::protobuf_tempo::Arena* arena, const TimeModeRequest& from);
  public:

  static const ClassData _class_data_;
  const ::google::protobuf_tempo::Message::ClassData*GetClassData() const final;

  ::google::protobuf_tempo::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kTimeModeFieldNumber = 1,
  };
  // .TempoTime.TimeMode time_mode = 1;
  void clear_time_mode() ;
  ::TempoTime::TimeMode time_mode() const;
  void set_time_mode(::TempoTime::TimeMode value);

  private:
  ::TempoTime::TimeMode _internal_time_mode() const;
  void _internal_set_time_mode(::TempoTime::TimeMode value);

  public:
  // @@protoc_insertion_point(class_scope:TempoTime.TimeModeRequest)
 private:
  class _Internal;

  friend class ::google::protobuf_tempo::internal::TcParser;
  static const ::google::protobuf_tempo::internal::TcParseTable<
      0, 1, 0,
      0, 2>
      _table_;
  friend class ::google::protobuf_tempo::MessageLite;
  friend class ::google::protobuf_tempo::Arena;
  template <typename T>
  friend class ::google::protobuf_tempo::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct TEMPOTIME_API Impl_ {

        inline explicit constexpr Impl_(
            ::google::protobuf_tempo::internal::ConstantInitialized) noexcept;
        inline explicit Impl_(::google::protobuf_tempo::internal::InternalVisibility visibility,
                              ::google::protobuf_tempo::Arena* arena);
        inline explicit Impl_(::google::protobuf_tempo::internal::InternalVisibility visibility,
                              ::google::protobuf_tempo::Arena* arena, const Impl_& from);
    int time_mode_;
    mutable ::google::protobuf_tempo::internal::CachedSize _cached_size_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_TempoTime_2fTime_2eproto;
};// -------------------------------------------------------------------

class TEMPOTIME_API SetSimStepsPerSecondRequest final :
    public ::google::protobuf_tempo::Message /* @@protoc_insertion_point(class_definition:TempoTime.SetSimStepsPerSecondRequest) */ {
 public:
  inline SetSimStepsPerSecondRequest() : SetSimStepsPerSecondRequest(nullptr) {}
  ~SetSimStepsPerSecondRequest() override;
  template<typename = void>
  explicit PROTOBUF_CONSTEXPR SetSimStepsPerSecondRequest(::google::protobuf_tempo::internal::ConstantInitialized);

  inline SetSimStepsPerSecondRequest(const SetSimStepsPerSecondRequest& from)
      : SetSimStepsPerSecondRequest(nullptr, from) {}
  SetSimStepsPerSecondRequest(SetSimStepsPerSecondRequest&& from) noexcept
    : SetSimStepsPerSecondRequest() {
    *this = ::std::move(from);
  }

  inline SetSimStepsPerSecondRequest& operator=(const SetSimStepsPerSecondRequest& from) {
    CopyFrom(from);
    return *this;
  }
  inline SetSimStepsPerSecondRequest& operator=(SetSimStepsPerSecondRequest&& from) noexcept {
    if (this == &from) return *this;
    if (GetArena() == from.GetArena()
  #ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetArena() != nullptr
  #endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf_tempo::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf_tempo::UnknownFieldSet>(::google::protobuf_tempo::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf_tempo::UnknownFieldSet* mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf_tempo::UnknownFieldSet>();
  }

  static const ::google::protobuf_tempo::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf_tempo::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf_tempo::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const SetSimStepsPerSecondRequest& default_instance() {
    return *internal_default_instance();
  }
  static inline const SetSimStepsPerSecondRequest* internal_default_instance() {
    return reinterpret_cast<const SetSimStepsPerSecondRequest*>(
               &_SetSimStepsPerSecondRequest_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    1;

  friend void swap(SetSimStepsPerSecondRequest& a, SetSimStepsPerSecondRequest& b) {
    a.Swap(&b);
  }
  inline void Swap(SetSimStepsPerSecondRequest* other) {
    if (other == this) return;
  #ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() != nullptr &&
        GetArena() == other->GetArena()) {
   #else  // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() == other->GetArena()) {
  #endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::google::protobuf_tempo::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(SetSimStepsPerSecondRequest* other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  SetSimStepsPerSecondRequest* New(::google::protobuf_tempo::Arena* arena = nullptr) const final {
    return CreateMaybeMessage<SetSimStepsPerSecondRequest>(arena);
  }
  using ::google::protobuf_tempo::Message::CopyFrom;
  void CopyFrom(const SetSimStepsPerSecondRequest& from);
  using ::google::protobuf_tempo::Message::MergeFrom;
  void MergeFrom( const SetSimStepsPerSecondRequest& from) {
    SetSimStepsPerSecondRequest::MergeImpl(*this, from);
  }
  private:
  static void MergeImpl(::google::protobuf_tempo::Message& to_msg, const ::google::protobuf_tempo::Message& from_msg);
  public:
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  ::size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::google::protobuf_tempo::internal::ParseContext* ctx) final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target, ::google::protobuf_tempo::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  ::google::protobuf_tempo::internal::CachedSize* AccessCachedSize() const final;
  void SharedCtor(::google::protobuf_tempo::Arena* arena);
  void SharedDtor();
  void InternalSwap(SetSimStepsPerSecondRequest* other);

  private:
  friend class ::google::protobuf_tempo::internal::AnyMetadata;
  static ::absl_tempo::string_view FullMessageName() {
    return "TempoTime.SetSimStepsPerSecondRequest";
  }
  protected:
  explicit SetSimStepsPerSecondRequest(::google::protobuf_tempo::Arena* arena);
  SetSimStepsPerSecondRequest(::google::protobuf_tempo::Arena* arena, const SetSimStepsPerSecondRequest& from);
  public:

  static const ClassData _class_data_;
  const ::google::protobuf_tempo::Message::ClassData*GetClassData() const final;

  ::google::protobuf_tempo::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kSimStepsPerSecondFieldNumber = 1,
  };
  // int32 sim_steps_per_second = 1;
  void clear_sim_steps_per_second() ;
  ::int32_t sim_steps_per_second() const;
  void set_sim_steps_per_second(::int32_t value);

  private:
  ::int32_t _internal_sim_steps_per_second() const;
  void _internal_set_sim_steps_per_second(::int32_t value);

  public:
  // @@protoc_insertion_point(class_scope:TempoTime.SetSimStepsPerSecondRequest)
 private:
  class _Internal;

  friend class ::google::protobuf_tempo::internal::TcParser;
  static const ::google::protobuf_tempo::internal::TcParseTable<
      0, 1, 0,
      0, 2>
      _table_;
  friend class ::google::protobuf_tempo::MessageLite;
  friend class ::google::protobuf_tempo::Arena;
  template <typename T>
  friend class ::google::protobuf_tempo::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct TEMPOTIME_API Impl_ {

        inline explicit constexpr Impl_(
            ::google::protobuf_tempo::internal::ConstantInitialized) noexcept;
        inline explicit Impl_(::google::protobuf_tempo::internal::InternalVisibility visibility,
                              ::google::protobuf_tempo::Arena* arena);
        inline explicit Impl_(::google::protobuf_tempo::internal::InternalVisibility visibility,
                              ::google::protobuf_tempo::Arena* arena, const Impl_& from);
    ::int32_t sim_steps_per_second_;
    mutable ::google::protobuf_tempo::internal::CachedSize _cached_size_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_TempoTime_2fTime_2eproto;
};// -------------------------------------------------------------------

class TEMPOTIME_API AdvanceStepsRequest final :
    public ::google::protobuf_tempo::Message /* @@protoc_insertion_point(class_definition:TempoTime.AdvanceStepsRequest) */ {
 public:
  inline AdvanceStepsRequest() : AdvanceStepsRequest(nullptr) {}
  ~AdvanceStepsRequest() override;
  template<typename = void>
  explicit PROTOBUF_CONSTEXPR AdvanceStepsRequest(::google::protobuf_tempo::internal::ConstantInitialized);

  inline AdvanceStepsRequest(const AdvanceStepsRequest& from)
      : AdvanceStepsRequest(nullptr, from) {}
  AdvanceStepsRequest(AdvanceStepsRequest&& from) noexcept
    : AdvanceStepsRequest() {
    *this = ::std::move(from);
  }

  inline AdvanceStepsRequest& operator=(const AdvanceStepsRequest& from) {
    CopyFrom(from);
    return *this;
  }
  inline AdvanceStepsRequest& operator=(AdvanceStepsRequest&& from) noexcept {
    if (this == &from) return *this;
    if (GetArena() == from.GetArena()
  #ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetArena() != nullptr
  #endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf_tempo::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf_tempo::UnknownFieldSet>(::google::protobuf_tempo::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf_tempo::UnknownFieldSet* mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf_tempo::UnknownFieldSet>();
  }

  static const ::google::protobuf_tempo::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf_tempo::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf_tempo::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const AdvanceStepsRequest& default_instance() {
    return *internal_default_instance();
  }
  static inline const AdvanceStepsRequest* internal_default_instance() {
    return reinterpret_cast<const AdvanceStepsRequest*>(
               &_AdvanceStepsRequest_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    2;

  friend void swap(AdvanceStepsRequest& a, AdvanceStepsRequest& b) {
    a.Swap(&b);
  }
  inline void Swap(AdvanceStepsRequest* other) {
    if (other == this) return;
  #ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() != nullptr &&
        GetArena() == other->GetArena()) {
   #else  // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() == other->GetArena()) {
  #endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::google::protobuf_tempo::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(AdvanceStepsRequest* other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  AdvanceStepsRequest* New(::google::protobuf_tempo::Arena* arena = nullptr) const final {
    return CreateMaybeMessage<AdvanceStepsRequest>(arena);
  }
  using ::google::protobuf_tempo::Message::CopyFrom;
  void CopyFrom(const AdvanceStepsRequest& from);
  using ::google::protobuf_tempo::Message::MergeFrom;
  void MergeFrom( const AdvanceStepsRequest& from) {
    AdvanceStepsRequest::MergeImpl(*this, from);
  }
  private:
  static void MergeImpl(::google::protobuf_tempo::Message& to_msg, const ::google::protobuf_tempo::Message& from_msg);
  public:
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  ::size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::google::protobuf_tempo::internal::ParseContext* ctx) final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target, ::google::protobuf_tempo::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  ::google::protobuf_tempo::internal::CachedSize* AccessCachedSize() const final;
  void SharedCtor(::google::protobuf_tempo::Arena* arena);
  void SharedDtor();
  void InternalSwap(AdvanceStepsRequest* other);

  private:
  friend class ::google::protobuf_tempo::internal::AnyMetadata;
  static ::absl_tempo::string_view FullMessageName() {
    return "TempoTime.AdvanceStepsRequest";
  }
  protected:
  explicit AdvanceStepsRequest(::google::protobuf_tempo::Arena* arena);
  AdvanceStepsRequest(::google::protobuf_tempo::Arena* arena, const AdvanceStepsRequest& from);
  public:

  static const ClassData _class_data_;
  const ::google::protobuf_tempo::Message::ClassData*GetClassData() const final;

  ::google::protobuf_tempo::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kStepsFieldNumber = 1,
  };
  // int32 steps = 1;
  void clear_steps() ;
  ::int32_t steps() const;
  void set_steps(::int32_t value);

  private:
  ::int32_t _internal_steps() const;
  void _internal_set_steps(::int32_t value);

  public:
  // @@protoc_insertion_point(class_scope:TempoTime.AdvanceStepsRequest)
 private:
  class _Internal;

  friend class ::google::protobuf_tempo::internal::TcParser;
  static const ::google::protobuf_tempo::internal::TcParseTable<
      0, 1, 0,
      0, 2>
      _table_;
  friend class ::google::protobuf_tempo::MessageLite;
  friend class ::google::protobuf_tempo::Arena;
  template <typename T>
  friend class ::google::protobuf_tempo::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct TEMPOTIME_API Impl_ {

        inline explicit constexpr Impl_(
            ::google::protobuf_tempo::internal::ConstantInitialized) noexcept;
        inline explicit Impl_(::google::protobuf_tempo::internal::InternalVisibility visibility,
                              ::google::protobuf_tempo::Arena* arena);
        inline explicit Impl_(::google::protobuf_tempo::internal::InternalVisibility visibility,
                              ::google::protobuf_tempo::Arena* arena, const Impl_& from);
    ::int32_t steps_;
    mutable ::google::protobuf_tempo::internal::CachedSize _cached_size_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_TempoTime_2fTime_2eproto;
};

// ===================================================================




// ===================================================================


#ifdef __GNUC__
#pragma GCC diagnostic push
#pragma GCC diagnostic ignored "-Wstrict-aliasing"
#endif  // __GNUC__
// -------------------------------------------------------------------

// TimeModeRequest

// .TempoTime.TimeMode time_mode = 1;
inline void TimeModeRequest::clear_time_mode() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _impl_.time_mode_ = 0;
}
inline ::TempoTime::TimeMode TimeModeRequest::time_mode() const {
  // @@protoc_insertion_point(field_get:TempoTime.TimeModeRequest.time_mode)
  return _internal_time_mode();
}
inline void TimeModeRequest::set_time_mode(::TempoTime::TimeMode value) {
  _internal_set_time_mode(value);
  // @@protoc_insertion_point(field_set:TempoTime.TimeModeRequest.time_mode)
}
inline ::TempoTime::TimeMode TimeModeRequest::_internal_time_mode() const {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  return static_cast<::TempoTime::TimeMode>(_impl_.time_mode_);
}
inline void TimeModeRequest::_internal_set_time_mode(::TempoTime::TimeMode value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  _impl_.time_mode_ = value;
}

// -------------------------------------------------------------------

// SetSimStepsPerSecondRequest

// int32 sim_steps_per_second = 1;
inline void SetSimStepsPerSecondRequest::clear_sim_steps_per_second() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _impl_.sim_steps_per_second_ = 0;
}
inline ::int32_t SetSimStepsPerSecondRequest::sim_steps_per_second() const {
  // @@protoc_insertion_point(field_get:TempoTime.SetSimStepsPerSecondRequest.sim_steps_per_second)
  return _internal_sim_steps_per_second();
}
inline void SetSimStepsPerSecondRequest::set_sim_steps_per_second(::int32_t value) {
  _internal_set_sim_steps_per_second(value);
  // @@protoc_insertion_point(field_set:TempoTime.SetSimStepsPerSecondRequest.sim_steps_per_second)
}
inline ::int32_t SetSimStepsPerSecondRequest::_internal_sim_steps_per_second() const {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  return _impl_.sim_steps_per_second_;
}
inline void SetSimStepsPerSecondRequest::_internal_set_sim_steps_per_second(::int32_t value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  _impl_.sim_steps_per_second_ = value;
}

// -------------------------------------------------------------------

// AdvanceStepsRequest

// int32 steps = 1;
inline void AdvanceStepsRequest::clear_steps() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _impl_.steps_ = 0;
}
inline ::int32_t AdvanceStepsRequest::steps() const {
  // @@protoc_insertion_point(field_get:TempoTime.AdvanceStepsRequest.steps)
  return _internal_steps();
}
inline void AdvanceStepsRequest::set_steps(::int32_t value) {
  _internal_set_steps(value);
  // @@protoc_insertion_point(field_set:TempoTime.AdvanceStepsRequest.steps)
}
inline ::int32_t AdvanceStepsRequest::_internal_steps() const {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  return _impl_.steps_;
}
inline void AdvanceStepsRequest::_internal_set_steps(::int32_t value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  _impl_.steps_ = value;
}

#ifdef __GNUC__
#pragma GCC diagnostic pop
#endif  // __GNUC__

// @@protoc_insertion_point(namespace_scope)
}  // namespace TempoTime


namespace google {
namespace protobuf_tempo {

template <>
struct is_proto_enum<::TempoTime::TimeMode> : std::true_type {};
template <>
inline const EnumDescriptor* GetEnumDescriptor<::TempoTime::TimeMode>() {
  return ::TempoTime::TimeMode_descriptor();
}

}  // namespace protobuf_tempo
}  // namespace google

// @@protoc_insertion_point(global_scope)

#include "google/protobuf/port_undef.inc"

#endif  // GOOGLE_PROTOBUF_INCLUDED_TempoTime_2fTime_2eproto_2epb_2eh
