// Generated by the gRPC C++ plugin.
// If you make any local change, they will be lost.
// source: TempoCoreEditor/TempoCoreEditor.proto
// Original file comments:
// Copyright Tempo Simulation, LLC. All Rights Reserved
//
#ifndef GRPC_TempoCoreEditor_2fTempoCoreEditor_2eproto__INCLUDED
#define GRPC_TempoCoreEditor_2fTempoCoreEditor_2eproto__INCLUDED

#include "TempoCoreEditor/TempoCoreEditor.pb.h"

#include <functional>
#include <grpcpp/generic/async_generic_service.h>
#include <grpcpp/support/async_stream.h>
#include <grpcpp/support/async_unary_call.h>
#include <grpcpp/support/client_callback.h>
#include <grpcpp/client_context.h>
#include <grpcpp/completion_queue.h>
#include <grpcpp/support/message_allocator.h>
#include <grpcpp/support/method_handler.h>
#include <grpcpp/impl/proto_utils.h>
#include <grpcpp/impl/rpc_method.h>
#include <grpcpp/support/server_callback.h>
#include <grpcpp/impl/server_callback_handlers.h>
#include <grpcpp/server_context.h>
#include <grpcpp/impl/service_type.h>
#include <grpcpp/support/status.h>
#include <grpcpp/support/stub_options.h>
#include <grpcpp/support/sync_stream.h>

namespace TempoCoreEditor {

class TempoCoreEditorService final {
 public:
  static constexpr char const* service_full_name() {
    return "TempoCoreEditor.TempoCoreEditorService";
  }
  class StubInterface {
   public:
    virtual ~StubInterface() {}
    virtual ::grpc::Status PlayInEditor(::grpc::ClientContext* context, const ::TempoScripting::Empty& request, ::TempoScripting::Empty* response) = 0;
    std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::TempoScripting::Empty>> AsyncPlayInEditor(::grpc::ClientContext* context, const ::TempoScripting::Empty& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::TempoScripting::Empty>>(AsyncPlayInEditorRaw(context, request, cq));
    }
    std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::TempoScripting::Empty>> PrepareAsyncPlayInEditor(::grpc::ClientContext* context, const ::TempoScripting::Empty& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::TempoScripting::Empty>>(PrepareAsyncPlayInEditorRaw(context, request, cq));
    }
    virtual ::grpc::Status Simulate(::grpc::ClientContext* context, const ::TempoScripting::Empty& request, ::TempoScripting::Empty* response) = 0;
    std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::TempoScripting::Empty>> AsyncSimulate(::grpc::ClientContext* context, const ::TempoScripting::Empty& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::TempoScripting::Empty>>(AsyncSimulateRaw(context, request, cq));
    }
    std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::TempoScripting::Empty>> PrepareAsyncSimulate(::grpc::ClientContext* context, const ::TempoScripting::Empty& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::TempoScripting::Empty>>(PrepareAsyncSimulateRaw(context, request, cq));
    }
    virtual ::grpc::Status Stop(::grpc::ClientContext* context, const ::TempoScripting::Empty& request, ::TempoScripting::Empty* response) = 0;
    std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::TempoScripting::Empty>> AsyncStop(::grpc::ClientContext* context, const ::TempoScripting::Empty& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::TempoScripting::Empty>>(AsyncStopRaw(context, request, cq));
    }
    std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::TempoScripting::Empty>> PrepareAsyncStop(::grpc::ClientContext* context, const ::TempoScripting::Empty& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::TempoScripting::Empty>>(PrepareAsyncStopRaw(context, request, cq));
    }
    virtual ::grpc::Status SaveLevel(::grpc::ClientContext* context, const ::TempoCoreEditor::SaveLevelRequest& request, ::TempoScripting::Empty* response) = 0;
    std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::TempoScripting::Empty>> AsyncSaveLevel(::grpc::ClientContext* context, const ::TempoCoreEditor::SaveLevelRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::TempoScripting::Empty>>(AsyncSaveLevelRaw(context, request, cq));
    }
    std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::TempoScripting::Empty>> PrepareAsyncSaveLevel(::grpc::ClientContext* context, const ::TempoCoreEditor::SaveLevelRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::TempoScripting::Empty>>(PrepareAsyncSaveLevelRaw(context, request, cq));
    }
    virtual ::grpc::Status OpenLevel(::grpc::ClientContext* context, const ::TempoCoreEditor::OpenLevelRequest& request, ::TempoScripting::Empty* response) = 0;
    std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::TempoScripting::Empty>> AsyncOpenLevel(::grpc::ClientContext* context, const ::TempoCoreEditor::OpenLevelRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::TempoScripting::Empty>>(AsyncOpenLevelRaw(context, request, cq));
    }
    std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::TempoScripting::Empty>> PrepareAsyncOpenLevel(::grpc::ClientContext* context, const ::TempoCoreEditor::OpenLevelRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::TempoScripting::Empty>>(PrepareAsyncOpenLevelRaw(context, request, cq));
    }
    virtual ::grpc::Status NewLevel(::grpc::ClientContext* context, const ::TempoScripting::Empty& request, ::TempoScripting::Empty* response) = 0;
    std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::TempoScripting::Empty>> AsyncNewLevel(::grpc::ClientContext* context, const ::TempoScripting::Empty& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::TempoScripting::Empty>>(AsyncNewLevelRaw(context, request, cq));
    }
    std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::TempoScripting::Empty>> PrepareAsyncNewLevel(::grpc::ClientContext* context, const ::TempoScripting::Empty& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::TempoScripting::Empty>>(PrepareAsyncNewLevelRaw(context, request, cq));
    }
    class async_interface {
     public:
      virtual ~async_interface() {}
      virtual void PlayInEditor(::grpc::ClientContext* context, const ::TempoScripting::Empty* request, ::TempoScripting::Empty* response, std::function<void(::grpc::Status)>) = 0;
      virtual void PlayInEditor(::grpc::ClientContext* context, const ::TempoScripting::Empty* request, ::TempoScripting::Empty* response, ::grpc::ClientUnaryReactor* reactor) = 0;
      virtual void Simulate(::grpc::ClientContext* context, const ::TempoScripting::Empty* request, ::TempoScripting::Empty* response, std::function<void(::grpc::Status)>) = 0;
      virtual void Simulate(::grpc::ClientContext* context, const ::TempoScripting::Empty* request, ::TempoScripting::Empty* response, ::grpc::ClientUnaryReactor* reactor) = 0;
      virtual void Stop(::grpc::ClientContext* context, const ::TempoScripting::Empty* request, ::TempoScripting::Empty* response, std::function<void(::grpc::Status)>) = 0;
      virtual void Stop(::grpc::ClientContext* context, const ::TempoScripting::Empty* request, ::TempoScripting::Empty* response, ::grpc::ClientUnaryReactor* reactor) = 0;
      virtual void SaveLevel(::grpc::ClientContext* context, const ::TempoCoreEditor::SaveLevelRequest* request, ::TempoScripting::Empty* response, std::function<void(::grpc::Status)>) = 0;
      virtual void SaveLevel(::grpc::ClientContext* context, const ::TempoCoreEditor::SaveLevelRequest* request, ::TempoScripting::Empty* response, ::grpc::ClientUnaryReactor* reactor) = 0;
      virtual void OpenLevel(::grpc::ClientContext* context, const ::TempoCoreEditor::OpenLevelRequest* request, ::TempoScripting::Empty* response, std::function<void(::grpc::Status)>) = 0;
      virtual void OpenLevel(::grpc::ClientContext* context, const ::TempoCoreEditor::OpenLevelRequest* request, ::TempoScripting::Empty* response, ::grpc::ClientUnaryReactor* reactor) = 0;
      virtual void NewLevel(::grpc::ClientContext* context, const ::TempoScripting::Empty* request, ::TempoScripting::Empty* response, std::function<void(::grpc::Status)>) = 0;
      virtual void NewLevel(::grpc::ClientContext* context, const ::TempoScripting::Empty* request, ::TempoScripting::Empty* response, ::grpc::ClientUnaryReactor* reactor) = 0;
    };
    typedef class async_interface experimental_async_interface;
    virtual class async_interface* async() { return nullptr; }
    class async_interface* experimental_async() { return async(); }
   private:
    virtual ::grpc::ClientAsyncResponseReaderInterface< ::TempoScripting::Empty>* AsyncPlayInEditorRaw(::grpc::ClientContext* context, const ::TempoScripting::Empty& request, ::grpc::CompletionQueue* cq) = 0;
    virtual ::grpc::ClientAsyncResponseReaderInterface< ::TempoScripting::Empty>* PrepareAsyncPlayInEditorRaw(::grpc::ClientContext* context, const ::TempoScripting::Empty& request, ::grpc::CompletionQueue* cq) = 0;
    virtual ::grpc::ClientAsyncResponseReaderInterface< ::TempoScripting::Empty>* AsyncSimulateRaw(::grpc::ClientContext* context, const ::TempoScripting::Empty& request, ::grpc::CompletionQueue* cq) = 0;
    virtual ::grpc::ClientAsyncResponseReaderInterface< ::TempoScripting::Empty>* PrepareAsyncSimulateRaw(::grpc::ClientContext* context, const ::TempoScripting::Empty& request, ::grpc::CompletionQueue* cq) = 0;
    virtual ::grpc::ClientAsyncResponseReaderInterface< ::TempoScripting::Empty>* AsyncStopRaw(::grpc::ClientContext* context, const ::TempoScripting::Empty& request, ::grpc::CompletionQueue* cq) = 0;
    virtual ::grpc::ClientAsyncResponseReaderInterface< ::TempoScripting::Empty>* PrepareAsyncStopRaw(::grpc::ClientContext* context, const ::TempoScripting::Empty& request, ::grpc::CompletionQueue* cq) = 0;
    virtual ::grpc::ClientAsyncResponseReaderInterface< ::TempoScripting::Empty>* AsyncSaveLevelRaw(::grpc::ClientContext* context, const ::TempoCoreEditor::SaveLevelRequest& request, ::grpc::CompletionQueue* cq) = 0;
    virtual ::grpc::ClientAsyncResponseReaderInterface< ::TempoScripting::Empty>* PrepareAsyncSaveLevelRaw(::grpc::ClientContext* context, const ::TempoCoreEditor::SaveLevelRequest& request, ::grpc::CompletionQueue* cq) = 0;
    virtual ::grpc::ClientAsyncResponseReaderInterface< ::TempoScripting::Empty>* AsyncOpenLevelRaw(::grpc::ClientContext* context, const ::TempoCoreEditor::OpenLevelRequest& request, ::grpc::CompletionQueue* cq) = 0;
    virtual ::grpc::ClientAsyncResponseReaderInterface< ::TempoScripting::Empty>* PrepareAsyncOpenLevelRaw(::grpc::ClientContext* context, const ::TempoCoreEditor::OpenLevelRequest& request, ::grpc::CompletionQueue* cq) = 0;
    virtual ::grpc::ClientAsyncResponseReaderInterface< ::TempoScripting::Empty>* AsyncNewLevelRaw(::grpc::ClientContext* context, const ::TempoScripting::Empty& request, ::grpc::CompletionQueue* cq) = 0;
    virtual ::grpc::ClientAsyncResponseReaderInterface< ::TempoScripting::Empty>* PrepareAsyncNewLevelRaw(::grpc::ClientContext* context, const ::TempoScripting::Empty& request, ::grpc::CompletionQueue* cq) = 0;
  };
  class Stub final : public StubInterface {
   public:
    Stub(const std::shared_ptr< ::grpc::ChannelInterface>& channel, const ::grpc::StubOptions& options = ::grpc::StubOptions());
    ::grpc::Status PlayInEditor(::grpc::ClientContext* context, const ::TempoScripting::Empty& request, ::TempoScripting::Empty* response) override;
    std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::TempoScripting::Empty>> AsyncPlayInEditor(::grpc::ClientContext* context, const ::TempoScripting::Empty& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::TempoScripting::Empty>>(AsyncPlayInEditorRaw(context, request, cq));
    }
    std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::TempoScripting::Empty>> PrepareAsyncPlayInEditor(::grpc::ClientContext* context, const ::TempoScripting::Empty& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::TempoScripting::Empty>>(PrepareAsyncPlayInEditorRaw(context, request, cq));
    }
    ::grpc::Status Simulate(::grpc::ClientContext* context, const ::TempoScripting::Empty& request, ::TempoScripting::Empty* response) override;
    std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::TempoScripting::Empty>> AsyncSimulate(::grpc::ClientContext* context, const ::TempoScripting::Empty& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::TempoScripting::Empty>>(AsyncSimulateRaw(context, request, cq));
    }
    std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::TempoScripting::Empty>> PrepareAsyncSimulate(::grpc::ClientContext* context, const ::TempoScripting::Empty& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::TempoScripting::Empty>>(PrepareAsyncSimulateRaw(context, request, cq));
    }
    ::grpc::Status Stop(::grpc::ClientContext* context, const ::TempoScripting::Empty& request, ::TempoScripting::Empty* response) override;
    std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::TempoScripting::Empty>> AsyncStop(::grpc::ClientContext* context, const ::TempoScripting::Empty& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::TempoScripting::Empty>>(AsyncStopRaw(context, request, cq));
    }
    std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::TempoScripting::Empty>> PrepareAsyncStop(::grpc::ClientContext* context, const ::TempoScripting::Empty& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::TempoScripting::Empty>>(PrepareAsyncStopRaw(context, request, cq));
    }
    ::grpc::Status SaveLevel(::grpc::ClientContext* context, const ::TempoCoreEditor::SaveLevelRequest& request, ::TempoScripting::Empty* response) override;
    std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::TempoScripting::Empty>> AsyncSaveLevel(::grpc::ClientContext* context, const ::TempoCoreEditor::SaveLevelRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::TempoScripting::Empty>>(AsyncSaveLevelRaw(context, request, cq));
    }
    std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::TempoScripting::Empty>> PrepareAsyncSaveLevel(::grpc::ClientContext* context, const ::TempoCoreEditor::SaveLevelRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::TempoScripting::Empty>>(PrepareAsyncSaveLevelRaw(context, request, cq));
    }
    ::grpc::Status OpenLevel(::grpc::ClientContext* context, const ::TempoCoreEditor::OpenLevelRequest& request, ::TempoScripting::Empty* response) override;
    std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::TempoScripting::Empty>> AsyncOpenLevel(::grpc::ClientContext* context, const ::TempoCoreEditor::OpenLevelRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::TempoScripting::Empty>>(AsyncOpenLevelRaw(context, request, cq));
    }
    std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::TempoScripting::Empty>> PrepareAsyncOpenLevel(::grpc::ClientContext* context, const ::TempoCoreEditor::OpenLevelRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::TempoScripting::Empty>>(PrepareAsyncOpenLevelRaw(context, request, cq));
    }
    ::grpc::Status NewLevel(::grpc::ClientContext* context, const ::TempoScripting::Empty& request, ::TempoScripting::Empty* response) override;
    std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::TempoScripting::Empty>> AsyncNewLevel(::grpc::ClientContext* context, const ::TempoScripting::Empty& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::TempoScripting::Empty>>(AsyncNewLevelRaw(context, request, cq));
    }
    std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::TempoScripting::Empty>> PrepareAsyncNewLevel(::grpc::ClientContext* context, const ::TempoScripting::Empty& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::TempoScripting::Empty>>(PrepareAsyncNewLevelRaw(context, request, cq));
    }
    class async final :
      public StubInterface::async_interface {
     public:
      void PlayInEditor(::grpc::ClientContext* context, const ::TempoScripting::Empty* request, ::TempoScripting::Empty* response, std::function<void(::grpc::Status)>) override;
      void PlayInEditor(::grpc::ClientContext* context, const ::TempoScripting::Empty* request, ::TempoScripting::Empty* response, ::grpc::ClientUnaryReactor* reactor) override;
      void Simulate(::grpc::ClientContext* context, const ::TempoScripting::Empty* request, ::TempoScripting::Empty* response, std::function<void(::grpc::Status)>) override;
      void Simulate(::grpc::ClientContext* context, const ::TempoScripting::Empty* request, ::TempoScripting::Empty* response, ::grpc::ClientUnaryReactor* reactor) override;
      void Stop(::grpc::ClientContext* context, const ::TempoScripting::Empty* request, ::TempoScripting::Empty* response, std::function<void(::grpc::Status)>) override;
      void Stop(::grpc::ClientContext* context, const ::TempoScripting::Empty* request, ::TempoScripting::Empty* response, ::grpc::ClientUnaryReactor* reactor) override;
      void SaveLevel(::grpc::ClientContext* context, const ::TempoCoreEditor::SaveLevelRequest* request, ::TempoScripting::Empty* response, std::function<void(::grpc::Status)>) override;
      void SaveLevel(::grpc::ClientContext* context, const ::TempoCoreEditor::SaveLevelRequest* request, ::TempoScripting::Empty* response, ::grpc::ClientUnaryReactor* reactor) override;
      void OpenLevel(::grpc::ClientContext* context, const ::TempoCoreEditor::OpenLevelRequest* request, ::TempoScripting::Empty* response, std::function<void(::grpc::Status)>) override;
      void OpenLevel(::grpc::ClientContext* context, const ::TempoCoreEditor::OpenLevelRequest* request, ::TempoScripting::Empty* response, ::grpc::ClientUnaryReactor* reactor) override;
      void NewLevel(::grpc::ClientContext* context, const ::TempoScripting::Empty* request, ::TempoScripting::Empty* response, std::function<void(::grpc::Status)>) override;
      void NewLevel(::grpc::ClientContext* context, const ::TempoScripting::Empty* request, ::TempoScripting::Empty* response, ::grpc::ClientUnaryReactor* reactor) override;
     private:
      friend class Stub;
      explicit async(Stub* stub): stub_(stub) { }
      Stub* stub() { return stub_; }
      Stub* stub_;
    };
    class async* async() override { return &async_stub_; }

   private:
    std::shared_ptr< ::grpc::ChannelInterface> channel_;
    class async async_stub_{this};
    ::grpc::ClientAsyncResponseReader< ::TempoScripting::Empty>* AsyncPlayInEditorRaw(::grpc::ClientContext* context, const ::TempoScripting::Empty& request, ::grpc::CompletionQueue* cq) override;
    ::grpc::ClientAsyncResponseReader< ::TempoScripting::Empty>* PrepareAsyncPlayInEditorRaw(::grpc::ClientContext* context, const ::TempoScripting::Empty& request, ::grpc::CompletionQueue* cq) override;
    ::grpc::ClientAsyncResponseReader< ::TempoScripting::Empty>* AsyncSimulateRaw(::grpc::ClientContext* context, const ::TempoScripting::Empty& request, ::grpc::CompletionQueue* cq) override;
    ::grpc::ClientAsyncResponseReader< ::TempoScripting::Empty>* PrepareAsyncSimulateRaw(::grpc::ClientContext* context, const ::TempoScripting::Empty& request, ::grpc::CompletionQueue* cq) override;
    ::grpc::ClientAsyncResponseReader< ::TempoScripting::Empty>* AsyncStopRaw(::grpc::ClientContext* context, const ::TempoScripting::Empty& request, ::grpc::CompletionQueue* cq) override;
    ::grpc::ClientAsyncResponseReader< ::TempoScripting::Empty>* PrepareAsyncStopRaw(::grpc::ClientContext* context, const ::TempoScripting::Empty& request, ::grpc::CompletionQueue* cq) override;
    ::grpc::ClientAsyncResponseReader< ::TempoScripting::Empty>* AsyncSaveLevelRaw(::grpc::ClientContext* context, const ::TempoCoreEditor::SaveLevelRequest& request, ::grpc::CompletionQueue* cq) override;
    ::grpc::ClientAsyncResponseReader< ::TempoScripting::Empty>* PrepareAsyncSaveLevelRaw(::grpc::ClientContext* context, const ::TempoCoreEditor::SaveLevelRequest& request, ::grpc::CompletionQueue* cq) override;
    ::grpc::ClientAsyncResponseReader< ::TempoScripting::Empty>* AsyncOpenLevelRaw(::grpc::ClientContext* context, const ::TempoCoreEditor::OpenLevelRequest& request, ::grpc::CompletionQueue* cq) override;
    ::grpc::ClientAsyncResponseReader< ::TempoScripting::Empty>* PrepareAsyncOpenLevelRaw(::grpc::ClientContext* context, const ::TempoCoreEditor::OpenLevelRequest& request, ::grpc::CompletionQueue* cq) override;
    ::grpc::ClientAsyncResponseReader< ::TempoScripting::Empty>* AsyncNewLevelRaw(::grpc::ClientContext* context, const ::TempoScripting::Empty& request, ::grpc::CompletionQueue* cq) override;
    ::grpc::ClientAsyncResponseReader< ::TempoScripting::Empty>* PrepareAsyncNewLevelRaw(::grpc::ClientContext* context, const ::TempoScripting::Empty& request, ::grpc::CompletionQueue* cq) override;
    const ::grpc::internal::RpcMethod rpcmethod_PlayInEditor_;
    const ::grpc::internal::RpcMethod rpcmethod_Simulate_;
    const ::grpc::internal::RpcMethod rpcmethod_Stop_;
    const ::grpc::internal::RpcMethod rpcmethod_SaveLevel_;
    const ::grpc::internal::RpcMethod rpcmethod_OpenLevel_;
    const ::grpc::internal::RpcMethod rpcmethod_NewLevel_;
  };
  static std::unique_ptr<Stub> NewStub(const std::shared_ptr< ::grpc::ChannelInterface>& channel, const ::grpc::StubOptions& options = ::grpc::StubOptions());

  class Service : public ::grpc::Service {
   public:
    Service();
    virtual ~Service();
    virtual ::grpc::Status PlayInEditor(::grpc::ServerContext* context, const ::TempoScripting::Empty* request, ::TempoScripting::Empty* response);
    virtual ::grpc::Status Simulate(::grpc::ServerContext* context, const ::TempoScripting::Empty* request, ::TempoScripting::Empty* response);
    virtual ::grpc::Status Stop(::grpc::ServerContext* context, const ::TempoScripting::Empty* request, ::TempoScripting::Empty* response);
    virtual ::grpc::Status SaveLevel(::grpc::ServerContext* context, const ::TempoCoreEditor::SaveLevelRequest* request, ::TempoScripting::Empty* response);
    virtual ::grpc::Status OpenLevel(::grpc::ServerContext* context, const ::TempoCoreEditor::OpenLevelRequest* request, ::TempoScripting::Empty* response);
    virtual ::grpc::Status NewLevel(::grpc::ServerContext* context, const ::TempoScripting::Empty* request, ::TempoScripting::Empty* response);
  };
  template <class BaseClass>
  class WithAsyncMethod_PlayInEditor : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithAsyncMethod_PlayInEditor() {
      ::grpc::Service::MarkMethodAsync(0);
    }
    ~WithAsyncMethod_PlayInEditor() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status PlayInEditor(::grpc::ServerContext* /*context*/, const ::TempoScripting::Empty* /*request*/, ::TempoScripting::Empty* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    void RequestPlayInEditor(::grpc::ServerContext* context, ::TempoScripting::Empty* request, ::grpc::ServerAsyncResponseWriter< ::TempoScripting::Empty>* response, ::grpc::CompletionQueue* new_call_cq, ::grpc::ServerCompletionQueue* notification_cq, void *tag) {
      ::grpc::Service::RequestAsyncUnary(0, context, request, response, new_call_cq, notification_cq, tag);
    }
  };
  template <class BaseClass>
  class WithAsyncMethod_Simulate : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithAsyncMethod_Simulate() {
      ::grpc::Service::MarkMethodAsync(1);
    }
    ~WithAsyncMethod_Simulate() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status Simulate(::grpc::ServerContext* /*context*/, const ::TempoScripting::Empty* /*request*/, ::TempoScripting::Empty* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    void RequestSimulate(::grpc::ServerContext* context, ::TempoScripting::Empty* request, ::grpc::ServerAsyncResponseWriter< ::TempoScripting::Empty>* response, ::grpc::CompletionQueue* new_call_cq, ::grpc::ServerCompletionQueue* notification_cq, void *tag) {
      ::grpc::Service::RequestAsyncUnary(1, context, request, response, new_call_cq, notification_cq, tag);
    }
  };
  template <class BaseClass>
  class WithAsyncMethod_Stop : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithAsyncMethod_Stop() {
      ::grpc::Service::MarkMethodAsync(2);
    }
    ~WithAsyncMethod_Stop() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status Stop(::grpc::ServerContext* /*context*/, const ::TempoScripting::Empty* /*request*/, ::TempoScripting::Empty* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    void RequestStop(::grpc::ServerContext* context, ::TempoScripting::Empty* request, ::grpc::ServerAsyncResponseWriter< ::TempoScripting::Empty>* response, ::grpc::CompletionQueue* new_call_cq, ::grpc::ServerCompletionQueue* notification_cq, void *tag) {
      ::grpc::Service::RequestAsyncUnary(2, context, request, response, new_call_cq, notification_cq, tag);
    }
  };
  template <class BaseClass>
  class WithAsyncMethod_SaveLevel : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithAsyncMethod_SaveLevel() {
      ::grpc::Service::MarkMethodAsync(3);
    }
    ~WithAsyncMethod_SaveLevel() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status SaveLevel(::grpc::ServerContext* /*context*/, const ::TempoCoreEditor::SaveLevelRequest* /*request*/, ::TempoScripting::Empty* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    void RequestSaveLevel(::grpc::ServerContext* context, ::TempoCoreEditor::SaveLevelRequest* request, ::grpc::ServerAsyncResponseWriter< ::TempoScripting::Empty>* response, ::grpc::CompletionQueue* new_call_cq, ::grpc::ServerCompletionQueue* notification_cq, void *tag) {
      ::grpc::Service::RequestAsyncUnary(3, context, request, response, new_call_cq, notification_cq, tag);
    }
  };
  template <class BaseClass>
  class WithAsyncMethod_OpenLevel : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithAsyncMethod_OpenLevel() {
      ::grpc::Service::MarkMethodAsync(4);
    }
    ~WithAsyncMethod_OpenLevel() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status OpenLevel(::grpc::ServerContext* /*context*/, const ::TempoCoreEditor::OpenLevelRequest* /*request*/, ::TempoScripting::Empty* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    void RequestOpenLevel(::grpc::ServerContext* context, ::TempoCoreEditor::OpenLevelRequest* request, ::grpc::ServerAsyncResponseWriter< ::TempoScripting::Empty>* response, ::grpc::CompletionQueue* new_call_cq, ::grpc::ServerCompletionQueue* notification_cq, void *tag) {
      ::grpc::Service::RequestAsyncUnary(4, context, request, response, new_call_cq, notification_cq, tag);
    }
  };
  template <class BaseClass>
  class WithAsyncMethod_NewLevel : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithAsyncMethod_NewLevel() {
      ::grpc::Service::MarkMethodAsync(5);
    }
    ~WithAsyncMethod_NewLevel() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status NewLevel(::grpc::ServerContext* /*context*/, const ::TempoScripting::Empty* /*request*/, ::TempoScripting::Empty* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    void RequestNewLevel(::grpc::ServerContext* context, ::TempoScripting::Empty* request, ::grpc::ServerAsyncResponseWriter< ::TempoScripting::Empty>* response, ::grpc::CompletionQueue* new_call_cq, ::grpc::ServerCompletionQueue* notification_cq, void *tag) {
      ::grpc::Service::RequestAsyncUnary(5, context, request, response, new_call_cq, notification_cq, tag);
    }
  };
  typedef WithAsyncMethod_PlayInEditor<WithAsyncMethod_Simulate<WithAsyncMethod_Stop<WithAsyncMethod_SaveLevel<WithAsyncMethod_OpenLevel<WithAsyncMethod_NewLevel<Service > > > > > > AsyncService;
  template <class BaseClass>
  class WithCallbackMethod_PlayInEditor : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithCallbackMethod_PlayInEditor() {
      ::grpc::Service::MarkMethodCallback(0,
          new ::grpc::internal::CallbackUnaryHandler< ::TempoScripting::Empty, ::TempoScripting::Empty>(
            [this](
                   ::grpc::CallbackServerContext* context, const ::TempoScripting::Empty* request, ::TempoScripting::Empty* response) { return this->PlayInEditor(context, request, response); }));}
    void SetMessageAllocatorFor_PlayInEditor(
        ::grpc::MessageAllocator< ::TempoScripting::Empty, ::TempoScripting::Empty>* allocator) {
      ::grpc::internal::MethodHandler* const handler = ::grpc::Service::GetHandler(0);
      static_cast<::grpc::internal::CallbackUnaryHandler< ::TempoScripting::Empty, ::TempoScripting::Empty>*>(handler)
              ->SetMessageAllocator(allocator);
    }
    ~WithCallbackMethod_PlayInEditor() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status PlayInEditor(::grpc::ServerContext* /*context*/, const ::TempoScripting::Empty* /*request*/, ::TempoScripting::Empty* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    virtual ::grpc::ServerUnaryReactor* PlayInEditor(
      ::grpc::CallbackServerContext* /*context*/, const ::TempoScripting::Empty* /*request*/, ::TempoScripting::Empty* /*response*/)  { return nullptr; }
  };
  template <class BaseClass>
  class WithCallbackMethod_Simulate : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithCallbackMethod_Simulate() {
      ::grpc::Service::MarkMethodCallback(1,
          new ::grpc::internal::CallbackUnaryHandler< ::TempoScripting::Empty, ::TempoScripting::Empty>(
            [this](
                   ::grpc::CallbackServerContext* context, const ::TempoScripting::Empty* request, ::TempoScripting::Empty* response) { return this->Simulate(context, request, response); }));}
    void SetMessageAllocatorFor_Simulate(
        ::grpc::MessageAllocator< ::TempoScripting::Empty, ::TempoScripting::Empty>* allocator) {
      ::grpc::internal::MethodHandler* const handler = ::grpc::Service::GetHandler(1);
      static_cast<::grpc::internal::CallbackUnaryHandler< ::TempoScripting::Empty, ::TempoScripting::Empty>*>(handler)
              ->SetMessageAllocator(allocator);
    }
    ~WithCallbackMethod_Simulate() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status Simulate(::grpc::ServerContext* /*context*/, const ::TempoScripting::Empty* /*request*/, ::TempoScripting::Empty* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    virtual ::grpc::ServerUnaryReactor* Simulate(
      ::grpc::CallbackServerContext* /*context*/, const ::TempoScripting::Empty* /*request*/, ::TempoScripting::Empty* /*response*/)  { return nullptr; }
  };
  template <class BaseClass>
  class WithCallbackMethod_Stop : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithCallbackMethod_Stop() {
      ::grpc::Service::MarkMethodCallback(2,
          new ::grpc::internal::CallbackUnaryHandler< ::TempoScripting::Empty, ::TempoScripting::Empty>(
            [this](
                   ::grpc::CallbackServerContext* context, const ::TempoScripting::Empty* request, ::TempoScripting::Empty* response) { return this->Stop(context, request, response); }));}
    void SetMessageAllocatorFor_Stop(
        ::grpc::MessageAllocator< ::TempoScripting::Empty, ::TempoScripting::Empty>* allocator) {
      ::grpc::internal::MethodHandler* const handler = ::grpc::Service::GetHandler(2);
      static_cast<::grpc::internal::CallbackUnaryHandler< ::TempoScripting::Empty, ::TempoScripting::Empty>*>(handler)
              ->SetMessageAllocator(allocator);
    }
    ~WithCallbackMethod_Stop() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status Stop(::grpc::ServerContext* /*context*/, const ::TempoScripting::Empty* /*request*/, ::TempoScripting::Empty* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    virtual ::grpc::ServerUnaryReactor* Stop(
      ::grpc::CallbackServerContext* /*context*/, const ::TempoScripting::Empty* /*request*/, ::TempoScripting::Empty* /*response*/)  { return nullptr; }
  };
  template <class BaseClass>
  class WithCallbackMethod_SaveLevel : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithCallbackMethod_SaveLevel() {
      ::grpc::Service::MarkMethodCallback(3,
          new ::grpc::internal::CallbackUnaryHandler< ::TempoCoreEditor::SaveLevelRequest, ::TempoScripting::Empty>(
            [this](
                   ::grpc::CallbackServerContext* context, const ::TempoCoreEditor::SaveLevelRequest* request, ::TempoScripting::Empty* response) { return this->SaveLevel(context, request, response); }));}
    void SetMessageAllocatorFor_SaveLevel(
        ::grpc::MessageAllocator< ::TempoCoreEditor::SaveLevelRequest, ::TempoScripting::Empty>* allocator) {
      ::grpc::internal::MethodHandler* const handler = ::grpc::Service::GetHandler(3);
      static_cast<::grpc::internal::CallbackUnaryHandler< ::TempoCoreEditor::SaveLevelRequest, ::TempoScripting::Empty>*>(handler)
              ->SetMessageAllocator(allocator);
    }
    ~WithCallbackMethod_SaveLevel() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status SaveLevel(::grpc::ServerContext* /*context*/, const ::TempoCoreEditor::SaveLevelRequest* /*request*/, ::TempoScripting::Empty* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    virtual ::grpc::ServerUnaryReactor* SaveLevel(
      ::grpc::CallbackServerContext* /*context*/, const ::TempoCoreEditor::SaveLevelRequest* /*request*/, ::TempoScripting::Empty* /*response*/)  { return nullptr; }
  };
  template <class BaseClass>
  class WithCallbackMethod_OpenLevel : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithCallbackMethod_OpenLevel() {
      ::grpc::Service::MarkMethodCallback(4,
          new ::grpc::internal::CallbackUnaryHandler< ::TempoCoreEditor::OpenLevelRequest, ::TempoScripting::Empty>(
            [this](
                   ::grpc::CallbackServerContext* context, const ::TempoCoreEditor::OpenLevelRequest* request, ::TempoScripting::Empty* response) { return this->OpenLevel(context, request, response); }));}
    void SetMessageAllocatorFor_OpenLevel(
        ::grpc::MessageAllocator< ::TempoCoreEditor::OpenLevelRequest, ::TempoScripting::Empty>* allocator) {
      ::grpc::internal::MethodHandler* const handler = ::grpc::Service::GetHandler(4);
      static_cast<::grpc::internal::CallbackUnaryHandler< ::TempoCoreEditor::OpenLevelRequest, ::TempoScripting::Empty>*>(handler)
              ->SetMessageAllocator(allocator);
    }
    ~WithCallbackMethod_OpenLevel() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status OpenLevel(::grpc::ServerContext* /*context*/, const ::TempoCoreEditor::OpenLevelRequest* /*request*/, ::TempoScripting::Empty* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    virtual ::grpc::ServerUnaryReactor* OpenLevel(
      ::grpc::CallbackServerContext* /*context*/, const ::TempoCoreEditor::OpenLevelRequest* /*request*/, ::TempoScripting::Empty* /*response*/)  { return nullptr; }
  };
  template <class BaseClass>
  class WithCallbackMethod_NewLevel : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithCallbackMethod_NewLevel() {
      ::grpc::Service::MarkMethodCallback(5,
          new ::grpc::internal::CallbackUnaryHandler< ::TempoScripting::Empty, ::TempoScripting::Empty>(
            [this](
                   ::grpc::CallbackServerContext* context, const ::TempoScripting::Empty* request, ::TempoScripting::Empty* response) { return this->NewLevel(context, request, response); }));}
    void SetMessageAllocatorFor_NewLevel(
        ::grpc::MessageAllocator< ::TempoScripting::Empty, ::TempoScripting::Empty>* allocator) {
      ::grpc::internal::MethodHandler* const handler = ::grpc::Service::GetHandler(5);
      static_cast<::grpc::internal::CallbackUnaryHandler< ::TempoScripting::Empty, ::TempoScripting::Empty>*>(handler)
              ->SetMessageAllocator(allocator);
    }
    ~WithCallbackMethod_NewLevel() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status NewLevel(::grpc::ServerContext* /*context*/, const ::TempoScripting::Empty* /*request*/, ::TempoScripting::Empty* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    virtual ::grpc::ServerUnaryReactor* NewLevel(
      ::grpc::CallbackServerContext* /*context*/, const ::TempoScripting::Empty* /*request*/, ::TempoScripting::Empty* /*response*/)  { return nullptr; }
  };
  typedef WithCallbackMethod_PlayInEditor<WithCallbackMethod_Simulate<WithCallbackMethod_Stop<WithCallbackMethod_SaveLevel<WithCallbackMethod_OpenLevel<WithCallbackMethod_NewLevel<Service > > > > > > CallbackService;
  typedef CallbackService ExperimentalCallbackService;
  template <class BaseClass>
  class WithGenericMethod_PlayInEditor : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithGenericMethod_PlayInEditor() {
      ::grpc::Service::MarkMethodGeneric(0);
    }
    ~WithGenericMethod_PlayInEditor() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status PlayInEditor(::grpc::ServerContext* /*context*/, const ::TempoScripting::Empty* /*request*/, ::TempoScripting::Empty* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
  };
  template <class BaseClass>
  class WithGenericMethod_Simulate : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithGenericMethod_Simulate() {
      ::grpc::Service::MarkMethodGeneric(1);
    }
    ~WithGenericMethod_Simulate() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status Simulate(::grpc::ServerContext* /*context*/, const ::TempoScripting::Empty* /*request*/, ::TempoScripting::Empty* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
  };
  template <class BaseClass>
  class WithGenericMethod_Stop : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithGenericMethod_Stop() {
      ::grpc::Service::MarkMethodGeneric(2);
    }
    ~WithGenericMethod_Stop() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status Stop(::grpc::ServerContext* /*context*/, const ::TempoScripting::Empty* /*request*/, ::TempoScripting::Empty* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
  };
  template <class BaseClass>
  class WithGenericMethod_SaveLevel : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithGenericMethod_SaveLevel() {
      ::grpc::Service::MarkMethodGeneric(3);
    }
    ~WithGenericMethod_SaveLevel() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status SaveLevel(::grpc::ServerContext* /*context*/, const ::TempoCoreEditor::SaveLevelRequest* /*request*/, ::TempoScripting::Empty* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
  };
  template <class BaseClass>
  class WithGenericMethod_OpenLevel : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithGenericMethod_OpenLevel() {
      ::grpc::Service::MarkMethodGeneric(4);
    }
    ~WithGenericMethod_OpenLevel() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status OpenLevel(::grpc::ServerContext* /*context*/, const ::TempoCoreEditor::OpenLevelRequest* /*request*/, ::TempoScripting::Empty* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
  };
  template <class BaseClass>
  class WithGenericMethod_NewLevel : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithGenericMethod_NewLevel() {
      ::grpc::Service::MarkMethodGeneric(5);
    }
    ~WithGenericMethod_NewLevel() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status NewLevel(::grpc::ServerContext* /*context*/, const ::TempoScripting::Empty* /*request*/, ::TempoScripting::Empty* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
  };
  template <class BaseClass>
  class WithRawMethod_PlayInEditor : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithRawMethod_PlayInEditor() {
      ::grpc::Service::MarkMethodRaw(0);
    }
    ~WithRawMethod_PlayInEditor() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status PlayInEditor(::grpc::ServerContext* /*context*/, const ::TempoScripting::Empty* /*request*/, ::TempoScripting::Empty* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    void RequestPlayInEditor(::grpc::ServerContext* context, ::grpc::ByteBuffer* request, ::grpc::ServerAsyncResponseWriter< ::grpc::ByteBuffer>* response, ::grpc::CompletionQueue* new_call_cq, ::grpc::ServerCompletionQueue* notification_cq, void *tag) {
      ::grpc::Service::RequestAsyncUnary(0, context, request, response, new_call_cq, notification_cq, tag);
    }
  };
  template <class BaseClass>
  class WithRawMethod_Simulate : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithRawMethod_Simulate() {
      ::grpc::Service::MarkMethodRaw(1);
    }
    ~WithRawMethod_Simulate() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status Simulate(::grpc::ServerContext* /*context*/, const ::TempoScripting::Empty* /*request*/, ::TempoScripting::Empty* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    void RequestSimulate(::grpc::ServerContext* context, ::grpc::ByteBuffer* request, ::grpc::ServerAsyncResponseWriter< ::grpc::ByteBuffer>* response, ::grpc::CompletionQueue* new_call_cq, ::grpc::ServerCompletionQueue* notification_cq, void *tag) {
      ::grpc::Service::RequestAsyncUnary(1, context, request, response, new_call_cq, notification_cq, tag);
    }
  };
  template <class BaseClass>
  class WithRawMethod_Stop : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithRawMethod_Stop() {
      ::grpc::Service::MarkMethodRaw(2);
    }
    ~WithRawMethod_Stop() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status Stop(::grpc::ServerContext* /*context*/, const ::TempoScripting::Empty* /*request*/, ::TempoScripting::Empty* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    void RequestStop(::grpc::ServerContext* context, ::grpc::ByteBuffer* request, ::grpc::ServerAsyncResponseWriter< ::grpc::ByteBuffer>* response, ::grpc::CompletionQueue* new_call_cq, ::grpc::ServerCompletionQueue* notification_cq, void *tag) {
      ::grpc::Service::RequestAsyncUnary(2, context, request, response, new_call_cq, notification_cq, tag);
    }
  };
  template <class BaseClass>
  class WithRawMethod_SaveLevel : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithRawMethod_SaveLevel() {
      ::grpc::Service::MarkMethodRaw(3);
    }
    ~WithRawMethod_SaveLevel() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status SaveLevel(::grpc::ServerContext* /*context*/, const ::TempoCoreEditor::SaveLevelRequest* /*request*/, ::TempoScripting::Empty* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    void RequestSaveLevel(::grpc::ServerContext* context, ::grpc::ByteBuffer* request, ::grpc::ServerAsyncResponseWriter< ::grpc::ByteBuffer>* response, ::grpc::CompletionQueue* new_call_cq, ::grpc::ServerCompletionQueue* notification_cq, void *tag) {
      ::grpc::Service::RequestAsyncUnary(3, context, request, response, new_call_cq, notification_cq, tag);
    }
  };
  template <class BaseClass>
  class WithRawMethod_OpenLevel : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithRawMethod_OpenLevel() {
      ::grpc::Service::MarkMethodRaw(4);
    }
    ~WithRawMethod_OpenLevel() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status OpenLevel(::grpc::ServerContext* /*context*/, const ::TempoCoreEditor::OpenLevelRequest* /*request*/, ::TempoScripting::Empty* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    void RequestOpenLevel(::grpc::ServerContext* context, ::grpc::ByteBuffer* request, ::grpc::ServerAsyncResponseWriter< ::grpc::ByteBuffer>* response, ::grpc::CompletionQueue* new_call_cq, ::grpc::ServerCompletionQueue* notification_cq, void *tag) {
      ::grpc::Service::RequestAsyncUnary(4, context, request, response, new_call_cq, notification_cq, tag);
    }
  };
  template <class BaseClass>
  class WithRawMethod_NewLevel : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithRawMethod_NewLevel() {
      ::grpc::Service::MarkMethodRaw(5);
    }
    ~WithRawMethod_NewLevel() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status NewLevel(::grpc::ServerContext* /*context*/, const ::TempoScripting::Empty* /*request*/, ::TempoScripting::Empty* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    void RequestNewLevel(::grpc::ServerContext* context, ::grpc::ByteBuffer* request, ::grpc::ServerAsyncResponseWriter< ::grpc::ByteBuffer>* response, ::grpc::CompletionQueue* new_call_cq, ::grpc::ServerCompletionQueue* notification_cq, void *tag) {
      ::grpc::Service::RequestAsyncUnary(5, context, request, response, new_call_cq, notification_cq, tag);
    }
  };
  template <class BaseClass>
  class WithRawCallbackMethod_PlayInEditor : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithRawCallbackMethod_PlayInEditor() {
      ::grpc::Service::MarkMethodRawCallback(0,
          new ::grpc::internal::CallbackUnaryHandler< ::grpc::ByteBuffer, ::grpc::ByteBuffer>(
            [this](
                   ::grpc::CallbackServerContext* context, const ::grpc::ByteBuffer* request, ::grpc::ByteBuffer* response) { return this->PlayInEditor(context, request, response); }));
    }
    ~WithRawCallbackMethod_PlayInEditor() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status PlayInEditor(::grpc::ServerContext* /*context*/, const ::TempoScripting::Empty* /*request*/, ::TempoScripting::Empty* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    virtual ::grpc::ServerUnaryReactor* PlayInEditor(
      ::grpc::CallbackServerContext* /*context*/, const ::grpc::ByteBuffer* /*request*/, ::grpc::ByteBuffer* /*response*/)  { return nullptr; }
  };
  template <class BaseClass>
  class WithRawCallbackMethod_Simulate : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithRawCallbackMethod_Simulate() {
      ::grpc::Service::MarkMethodRawCallback(1,
          new ::grpc::internal::CallbackUnaryHandler< ::grpc::ByteBuffer, ::grpc::ByteBuffer>(
            [this](
                   ::grpc::CallbackServerContext* context, const ::grpc::ByteBuffer* request, ::grpc::ByteBuffer* response) { return this->Simulate(context, request, response); }));
    }
    ~WithRawCallbackMethod_Simulate() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status Simulate(::grpc::ServerContext* /*context*/, const ::TempoScripting::Empty* /*request*/, ::TempoScripting::Empty* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    virtual ::grpc::ServerUnaryReactor* Simulate(
      ::grpc::CallbackServerContext* /*context*/, const ::grpc::ByteBuffer* /*request*/, ::grpc::ByteBuffer* /*response*/)  { return nullptr; }
  };
  template <class BaseClass>
  class WithRawCallbackMethod_Stop : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithRawCallbackMethod_Stop() {
      ::grpc::Service::MarkMethodRawCallback(2,
          new ::grpc::internal::CallbackUnaryHandler< ::grpc::ByteBuffer, ::grpc::ByteBuffer>(
            [this](
                   ::grpc::CallbackServerContext* context, const ::grpc::ByteBuffer* request, ::grpc::ByteBuffer* response) { return this->Stop(context, request, response); }));
    }
    ~WithRawCallbackMethod_Stop() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status Stop(::grpc::ServerContext* /*context*/, const ::TempoScripting::Empty* /*request*/, ::TempoScripting::Empty* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    virtual ::grpc::ServerUnaryReactor* Stop(
      ::grpc::CallbackServerContext* /*context*/, const ::grpc::ByteBuffer* /*request*/, ::grpc::ByteBuffer* /*response*/)  { return nullptr; }
  };
  template <class BaseClass>
  class WithRawCallbackMethod_SaveLevel : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithRawCallbackMethod_SaveLevel() {
      ::grpc::Service::MarkMethodRawCallback(3,
          new ::grpc::internal::CallbackUnaryHandler< ::grpc::ByteBuffer, ::grpc::ByteBuffer>(
            [this](
                   ::grpc::CallbackServerContext* context, const ::grpc::ByteBuffer* request, ::grpc::ByteBuffer* response) { return this->SaveLevel(context, request, response); }));
    }
    ~WithRawCallbackMethod_SaveLevel() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status SaveLevel(::grpc::ServerContext* /*context*/, const ::TempoCoreEditor::SaveLevelRequest* /*request*/, ::TempoScripting::Empty* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    virtual ::grpc::ServerUnaryReactor* SaveLevel(
      ::grpc::CallbackServerContext* /*context*/, const ::grpc::ByteBuffer* /*request*/, ::grpc::ByteBuffer* /*response*/)  { return nullptr; }
  };
  template <class BaseClass>
  class WithRawCallbackMethod_OpenLevel : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithRawCallbackMethod_OpenLevel() {
      ::grpc::Service::MarkMethodRawCallback(4,
          new ::grpc::internal::CallbackUnaryHandler< ::grpc::ByteBuffer, ::grpc::ByteBuffer>(
            [this](
                   ::grpc::CallbackServerContext* context, const ::grpc::ByteBuffer* request, ::grpc::ByteBuffer* response) { return this->OpenLevel(context, request, response); }));
    }
    ~WithRawCallbackMethod_OpenLevel() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status OpenLevel(::grpc::ServerContext* /*context*/, const ::TempoCoreEditor::OpenLevelRequest* /*request*/, ::TempoScripting::Empty* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    virtual ::grpc::ServerUnaryReactor* OpenLevel(
      ::grpc::CallbackServerContext* /*context*/, const ::grpc::ByteBuffer* /*request*/, ::grpc::ByteBuffer* /*response*/)  { return nullptr; }
  };
  template <class BaseClass>
  class WithRawCallbackMethod_NewLevel : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithRawCallbackMethod_NewLevel() {
      ::grpc::Service::MarkMethodRawCallback(5,
          new ::grpc::internal::CallbackUnaryHandler< ::grpc::ByteBuffer, ::grpc::ByteBuffer>(
            [this](
                   ::grpc::CallbackServerContext* context, const ::grpc::ByteBuffer* request, ::grpc::ByteBuffer* response) { return this->NewLevel(context, request, response); }));
    }
    ~WithRawCallbackMethod_NewLevel() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status NewLevel(::grpc::ServerContext* /*context*/, const ::TempoScripting::Empty* /*request*/, ::TempoScripting::Empty* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    virtual ::grpc::ServerUnaryReactor* NewLevel(
      ::grpc::CallbackServerContext* /*context*/, const ::grpc::ByteBuffer* /*request*/, ::grpc::ByteBuffer* /*response*/)  { return nullptr; }
  };
  template <class BaseClass>
  class WithStreamedUnaryMethod_PlayInEditor : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithStreamedUnaryMethod_PlayInEditor() {
      ::grpc::Service::MarkMethodStreamed(0,
        new ::grpc::internal::StreamedUnaryHandler<
          ::TempoScripting::Empty, ::TempoScripting::Empty>(
            [this](::grpc::ServerContext* context,
                   ::grpc::ServerUnaryStreamer<
                     ::TempoScripting::Empty, ::TempoScripting::Empty>* streamer) {
                       return this->StreamedPlayInEditor(context,
                         streamer);
                  }));
    }
    ~WithStreamedUnaryMethod_PlayInEditor() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable regular version of this method
    ::grpc::Status PlayInEditor(::grpc::ServerContext* /*context*/, const ::TempoScripting::Empty* /*request*/, ::TempoScripting::Empty* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    // replace default version of method with streamed unary
    virtual ::grpc::Status StreamedPlayInEditor(::grpc::ServerContext* context, ::grpc::ServerUnaryStreamer< ::TempoScripting::Empty,::TempoScripting::Empty>* server_unary_streamer) = 0;
  };
  template <class BaseClass>
  class WithStreamedUnaryMethod_Simulate : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithStreamedUnaryMethod_Simulate() {
      ::grpc::Service::MarkMethodStreamed(1,
        new ::grpc::internal::StreamedUnaryHandler<
          ::TempoScripting::Empty, ::TempoScripting::Empty>(
            [this](::grpc::ServerContext* context,
                   ::grpc::ServerUnaryStreamer<
                     ::TempoScripting::Empty, ::TempoScripting::Empty>* streamer) {
                       return this->StreamedSimulate(context,
                         streamer);
                  }));
    }
    ~WithStreamedUnaryMethod_Simulate() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable regular version of this method
    ::grpc::Status Simulate(::grpc::ServerContext* /*context*/, const ::TempoScripting::Empty* /*request*/, ::TempoScripting::Empty* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    // replace default version of method with streamed unary
    virtual ::grpc::Status StreamedSimulate(::grpc::ServerContext* context, ::grpc::ServerUnaryStreamer< ::TempoScripting::Empty,::TempoScripting::Empty>* server_unary_streamer) = 0;
  };
  template <class BaseClass>
  class WithStreamedUnaryMethod_Stop : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithStreamedUnaryMethod_Stop() {
      ::grpc::Service::MarkMethodStreamed(2,
        new ::grpc::internal::StreamedUnaryHandler<
          ::TempoScripting::Empty, ::TempoScripting::Empty>(
            [this](::grpc::ServerContext* context,
                   ::grpc::ServerUnaryStreamer<
                     ::TempoScripting::Empty, ::TempoScripting::Empty>* streamer) {
                       return this->StreamedStop(context,
                         streamer);
                  }));
    }
    ~WithStreamedUnaryMethod_Stop() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable regular version of this method
    ::grpc::Status Stop(::grpc::ServerContext* /*context*/, const ::TempoScripting::Empty* /*request*/, ::TempoScripting::Empty* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    // replace default version of method with streamed unary
    virtual ::grpc::Status StreamedStop(::grpc::ServerContext* context, ::grpc::ServerUnaryStreamer< ::TempoScripting::Empty,::TempoScripting::Empty>* server_unary_streamer) = 0;
  };
  template <class BaseClass>
  class WithStreamedUnaryMethod_SaveLevel : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithStreamedUnaryMethod_SaveLevel() {
      ::grpc::Service::MarkMethodStreamed(3,
        new ::grpc::internal::StreamedUnaryHandler<
          ::TempoCoreEditor::SaveLevelRequest, ::TempoScripting::Empty>(
            [this](::grpc::ServerContext* context,
                   ::grpc::ServerUnaryStreamer<
                     ::TempoCoreEditor::SaveLevelRequest, ::TempoScripting::Empty>* streamer) {
                       return this->StreamedSaveLevel(context,
                         streamer);
                  }));
    }
    ~WithStreamedUnaryMethod_SaveLevel() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable regular version of this method
    ::grpc::Status SaveLevel(::grpc::ServerContext* /*context*/, const ::TempoCoreEditor::SaveLevelRequest* /*request*/, ::TempoScripting::Empty* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    // replace default version of method with streamed unary
    virtual ::grpc::Status StreamedSaveLevel(::grpc::ServerContext* context, ::grpc::ServerUnaryStreamer< ::TempoCoreEditor::SaveLevelRequest,::TempoScripting::Empty>* server_unary_streamer) = 0;
  };
  template <class BaseClass>
  class WithStreamedUnaryMethod_OpenLevel : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithStreamedUnaryMethod_OpenLevel() {
      ::grpc::Service::MarkMethodStreamed(4,
        new ::grpc::internal::StreamedUnaryHandler<
          ::TempoCoreEditor::OpenLevelRequest, ::TempoScripting::Empty>(
            [this](::grpc::ServerContext* context,
                   ::grpc::ServerUnaryStreamer<
                     ::TempoCoreEditor::OpenLevelRequest, ::TempoScripting::Empty>* streamer) {
                       return this->StreamedOpenLevel(context,
                         streamer);
                  }));
    }
    ~WithStreamedUnaryMethod_OpenLevel() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable regular version of this method
    ::grpc::Status OpenLevel(::grpc::ServerContext* /*context*/, const ::TempoCoreEditor::OpenLevelRequest* /*request*/, ::TempoScripting::Empty* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    // replace default version of method with streamed unary
    virtual ::grpc::Status StreamedOpenLevel(::grpc::ServerContext* context, ::grpc::ServerUnaryStreamer< ::TempoCoreEditor::OpenLevelRequest,::TempoScripting::Empty>* server_unary_streamer) = 0;
  };
  template <class BaseClass>
  class WithStreamedUnaryMethod_NewLevel : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithStreamedUnaryMethod_NewLevel() {
      ::grpc::Service::MarkMethodStreamed(5,
        new ::grpc::internal::StreamedUnaryHandler<
          ::TempoScripting::Empty, ::TempoScripting::Empty>(
            [this](::grpc::ServerContext* context,
                   ::grpc::ServerUnaryStreamer<
                     ::TempoScripting::Empty, ::TempoScripting::Empty>* streamer) {
                       return this->StreamedNewLevel(context,
                         streamer);
                  }));
    }
    ~WithStreamedUnaryMethod_NewLevel() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable regular version of this method
    ::grpc::Status NewLevel(::grpc::ServerContext* /*context*/, const ::TempoScripting::Empty* /*request*/, ::TempoScripting::Empty* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    // replace default version of method with streamed unary
    virtual ::grpc::Status StreamedNewLevel(::grpc::ServerContext* context, ::grpc::ServerUnaryStreamer< ::TempoScripting::Empty,::TempoScripting::Empty>* server_unary_streamer) = 0;
  };
  typedef WithStreamedUnaryMethod_PlayInEditor<WithStreamedUnaryMethod_Simulate<WithStreamedUnaryMethod_Stop<WithStreamedUnaryMethod_SaveLevel<WithStreamedUnaryMethod_OpenLevel<WithStreamedUnaryMethod_NewLevel<Service > > > > > > StreamedUnaryService;
  typedef Service SplitStreamedService;
  typedef WithStreamedUnaryMethod_PlayInEditor<WithStreamedUnaryMethod_Simulate<WithStreamedUnaryMethod_Stop<WithStreamedUnaryMethod_SaveLevel<WithStreamedUnaryMethod_OpenLevel<WithStreamedUnaryMethod_NewLevel<Service > > > > > > StreamedService;
};

}  // namespace TempoCoreEditor


#endif  // GRPC_TempoCoreEditor_2fTempoCoreEditor_2eproto__INCLUDED
