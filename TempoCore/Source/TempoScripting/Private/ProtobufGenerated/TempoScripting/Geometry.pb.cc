// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: TempoScripting/Geometry.proto

#include "TempoScripting/Geometry.pb.h"

#include <algorithm>
#include "google/protobuf/io/coded_stream.h"
#include "google/protobuf/extension_set.h"
#include "google/protobuf/wire_format_lite.h"
#include "google/protobuf/descriptor.h"
#include "google/protobuf/generated_message_reflection.h"
#include "google/protobuf/reflection_ops.h"
#include "google/protobuf/wire_format.h"
#include "google/protobuf/generated_message_tctable_impl.h"
// @@protoc_insertion_point(includes)

// Must be included last.
#include "google/protobuf/port_def.inc"
PROTOBUF_PRAGMA_INIT_SEG
namespace _pb = ::google::protobuf_tempo;
namespace _pbi = ::google::protobuf_tempo::internal;
namespace _fl = ::google::protobuf_tempo::internal::field_layout;
namespace TempoScripting {

inline constexpr Vector2D::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : x_{0},
        y_{0},
        _cached_size_{0} {}

template <typename>
PROTOBUF_CONSTEXPR Vector2D::Vector2D(::_pbi::ConstantInitialized)
    : _impl_(::_pbi::ConstantInitialized()) {}
struct Vector2DDefaultTypeInternal {
  PROTOBUF_CONSTEXPR Vector2DDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~Vector2DDefaultTypeInternal() {}
  union {
    Vector2D _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT TEMPOSCRIPTING_API
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 Vector2DDefaultTypeInternal _Vector2D_default_instance_;

inline constexpr Vector::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : x_{0},
        y_{0},
        z_{0},
        _cached_size_{0} {}

template <typename>
PROTOBUF_CONSTEXPR Vector::Vector(::_pbi::ConstantInitialized)
    : _impl_(::_pbi::ConstantInitialized()) {}
struct VectorDefaultTypeInternal {
  PROTOBUF_CONSTEXPR VectorDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~VectorDefaultTypeInternal() {}
  union {
    Vector _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT TEMPOSCRIPTING_API
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 VectorDefaultTypeInternal _Vector_default_instance_;

inline constexpr Rotation::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : r_{0},
        p_{0},
        y_{0},
        _cached_size_{0} {}

template <typename>
PROTOBUF_CONSTEXPR Rotation::Rotation(::_pbi::ConstantInitialized)
    : _impl_(::_pbi::ConstantInitialized()) {}
struct RotationDefaultTypeInternal {
  PROTOBUF_CONSTEXPR RotationDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~RotationDefaultTypeInternal() {}
  union {
    Rotation _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT TEMPOSCRIPTING_API
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 RotationDefaultTypeInternal _Rotation_default_instance_;

inline constexpr Transform::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : _cached_size_{0},
        location_{nullptr},
        rotation_{nullptr} {}

template <typename>
PROTOBUF_CONSTEXPR Transform::Transform(::_pbi::ConstantInitialized)
    : _impl_(::_pbi::ConstantInitialized()) {}
struct TransformDefaultTypeInternal {
  PROTOBUF_CONSTEXPR TransformDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~TransformDefaultTypeInternal() {}
  union {
    Transform _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT TEMPOSCRIPTING_API
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 TransformDefaultTypeInternal _Transform_default_instance_;

inline constexpr Box::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : _cached_size_{0},
        min_{nullptr},
        max_{nullptr} {}

template <typename>
PROTOBUF_CONSTEXPR Box::Box(::_pbi::ConstantInitialized)
    : _impl_(::_pbi::ConstantInitialized()) {}
struct BoxDefaultTypeInternal {
  PROTOBUF_CONSTEXPR BoxDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~BoxDefaultTypeInternal() {}
  union {
    Box _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT TEMPOSCRIPTING_API
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 BoxDefaultTypeInternal _Box_default_instance_;
}  // namespace TempoScripting
static ::_pb::Metadata file_level_metadata_TempoScripting_2fGeometry_2eproto[5];
static constexpr const ::_pb::EnumDescriptor**
    file_level_enum_descriptors_TempoScripting_2fGeometry_2eproto = nullptr;
static constexpr const ::_pb::ServiceDescriptor**
    file_level_service_descriptors_TempoScripting_2fGeometry_2eproto = nullptr;
const ::uint32_t TableStruct_TempoScripting_2fGeometry_2eproto::offsets[] PROTOBUF_SECTION_VARIABLE(
    protodesc_cold) = {
    ~0u,  // no _has_bits_
    PROTOBUF_FIELD_OFFSET(::TempoScripting::Vector2D, _internal_metadata_),
    ~0u,  // no _extensions_
    ~0u,  // no _oneof_case_
    ~0u,  // no _weak_field_map_
    ~0u,  // no _inlined_string_donated_
    ~0u,  // no _split_
    ~0u,  // no sizeof(Split)
    PROTOBUF_FIELD_OFFSET(::TempoScripting::Vector2D, _impl_.x_),
    PROTOBUF_FIELD_OFFSET(::TempoScripting::Vector2D, _impl_.y_),
    ~0u,  // no _has_bits_
    PROTOBUF_FIELD_OFFSET(::TempoScripting::Vector, _internal_metadata_),
    ~0u,  // no _extensions_
    ~0u,  // no _oneof_case_
    ~0u,  // no _weak_field_map_
    ~0u,  // no _inlined_string_donated_
    ~0u,  // no _split_
    ~0u,  // no sizeof(Split)
    PROTOBUF_FIELD_OFFSET(::TempoScripting::Vector, _impl_.x_),
    PROTOBUF_FIELD_OFFSET(::TempoScripting::Vector, _impl_.y_),
    PROTOBUF_FIELD_OFFSET(::TempoScripting::Vector, _impl_.z_),
    ~0u,  // no _has_bits_
    PROTOBUF_FIELD_OFFSET(::TempoScripting::Rotation, _internal_metadata_),
    ~0u,  // no _extensions_
    ~0u,  // no _oneof_case_
    ~0u,  // no _weak_field_map_
    ~0u,  // no _inlined_string_donated_
    ~0u,  // no _split_
    ~0u,  // no sizeof(Split)
    PROTOBUF_FIELD_OFFSET(::TempoScripting::Rotation, _impl_.r_),
    PROTOBUF_FIELD_OFFSET(::TempoScripting::Rotation, _impl_.p_),
    PROTOBUF_FIELD_OFFSET(::TempoScripting::Rotation, _impl_.y_),
    PROTOBUF_FIELD_OFFSET(::TempoScripting::Transform, _impl_._has_bits_),
    PROTOBUF_FIELD_OFFSET(::TempoScripting::Transform, _internal_metadata_),
    ~0u,  // no _extensions_
    ~0u,  // no _oneof_case_
    ~0u,  // no _weak_field_map_
    ~0u,  // no _inlined_string_donated_
    ~0u,  // no _split_
    ~0u,  // no sizeof(Split)
    PROTOBUF_FIELD_OFFSET(::TempoScripting::Transform, _impl_.location_),
    PROTOBUF_FIELD_OFFSET(::TempoScripting::Transform, _impl_.rotation_),
    0,
    1,
    PROTOBUF_FIELD_OFFSET(::TempoScripting::Box, _impl_._has_bits_),
    PROTOBUF_FIELD_OFFSET(::TempoScripting::Box, _internal_metadata_),
    ~0u,  // no _extensions_
    ~0u,  // no _oneof_case_
    ~0u,  // no _weak_field_map_
    ~0u,  // no _inlined_string_donated_
    ~0u,  // no _split_
    ~0u,  // no sizeof(Split)
    PROTOBUF_FIELD_OFFSET(::TempoScripting::Box, _impl_.min_),
    PROTOBUF_FIELD_OFFSET(::TempoScripting::Box, _impl_.max_),
    0,
    1,
};

static const ::_pbi::MigrationSchema
    schemas[] PROTOBUF_SECTION_VARIABLE(protodesc_cold) = {
        {0, -1, -1, sizeof(::TempoScripting::Vector2D)},
        {10, -1, -1, sizeof(::TempoScripting::Vector)},
        {21, -1, -1, sizeof(::TempoScripting::Rotation)},
        {32, 42, -1, sizeof(::TempoScripting::Transform)},
        {44, 54, -1, sizeof(::TempoScripting::Box)},
};

static const ::_pb::Message* const file_default_instances[] = {
    &::TempoScripting::_Vector2D_default_instance_._instance,
    &::TempoScripting::_Vector_default_instance_._instance,
    &::TempoScripting::_Rotation_default_instance_._instance,
    &::TempoScripting::_Transform_default_instance_._instance,
    &::TempoScripting::_Box_default_instance_._instance,
};
const char descriptor_table_protodef_TempoScripting_2fGeometry_2eproto[] PROTOBUF_SECTION_VARIABLE(protodesc_cold) = {
    "\n\035TempoScripting/Geometry.proto\022\016TempoSc"
    "ripting\" \n\010Vector2D\022\t\n\001x\030\001 \001(\001\022\t\n\001y\030\002 \001("
    "\001\")\n\006Vector\022\t\n\001x\030\001 \001(\001\022\t\n\001y\030\002 \001(\001\022\t\n\001z\030\003"
    " \001(\001\"+\n\010Rotation\022\t\n\001r\030\001 \001(\001\022\t\n\001p\030\002 \001(\001\022\t"
    "\n\001y\030\003 \001(\001\"a\n\tTransform\022(\n\010location\030\001 \001(\013"
    "2\026.TempoScripting.Vector\022*\n\010rotation\030\002 \001"
    "(\0132\030.TempoScripting.Rotation\"O\n\003Box\022#\n\003M"
    "in\030\001 \001(\0132\026.TempoScripting.Vector\022#\n\003Max\030"
    "\002 \001(\0132\026.TempoScripting.Vectorb\006proto3"
};
static ::absl_tempo::once_flag descriptor_table_TempoScripting_2fGeometry_2eproto_once;
const ::_pbi::DescriptorTable descriptor_table_TempoScripting_2fGeometry_2eproto = {
    false,
    false,
    357,
    descriptor_table_protodef_TempoScripting_2fGeometry_2eproto,
    "TempoScripting/Geometry.proto",
    &descriptor_table_TempoScripting_2fGeometry_2eproto_once,
    nullptr,
    0,
    5,
    schemas,
    file_default_instances,
    TableStruct_TempoScripting_2fGeometry_2eproto::offsets,
    file_level_metadata_TempoScripting_2fGeometry_2eproto,
    file_level_enum_descriptors_TempoScripting_2fGeometry_2eproto,
    file_level_service_descriptors_TempoScripting_2fGeometry_2eproto,
};

// This function exists to be marked as weak.
// It can significantly speed up compilation by breaking up LLVM's SCC
// in the .pb.cc translation units. Large translation units see a
// reduction of more than 35% of walltime for optimized builds. Without
// the weak attribute all the messages in the file, including all the
// vtables and everything they use become part of the same SCC through
// a cycle like:
// GetMetadata -> descriptor table -> default instances ->
//   vtables -> GetMetadata
// By adding a weak function here we break the connection from the
// individual vtables back into the descriptor table.
PROTOBUF_ATTRIBUTE_WEAK const ::_pbi::DescriptorTable* descriptor_table_TempoScripting_2fGeometry_2eproto_getter() {
  return &descriptor_table_TempoScripting_2fGeometry_2eproto;
}
// Force running AddDescriptors() at dynamic initialization time.
PROTOBUF_ATTRIBUTE_INIT_PRIORITY2
static ::_pbi::AddDescriptorsRunner dynamic_init_dummy_TempoScripting_2fGeometry_2eproto(&descriptor_table_TempoScripting_2fGeometry_2eproto);
namespace TempoScripting {
// ===================================================================

class Vector2D::_Internal {
 public:
};

Vector2D::Vector2D(::google::protobuf_tempo::Arena* arena)
    : ::google::protobuf_tempo::Message(arena) {
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:TempoScripting.Vector2D)
}
Vector2D::Vector2D(
    ::google::protobuf_tempo::Arena* arena, const Vector2D& from)
    : Vector2D(arena) {
  MergeFrom(from);
}
inline PROTOBUF_NDEBUG_INLINE Vector2D::Impl_::Impl_(
    ::google::protobuf_tempo::internal::InternalVisibility visibility,
    ::google::protobuf_tempo::Arena* arena)
      : _cached_size_{0} {}

inline void Vector2D::SharedCtor(::_pb::Arena* arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
  ::memset(reinterpret_cast<char *>(&_impl_) +
               offsetof(Impl_, x_),
           0,
           offsetof(Impl_, y_) -
               offsetof(Impl_, x_) +
               sizeof(Impl_::y_));
}
Vector2D::~Vector2D() {
  // @@protoc_insertion_point(destructor:TempoScripting.Vector2D)
  _internal_metadata_.Delete<::google::protobuf_tempo::UnknownFieldSet>();
  SharedDtor();
}
inline void Vector2D::SharedDtor() {
  ABSL_DCHECK(GetArena() == nullptr);
  _impl_.~Impl_();
}

PROTOBUF_NOINLINE void Vector2D::Clear() {
// @@protoc_insertion_point(message_clear_start:TempoScripting.Vector2D)
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  ::memset(&_impl_.x_, 0, static_cast<::size_t>(
      reinterpret_cast<char*>(&_impl_.y_) -
      reinterpret_cast<char*>(&_impl_.x_)) + sizeof(_impl_.y_));
  _internal_metadata_.Clear<::google::protobuf_tempo::UnknownFieldSet>();
}

const char* Vector2D::_InternalParse(
    const char* ptr, ::_pbi::ParseContext* ctx) {
  ptr = ::_pbi::TcParser::ParseLoop(this, ptr, ctx, &_table_.header);
  return ptr;
}


PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<1, 2, 0, 0, 2> Vector2D::_table_ = {
  {
    0,  // no _has_bits_
    0, // no _extensions_
    2, 8,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967292,  // skipmap
    offsetof(decltype(_table_), field_entries),
    2,  // num_field_entries
    0,  // num_aux_entries
    offsetof(decltype(_table_), field_names),  // no aux_entries
    &_Vector2D_default_instance_._instance,
    ::_pbi::TcParser::GenericFallback,  // fallback
  }, {{
    // double y = 2;
    {::_pbi::TcParser::FastF64S1,
     {17, 63, 0, PROTOBUF_FIELD_OFFSET(Vector2D, _impl_.y_)}},
    // double x = 1;
    {::_pbi::TcParser::FastF64S1,
     {9, 63, 0, PROTOBUF_FIELD_OFFSET(Vector2D, _impl_.x_)}},
  }}, {{
    65535, 65535
  }}, {{
    // double x = 1;
    {PROTOBUF_FIELD_OFFSET(Vector2D, _impl_.x_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kDouble)},
    // double y = 2;
    {PROTOBUF_FIELD_OFFSET(Vector2D, _impl_.y_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kDouble)},
  }},
  // no aux_entries
  {{
  }},
};

::uint8_t* Vector2D::_InternalSerialize(
    ::uint8_t* target,
    ::google::protobuf_tempo::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:TempoScripting.Vector2D)
  ::uint32_t cached_has_bits = 0;
  (void)cached_has_bits;

  // double x = 1;
  static_assert(sizeof(::uint64_t) == sizeof(double),
                "Code assumes ::uint64_t and double are the same size.");
  double tmp_x = this->_internal_x();
  ::uint64_t raw_x;
  memcpy(&raw_x, &tmp_x, sizeof(tmp_x));
  if (raw_x != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteDoubleToArray(
        1, this->_internal_x(), target);
  }

  // double y = 2;
  static_assert(sizeof(::uint64_t) == sizeof(double),
                "Code assumes ::uint64_t and double are the same size.");
  double tmp_y = this->_internal_y();
  ::uint64_t raw_y;
  memcpy(&raw_y, &tmp_y, sizeof(tmp_y));
  if (raw_y != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteDoubleToArray(
        2, this->_internal_y(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target =
        ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
            _internal_metadata_.unknown_fields<::google::protobuf_tempo::UnknownFieldSet>(::google::protobuf_tempo::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:TempoScripting.Vector2D)
  return target;
}

::size_t Vector2D::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:TempoScripting.Vector2D)
  ::size_t total_size = 0;

  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // double x = 1;
  static_assert(sizeof(::uint64_t) == sizeof(double),
                "Code assumes ::uint64_t and double are the same size.");
  double tmp_x = this->_internal_x();
  ::uint64_t raw_x;
  memcpy(&raw_x, &tmp_x, sizeof(tmp_x));
  if (raw_x != 0) {
    total_size += 9;
  }

  // double y = 2;
  static_assert(sizeof(::uint64_t) == sizeof(double),
                "Code assumes ::uint64_t and double are the same size.");
  double tmp_y = this->_internal_y();
  ::uint64_t raw_y;
  memcpy(&raw_y, &tmp_y, sizeof(tmp_y));
  if (raw_y != 0) {
    total_size += 9;
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::google::protobuf_tempo::Message::ClassData Vector2D::_class_data_ = {
    Vector2D::MergeImpl,
    nullptr,  // OnDemandRegisterArenaDtor
};
const ::google::protobuf_tempo::Message::ClassData* Vector2D::GetClassData() const {
  return &_class_data_;
}

void Vector2D::MergeImpl(::google::protobuf_tempo::Message& to_msg, const ::google::protobuf_tempo::Message& from_msg) {
  auto* const _this = static_cast<Vector2D*>(&to_msg);
  auto& from = static_cast<const Vector2D&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:TempoScripting.Vector2D)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  static_assert(sizeof(::uint64_t) == sizeof(double),
                "Code assumes ::uint64_t and double are the same size.");
  double tmp_x = from._internal_x();
  ::uint64_t raw_x;
  memcpy(&raw_x, &tmp_x, sizeof(tmp_x));
  if (raw_x != 0) {
    _this->_internal_set_x(from._internal_x());
  }
  static_assert(sizeof(::uint64_t) == sizeof(double),
                "Code assumes ::uint64_t and double are the same size.");
  double tmp_y = from._internal_y();
  ::uint64_t raw_y;
  memcpy(&raw_y, &tmp_y, sizeof(tmp_y));
  if (raw_y != 0) {
    _this->_internal_set_y(from._internal_y());
  }
  _this->_internal_metadata_.MergeFrom<::google::protobuf_tempo::UnknownFieldSet>(from._internal_metadata_);
}

void Vector2D::CopyFrom(const Vector2D& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:TempoScripting.Vector2D)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

PROTOBUF_NOINLINE bool Vector2D::IsInitialized() const {
  return true;
}

::_pbi::CachedSize* Vector2D::AccessCachedSize() const {
  return &_impl_._cached_size_;
}
void Vector2D::InternalSwap(Vector2D* PROTOBUF_RESTRICT other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  ::google::protobuf_tempo::internal::memswap<
      PROTOBUF_FIELD_OFFSET(Vector2D, _impl_.y_)
      + sizeof(Vector2D::_impl_.y_)
      - PROTOBUF_FIELD_OFFSET(Vector2D, _impl_.x_)>(
          reinterpret_cast<char*>(&_impl_.x_),
          reinterpret_cast<char*>(&other->_impl_.x_));
}

::google::protobuf_tempo::Metadata Vector2D::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_TempoScripting_2fGeometry_2eproto_getter, &descriptor_table_TempoScripting_2fGeometry_2eproto_once,
      file_level_metadata_TempoScripting_2fGeometry_2eproto[0]);
}
// ===================================================================

class Vector::_Internal {
 public:
};

Vector::Vector(::google::protobuf_tempo::Arena* arena)
    : ::google::protobuf_tempo::Message(arena) {
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:TempoScripting.Vector)
}
Vector::Vector(
    ::google::protobuf_tempo::Arena* arena, const Vector& from)
    : Vector(arena) {
  MergeFrom(from);
}
inline PROTOBUF_NDEBUG_INLINE Vector::Impl_::Impl_(
    ::google::protobuf_tempo::internal::InternalVisibility visibility,
    ::google::protobuf_tempo::Arena* arena)
      : _cached_size_{0} {}

inline void Vector::SharedCtor(::_pb::Arena* arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
  ::memset(reinterpret_cast<char *>(&_impl_) +
               offsetof(Impl_, x_),
           0,
           offsetof(Impl_, z_) -
               offsetof(Impl_, x_) +
               sizeof(Impl_::z_));
}
Vector::~Vector() {
  // @@protoc_insertion_point(destructor:TempoScripting.Vector)
  _internal_metadata_.Delete<::google::protobuf_tempo::UnknownFieldSet>();
  SharedDtor();
}
inline void Vector::SharedDtor() {
  ABSL_DCHECK(GetArena() == nullptr);
  _impl_.~Impl_();
}

PROTOBUF_NOINLINE void Vector::Clear() {
// @@protoc_insertion_point(message_clear_start:TempoScripting.Vector)
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  ::memset(&_impl_.x_, 0, static_cast<::size_t>(
      reinterpret_cast<char*>(&_impl_.z_) -
      reinterpret_cast<char*>(&_impl_.x_)) + sizeof(_impl_.z_));
  _internal_metadata_.Clear<::google::protobuf_tempo::UnknownFieldSet>();
}

const char* Vector::_InternalParse(
    const char* ptr, ::_pbi::ParseContext* ctx) {
  ptr = ::_pbi::TcParser::ParseLoop(this, ptr, ctx, &_table_.header);
  return ptr;
}


PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<2, 3, 0, 0, 2> Vector::_table_ = {
  {
    0,  // no _has_bits_
    0, // no _extensions_
    3, 24,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967288,  // skipmap
    offsetof(decltype(_table_), field_entries),
    3,  // num_field_entries
    0,  // num_aux_entries
    offsetof(decltype(_table_), field_names),  // no aux_entries
    &_Vector_default_instance_._instance,
    ::_pbi::TcParser::GenericFallback,  // fallback
  }, {{
    {::_pbi::TcParser::MiniParse, {}},
    // double x = 1;
    {::_pbi::TcParser::FastF64S1,
     {9, 63, 0, PROTOBUF_FIELD_OFFSET(Vector, _impl_.x_)}},
    // double y = 2;
    {::_pbi::TcParser::FastF64S1,
     {17, 63, 0, PROTOBUF_FIELD_OFFSET(Vector, _impl_.y_)}},
    // double z = 3;
    {::_pbi::TcParser::FastF64S1,
     {25, 63, 0, PROTOBUF_FIELD_OFFSET(Vector, _impl_.z_)}},
  }}, {{
    65535, 65535
  }}, {{
    // double x = 1;
    {PROTOBUF_FIELD_OFFSET(Vector, _impl_.x_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kDouble)},
    // double y = 2;
    {PROTOBUF_FIELD_OFFSET(Vector, _impl_.y_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kDouble)},
    // double z = 3;
    {PROTOBUF_FIELD_OFFSET(Vector, _impl_.z_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kDouble)},
  }},
  // no aux_entries
  {{
  }},
};

::uint8_t* Vector::_InternalSerialize(
    ::uint8_t* target,
    ::google::protobuf_tempo::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:TempoScripting.Vector)
  ::uint32_t cached_has_bits = 0;
  (void)cached_has_bits;

  // double x = 1;
  static_assert(sizeof(::uint64_t) == sizeof(double),
                "Code assumes ::uint64_t and double are the same size.");
  double tmp_x = this->_internal_x();
  ::uint64_t raw_x;
  memcpy(&raw_x, &tmp_x, sizeof(tmp_x));
  if (raw_x != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteDoubleToArray(
        1, this->_internal_x(), target);
  }

  // double y = 2;
  static_assert(sizeof(::uint64_t) == sizeof(double),
                "Code assumes ::uint64_t and double are the same size.");
  double tmp_y = this->_internal_y();
  ::uint64_t raw_y;
  memcpy(&raw_y, &tmp_y, sizeof(tmp_y));
  if (raw_y != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteDoubleToArray(
        2, this->_internal_y(), target);
  }

  // double z = 3;
  static_assert(sizeof(::uint64_t) == sizeof(double),
                "Code assumes ::uint64_t and double are the same size.");
  double tmp_z = this->_internal_z();
  ::uint64_t raw_z;
  memcpy(&raw_z, &tmp_z, sizeof(tmp_z));
  if (raw_z != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteDoubleToArray(
        3, this->_internal_z(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target =
        ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
            _internal_metadata_.unknown_fields<::google::protobuf_tempo::UnknownFieldSet>(::google::protobuf_tempo::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:TempoScripting.Vector)
  return target;
}

::size_t Vector::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:TempoScripting.Vector)
  ::size_t total_size = 0;

  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // double x = 1;
  static_assert(sizeof(::uint64_t) == sizeof(double),
                "Code assumes ::uint64_t and double are the same size.");
  double tmp_x = this->_internal_x();
  ::uint64_t raw_x;
  memcpy(&raw_x, &tmp_x, sizeof(tmp_x));
  if (raw_x != 0) {
    total_size += 9;
  }

  // double y = 2;
  static_assert(sizeof(::uint64_t) == sizeof(double),
                "Code assumes ::uint64_t and double are the same size.");
  double tmp_y = this->_internal_y();
  ::uint64_t raw_y;
  memcpy(&raw_y, &tmp_y, sizeof(tmp_y));
  if (raw_y != 0) {
    total_size += 9;
  }

  // double z = 3;
  static_assert(sizeof(::uint64_t) == sizeof(double),
                "Code assumes ::uint64_t and double are the same size.");
  double tmp_z = this->_internal_z();
  ::uint64_t raw_z;
  memcpy(&raw_z, &tmp_z, sizeof(tmp_z));
  if (raw_z != 0) {
    total_size += 9;
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::google::protobuf_tempo::Message::ClassData Vector::_class_data_ = {
    Vector::MergeImpl,
    nullptr,  // OnDemandRegisterArenaDtor
};
const ::google::protobuf_tempo::Message::ClassData* Vector::GetClassData() const {
  return &_class_data_;
}

void Vector::MergeImpl(::google::protobuf_tempo::Message& to_msg, const ::google::protobuf_tempo::Message& from_msg) {
  auto* const _this = static_cast<Vector*>(&to_msg);
  auto& from = static_cast<const Vector&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:TempoScripting.Vector)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  static_assert(sizeof(::uint64_t) == sizeof(double),
                "Code assumes ::uint64_t and double are the same size.");
  double tmp_x = from._internal_x();
  ::uint64_t raw_x;
  memcpy(&raw_x, &tmp_x, sizeof(tmp_x));
  if (raw_x != 0) {
    _this->_internal_set_x(from._internal_x());
  }
  static_assert(sizeof(::uint64_t) == sizeof(double),
                "Code assumes ::uint64_t and double are the same size.");
  double tmp_y = from._internal_y();
  ::uint64_t raw_y;
  memcpy(&raw_y, &tmp_y, sizeof(tmp_y));
  if (raw_y != 0) {
    _this->_internal_set_y(from._internal_y());
  }
  static_assert(sizeof(::uint64_t) == sizeof(double),
                "Code assumes ::uint64_t and double are the same size.");
  double tmp_z = from._internal_z();
  ::uint64_t raw_z;
  memcpy(&raw_z, &tmp_z, sizeof(tmp_z));
  if (raw_z != 0) {
    _this->_internal_set_z(from._internal_z());
  }
  _this->_internal_metadata_.MergeFrom<::google::protobuf_tempo::UnknownFieldSet>(from._internal_metadata_);
}

void Vector::CopyFrom(const Vector& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:TempoScripting.Vector)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

PROTOBUF_NOINLINE bool Vector::IsInitialized() const {
  return true;
}

::_pbi::CachedSize* Vector::AccessCachedSize() const {
  return &_impl_._cached_size_;
}
void Vector::InternalSwap(Vector* PROTOBUF_RESTRICT other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  ::google::protobuf_tempo::internal::memswap<
      PROTOBUF_FIELD_OFFSET(Vector, _impl_.z_)
      + sizeof(Vector::_impl_.z_)
      - PROTOBUF_FIELD_OFFSET(Vector, _impl_.x_)>(
          reinterpret_cast<char*>(&_impl_.x_),
          reinterpret_cast<char*>(&other->_impl_.x_));
}

::google::protobuf_tempo::Metadata Vector::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_TempoScripting_2fGeometry_2eproto_getter, &descriptor_table_TempoScripting_2fGeometry_2eproto_once,
      file_level_metadata_TempoScripting_2fGeometry_2eproto[1]);
}
// ===================================================================

class Rotation::_Internal {
 public:
};

Rotation::Rotation(::google::protobuf_tempo::Arena* arena)
    : ::google::protobuf_tempo::Message(arena) {
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:TempoScripting.Rotation)
}
Rotation::Rotation(
    ::google::protobuf_tempo::Arena* arena, const Rotation& from)
    : Rotation(arena) {
  MergeFrom(from);
}
inline PROTOBUF_NDEBUG_INLINE Rotation::Impl_::Impl_(
    ::google::protobuf_tempo::internal::InternalVisibility visibility,
    ::google::protobuf_tempo::Arena* arena)
      : _cached_size_{0} {}

inline void Rotation::SharedCtor(::_pb::Arena* arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
  ::memset(reinterpret_cast<char *>(&_impl_) +
               offsetof(Impl_, r_),
           0,
           offsetof(Impl_, y_) -
               offsetof(Impl_, r_) +
               sizeof(Impl_::y_));
}
Rotation::~Rotation() {
  // @@protoc_insertion_point(destructor:TempoScripting.Rotation)
  _internal_metadata_.Delete<::google::protobuf_tempo::UnknownFieldSet>();
  SharedDtor();
}
inline void Rotation::SharedDtor() {
  ABSL_DCHECK(GetArena() == nullptr);
  _impl_.~Impl_();
}

PROTOBUF_NOINLINE void Rotation::Clear() {
// @@protoc_insertion_point(message_clear_start:TempoScripting.Rotation)
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  ::memset(&_impl_.r_, 0, static_cast<::size_t>(
      reinterpret_cast<char*>(&_impl_.y_) -
      reinterpret_cast<char*>(&_impl_.r_)) + sizeof(_impl_.y_));
  _internal_metadata_.Clear<::google::protobuf_tempo::UnknownFieldSet>();
}

const char* Rotation::_InternalParse(
    const char* ptr, ::_pbi::ParseContext* ctx) {
  ptr = ::_pbi::TcParser::ParseLoop(this, ptr, ctx, &_table_.header);
  return ptr;
}


PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<2, 3, 0, 0, 2> Rotation::_table_ = {
  {
    0,  // no _has_bits_
    0, // no _extensions_
    3, 24,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967288,  // skipmap
    offsetof(decltype(_table_), field_entries),
    3,  // num_field_entries
    0,  // num_aux_entries
    offsetof(decltype(_table_), field_names),  // no aux_entries
    &_Rotation_default_instance_._instance,
    ::_pbi::TcParser::GenericFallback,  // fallback
  }, {{
    {::_pbi::TcParser::MiniParse, {}},
    // double r = 1;
    {::_pbi::TcParser::FastF64S1,
     {9, 63, 0, PROTOBUF_FIELD_OFFSET(Rotation, _impl_.r_)}},
    // double p = 2;
    {::_pbi::TcParser::FastF64S1,
     {17, 63, 0, PROTOBUF_FIELD_OFFSET(Rotation, _impl_.p_)}},
    // double y = 3;
    {::_pbi::TcParser::FastF64S1,
     {25, 63, 0, PROTOBUF_FIELD_OFFSET(Rotation, _impl_.y_)}},
  }}, {{
    65535, 65535
  }}, {{
    // double r = 1;
    {PROTOBUF_FIELD_OFFSET(Rotation, _impl_.r_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kDouble)},
    // double p = 2;
    {PROTOBUF_FIELD_OFFSET(Rotation, _impl_.p_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kDouble)},
    // double y = 3;
    {PROTOBUF_FIELD_OFFSET(Rotation, _impl_.y_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kDouble)},
  }},
  // no aux_entries
  {{
  }},
};

::uint8_t* Rotation::_InternalSerialize(
    ::uint8_t* target,
    ::google::protobuf_tempo::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:TempoScripting.Rotation)
  ::uint32_t cached_has_bits = 0;
  (void)cached_has_bits;

  // double r = 1;
  static_assert(sizeof(::uint64_t) == sizeof(double),
                "Code assumes ::uint64_t and double are the same size.");
  double tmp_r = this->_internal_r();
  ::uint64_t raw_r;
  memcpy(&raw_r, &tmp_r, sizeof(tmp_r));
  if (raw_r != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteDoubleToArray(
        1, this->_internal_r(), target);
  }

  // double p = 2;
  static_assert(sizeof(::uint64_t) == sizeof(double),
                "Code assumes ::uint64_t and double are the same size.");
  double tmp_p = this->_internal_p();
  ::uint64_t raw_p;
  memcpy(&raw_p, &tmp_p, sizeof(tmp_p));
  if (raw_p != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteDoubleToArray(
        2, this->_internal_p(), target);
  }

  // double y = 3;
  static_assert(sizeof(::uint64_t) == sizeof(double),
                "Code assumes ::uint64_t and double are the same size.");
  double tmp_y = this->_internal_y();
  ::uint64_t raw_y;
  memcpy(&raw_y, &tmp_y, sizeof(tmp_y));
  if (raw_y != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteDoubleToArray(
        3, this->_internal_y(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target =
        ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
            _internal_metadata_.unknown_fields<::google::protobuf_tempo::UnknownFieldSet>(::google::protobuf_tempo::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:TempoScripting.Rotation)
  return target;
}

::size_t Rotation::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:TempoScripting.Rotation)
  ::size_t total_size = 0;

  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // double r = 1;
  static_assert(sizeof(::uint64_t) == sizeof(double),
                "Code assumes ::uint64_t and double are the same size.");
  double tmp_r = this->_internal_r();
  ::uint64_t raw_r;
  memcpy(&raw_r, &tmp_r, sizeof(tmp_r));
  if (raw_r != 0) {
    total_size += 9;
  }

  // double p = 2;
  static_assert(sizeof(::uint64_t) == sizeof(double),
                "Code assumes ::uint64_t and double are the same size.");
  double tmp_p = this->_internal_p();
  ::uint64_t raw_p;
  memcpy(&raw_p, &tmp_p, sizeof(tmp_p));
  if (raw_p != 0) {
    total_size += 9;
  }

  // double y = 3;
  static_assert(sizeof(::uint64_t) == sizeof(double),
                "Code assumes ::uint64_t and double are the same size.");
  double tmp_y = this->_internal_y();
  ::uint64_t raw_y;
  memcpy(&raw_y, &tmp_y, sizeof(tmp_y));
  if (raw_y != 0) {
    total_size += 9;
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::google::protobuf_tempo::Message::ClassData Rotation::_class_data_ = {
    Rotation::MergeImpl,
    nullptr,  // OnDemandRegisterArenaDtor
};
const ::google::protobuf_tempo::Message::ClassData* Rotation::GetClassData() const {
  return &_class_data_;
}

void Rotation::MergeImpl(::google::protobuf_tempo::Message& to_msg, const ::google::protobuf_tempo::Message& from_msg) {
  auto* const _this = static_cast<Rotation*>(&to_msg);
  auto& from = static_cast<const Rotation&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:TempoScripting.Rotation)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  static_assert(sizeof(::uint64_t) == sizeof(double),
                "Code assumes ::uint64_t and double are the same size.");
  double tmp_r = from._internal_r();
  ::uint64_t raw_r;
  memcpy(&raw_r, &tmp_r, sizeof(tmp_r));
  if (raw_r != 0) {
    _this->_internal_set_r(from._internal_r());
  }
  static_assert(sizeof(::uint64_t) == sizeof(double),
                "Code assumes ::uint64_t and double are the same size.");
  double tmp_p = from._internal_p();
  ::uint64_t raw_p;
  memcpy(&raw_p, &tmp_p, sizeof(tmp_p));
  if (raw_p != 0) {
    _this->_internal_set_p(from._internal_p());
  }
  static_assert(sizeof(::uint64_t) == sizeof(double),
                "Code assumes ::uint64_t and double are the same size.");
  double tmp_y = from._internal_y();
  ::uint64_t raw_y;
  memcpy(&raw_y, &tmp_y, sizeof(tmp_y));
  if (raw_y != 0) {
    _this->_internal_set_y(from._internal_y());
  }
  _this->_internal_metadata_.MergeFrom<::google::protobuf_tempo::UnknownFieldSet>(from._internal_metadata_);
}

void Rotation::CopyFrom(const Rotation& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:TempoScripting.Rotation)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

PROTOBUF_NOINLINE bool Rotation::IsInitialized() const {
  return true;
}

::_pbi::CachedSize* Rotation::AccessCachedSize() const {
  return &_impl_._cached_size_;
}
void Rotation::InternalSwap(Rotation* PROTOBUF_RESTRICT other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  ::google::protobuf_tempo::internal::memswap<
      PROTOBUF_FIELD_OFFSET(Rotation, _impl_.y_)
      + sizeof(Rotation::_impl_.y_)
      - PROTOBUF_FIELD_OFFSET(Rotation, _impl_.r_)>(
          reinterpret_cast<char*>(&_impl_.r_),
          reinterpret_cast<char*>(&other->_impl_.r_));
}

::google::protobuf_tempo::Metadata Rotation::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_TempoScripting_2fGeometry_2eproto_getter, &descriptor_table_TempoScripting_2fGeometry_2eproto_once,
      file_level_metadata_TempoScripting_2fGeometry_2eproto[2]);
}
// ===================================================================

class Transform::_Internal {
 public:
  using HasBits = decltype(std::declval<Transform>()._impl_._has_bits_);
  static constexpr ::int32_t kHasBitsOffset =
    8 * PROTOBUF_FIELD_OFFSET(Transform, _impl_._has_bits_);
  static const ::TempoScripting::Vector& location(const Transform* msg);
  static void set_has_location(HasBits* has_bits) {
    (*has_bits)[0] |= 1u;
  }
  static const ::TempoScripting::Rotation& rotation(const Transform* msg);
  static void set_has_rotation(HasBits* has_bits) {
    (*has_bits)[0] |= 2u;
  }
};

const ::TempoScripting::Vector& Transform::_Internal::location(const Transform* msg) {
  return *msg->_impl_.location_;
}
const ::TempoScripting::Rotation& Transform::_Internal::rotation(const Transform* msg) {
  return *msg->_impl_.rotation_;
}
Transform::Transform(::google::protobuf_tempo::Arena* arena)
    : ::google::protobuf_tempo::Message(arena) {
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:TempoScripting.Transform)
}
inline PROTOBUF_NDEBUG_INLINE Transform::Impl_::Impl_(
    ::google::protobuf_tempo::internal::InternalVisibility visibility, ::google::protobuf_tempo::Arena* arena,
    const Impl_& from)
      : _has_bits_{from._has_bits_},
        _cached_size_{0} {}

Transform::Transform(
    ::google::protobuf_tempo::Arena* arena,
    const Transform& from)
    : ::google::protobuf_tempo::Message(arena) {
  Transform* const _this = this;
  (void)_this;
  _internal_metadata_.MergeFrom<::google::protobuf_tempo::UnknownFieldSet>(
      from._internal_metadata_);
  new (&_impl_) Impl_(internal_visibility(), arena, from._impl_);
  ::uint32_t cached_has_bits = _impl_._has_bits_[0];
  _impl_.location_ = (cached_has_bits & 0x00000001u)
                ? CreateMaybeMessage<::TempoScripting::Vector>(arena, *from._impl_.location_)
                : nullptr;
  _impl_.rotation_ = (cached_has_bits & 0x00000002u)
                ? CreateMaybeMessage<::TempoScripting::Rotation>(arena, *from._impl_.rotation_)
                : nullptr;

  // @@protoc_insertion_point(copy_constructor:TempoScripting.Transform)
}
inline PROTOBUF_NDEBUG_INLINE Transform::Impl_::Impl_(
    ::google::protobuf_tempo::internal::InternalVisibility visibility,
    ::google::protobuf_tempo::Arena* arena)
      : _cached_size_{0} {}

inline void Transform::SharedCtor(::_pb::Arena* arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
  ::memset(reinterpret_cast<char *>(&_impl_) +
               offsetof(Impl_, location_),
           0,
           offsetof(Impl_, rotation_) -
               offsetof(Impl_, location_) +
               sizeof(Impl_::rotation_));
}
Transform::~Transform() {
  // @@protoc_insertion_point(destructor:TempoScripting.Transform)
  _internal_metadata_.Delete<::google::protobuf_tempo::UnknownFieldSet>();
  SharedDtor();
}
inline void Transform::SharedDtor() {
  ABSL_DCHECK(GetArena() == nullptr);
  delete _impl_.location_;
  delete _impl_.rotation_;
  _impl_.~Impl_();
}

PROTOBUF_NOINLINE void Transform::Clear() {
// @@protoc_insertion_point(message_clear_start:TempoScripting.Transform)
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x00000003u) {
    if (cached_has_bits & 0x00000001u) {
      ABSL_DCHECK(_impl_.location_ != nullptr);
      _impl_.location_->Clear();
    }
    if (cached_has_bits & 0x00000002u) {
      ABSL_DCHECK(_impl_.rotation_ != nullptr);
      _impl_.rotation_->Clear();
    }
  }
  _impl_._has_bits_.Clear();
  _internal_metadata_.Clear<::google::protobuf_tempo::UnknownFieldSet>();
}

const char* Transform::_InternalParse(
    const char* ptr, ::_pbi::ParseContext* ctx) {
  ptr = ::_pbi::TcParser::ParseLoop(this, ptr, ctx, &_table_.header);
  return ptr;
}


PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<1, 2, 2, 0, 2> Transform::_table_ = {
  {
    PROTOBUF_FIELD_OFFSET(Transform, _impl_._has_bits_),
    0, // no _extensions_
    2, 8,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967292,  // skipmap
    offsetof(decltype(_table_), field_entries),
    2,  // num_field_entries
    2,  // num_aux_entries
    offsetof(decltype(_table_), aux_entries),
    &_Transform_default_instance_._instance,
    ::_pbi::TcParser::GenericFallback,  // fallback
  }, {{
    // .TempoScripting.Rotation rotation = 2;
    {::_pbi::TcParser::FastMtS1,
     {18, 1, 1, PROTOBUF_FIELD_OFFSET(Transform, _impl_.rotation_)}},
    // .TempoScripting.Vector location = 1;
    {::_pbi::TcParser::FastMtS1,
     {10, 0, 0, PROTOBUF_FIELD_OFFSET(Transform, _impl_.location_)}},
  }}, {{
    65535, 65535
  }}, {{
    // .TempoScripting.Vector location = 1;
    {PROTOBUF_FIELD_OFFSET(Transform, _impl_.location_), _Internal::kHasBitsOffset + 0, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kMessage | ::_fl::kTvTable)},
    // .TempoScripting.Rotation rotation = 2;
    {PROTOBUF_FIELD_OFFSET(Transform, _impl_.rotation_), _Internal::kHasBitsOffset + 1, 1,
    (0 | ::_fl::kFcOptional | ::_fl::kMessage | ::_fl::kTvTable)},
  }}, {{
    {::_pbi::TcParser::GetTable<::TempoScripting::Vector>()},
    {::_pbi::TcParser::GetTable<::TempoScripting::Rotation>()},
  }}, {{
  }},
};

::uint8_t* Transform::_InternalSerialize(
    ::uint8_t* target,
    ::google::protobuf_tempo::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:TempoScripting.Transform)
  ::uint32_t cached_has_bits = 0;
  (void)cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  // .TempoScripting.Vector location = 1;
  if (cached_has_bits & 0x00000001u) {
    target = ::google::protobuf_tempo::internal::WireFormatLite::InternalWriteMessage(
        1, _Internal::location(this),
        _Internal::location(this).GetCachedSize(), target, stream);
  }

  // .TempoScripting.Rotation rotation = 2;
  if (cached_has_bits & 0x00000002u) {
    target = ::google::protobuf_tempo::internal::WireFormatLite::InternalWriteMessage(
        2, _Internal::rotation(this),
        _Internal::rotation(this).GetCachedSize(), target, stream);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target =
        ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
            _internal_metadata_.unknown_fields<::google::protobuf_tempo::UnknownFieldSet>(::google::protobuf_tempo::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:TempoScripting.Transform)
  return target;
}

::size_t Transform::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:TempoScripting.Transform)
  ::size_t total_size = 0;

  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x00000003u) {
    // .TempoScripting.Vector location = 1;
    if (cached_has_bits & 0x00000001u) {
      total_size +=
          1 + ::google::protobuf_tempo::internal::WireFormatLite::MessageSize(*_impl_.location_);
    }

    // .TempoScripting.Rotation rotation = 2;
    if (cached_has_bits & 0x00000002u) {
      total_size +=
          1 + ::google::protobuf_tempo::internal::WireFormatLite::MessageSize(*_impl_.rotation_);
    }

  }
  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::google::protobuf_tempo::Message::ClassData Transform::_class_data_ = {
    Transform::MergeImpl,
    nullptr,  // OnDemandRegisterArenaDtor
};
const ::google::protobuf_tempo::Message::ClassData* Transform::GetClassData() const {
  return &_class_data_;
}

void Transform::MergeImpl(::google::protobuf_tempo::Message& to_msg, const ::google::protobuf_tempo::Message& from_msg) {
  auto* const _this = static_cast<Transform*>(&to_msg);
  auto& from = static_cast<const Transform&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:TempoScripting.Transform)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._impl_._has_bits_[0];
  if (cached_has_bits & 0x00000003u) {
    if (cached_has_bits & 0x00000001u) {
      _this->_internal_mutable_location()->::TempoScripting::Vector::MergeFrom(
          from._internal_location());
    }
    if (cached_has_bits & 0x00000002u) {
      _this->_internal_mutable_rotation()->::TempoScripting::Rotation::MergeFrom(
          from._internal_rotation());
    }
  }
  _this->_internal_metadata_.MergeFrom<::google::protobuf_tempo::UnknownFieldSet>(from._internal_metadata_);
}

void Transform::CopyFrom(const Transform& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:TempoScripting.Transform)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

PROTOBUF_NOINLINE bool Transform::IsInitialized() const {
  return true;
}

::_pbi::CachedSize* Transform::AccessCachedSize() const {
  return &_impl_._cached_size_;
}
void Transform::InternalSwap(Transform* PROTOBUF_RESTRICT other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_._has_bits_[0], other->_impl_._has_bits_[0]);
  ::google::protobuf_tempo::internal::memswap<
      PROTOBUF_FIELD_OFFSET(Transform, _impl_.rotation_)
      + sizeof(Transform::_impl_.rotation_)
      - PROTOBUF_FIELD_OFFSET(Transform, _impl_.location_)>(
          reinterpret_cast<char*>(&_impl_.location_),
          reinterpret_cast<char*>(&other->_impl_.location_));
}

::google::protobuf_tempo::Metadata Transform::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_TempoScripting_2fGeometry_2eproto_getter, &descriptor_table_TempoScripting_2fGeometry_2eproto_once,
      file_level_metadata_TempoScripting_2fGeometry_2eproto[3]);
}
// ===================================================================

class Box::_Internal {
 public:
  using HasBits = decltype(std::declval<Box>()._impl_._has_bits_);
  static constexpr ::int32_t kHasBitsOffset =
    8 * PROTOBUF_FIELD_OFFSET(Box, _impl_._has_bits_);
  static const ::TempoScripting::Vector& min(const Box* msg);
  static void set_has_min(HasBits* has_bits) {
    (*has_bits)[0] |= 1u;
  }
  static const ::TempoScripting::Vector& max(const Box* msg);
  static void set_has_max(HasBits* has_bits) {
    (*has_bits)[0] |= 2u;
  }
};

const ::TempoScripting::Vector& Box::_Internal::min(const Box* msg) {
  return *msg->_impl_.min_;
}
const ::TempoScripting::Vector& Box::_Internal::max(const Box* msg) {
  return *msg->_impl_.max_;
}
Box::Box(::google::protobuf_tempo::Arena* arena)
    : ::google::protobuf_tempo::Message(arena) {
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:TempoScripting.Box)
}
inline PROTOBUF_NDEBUG_INLINE Box::Impl_::Impl_(
    ::google::protobuf_tempo::internal::InternalVisibility visibility, ::google::protobuf_tempo::Arena* arena,
    const Impl_& from)
      : _has_bits_{from._has_bits_},
        _cached_size_{0} {}

Box::Box(
    ::google::protobuf_tempo::Arena* arena,
    const Box& from)
    : ::google::protobuf_tempo::Message(arena) {
  Box* const _this = this;
  (void)_this;
  _internal_metadata_.MergeFrom<::google::protobuf_tempo::UnknownFieldSet>(
      from._internal_metadata_);
  new (&_impl_) Impl_(internal_visibility(), arena, from._impl_);
  ::uint32_t cached_has_bits = _impl_._has_bits_[0];
  _impl_.min_ = (cached_has_bits & 0x00000001u)
                ? CreateMaybeMessage<::TempoScripting::Vector>(arena, *from._impl_.min_)
                : nullptr;
  _impl_.max_ = (cached_has_bits & 0x00000002u)
                ? CreateMaybeMessage<::TempoScripting::Vector>(arena, *from._impl_.max_)
                : nullptr;

  // @@protoc_insertion_point(copy_constructor:TempoScripting.Box)
}
inline PROTOBUF_NDEBUG_INLINE Box::Impl_::Impl_(
    ::google::protobuf_tempo::internal::InternalVisibility visibility,
    ::google::protobuf_tempo::Arena* arena)
      : _cached_size_{0} {}

inline void Box::SharedCtor(::_pb::Arena* arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
  ::memset(reinterpret_cast<char *>(&_impl_) +
               offsetof(Impl_, min_),
           0,
           offsetof(Impl_, max_) -
               offsetof(Impl_, min_) +
               sizeof(Impl_::max_));
}
Box::~Box() {
  // @@protoc_insertion_point(destructor:TempoScripting.Box)
  _internal_metadata_.Delete<::google::protobuf_tempo::UnknownFieldSet>();
  SharedDtor();
}
inline void Box::SharedDtor() {
  ABSL_DCHECK(GetArena() == nullptr);
  delete _impl_.min_;
  delete _impl_.max_;
  _impl_.~Impl_();
}

PROTOBUF_NOINLINE void Box::Clear() {
// @@protoc_insertion_point(message_clear_start:TempoScripting.Box)
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x00000003u) {
    if (cached_has_bits & 0x00000001u) {
      ABSL_DCHECK(_impl_.min_ != nullptr);
      _impl_.min_->Clear();
    }
    if (cached_has_bits & 0x00000002u) {
      ABSL_DCHECK(_impl_.max_ != nullptr);
      _impl_.max_->Clear();
    }
  }
  _impl_._has_bits_.Clear();
  _internal_metadata_.Clear<::google::protobuf_tempo::UnknownFieldSet>();
}

const char* Box::_InternalParse(
    const char* ptr, ::_pbi::ParseContext* ctx) {
  ptr = ::_pbi::TcParser::ParseLoop(this, ptr, ctx, &_table_.header);
  return ptr;
}


PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<1, 2, 2, 0, 2> Box::_table_ = {
  {
    PROTOBUF_FIELD_OFFSET(Box, _impl_._has_bits_),
    0, // no _extensions_
    2, 8,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967292,  // skipmap
    offsetof(decltype(_table_), field_entries),
    2,  // num_field_entries
    2,  // num_aux_entries
    offsetof(decltype(_table_), aux_entries),
    &_Box_default_instance_._instance,
    ::_pbi::TcParser::GenericFallback,  // fallback
  }, {{
    // .TempoScripting.Vector Max = 2;
    {::_pbi::TcParser::FastMtS1,
     {18, 1, 1, PROTOBUF_FIELD_OFFSET(Box, _impl_.max_)}},
    // .TempoScripting.Vector Min = 1;
    {::_pbi::TcParser::FastMtS1,
     {10, 0, 0, PROTOBUF_FIELD_OFFSET(Box, _impl_.min_)}},
  }}, {{
    65535, 65535
  }}, {{
    // .TempoScripting.Vector Min = 1;
    {PROTOBUF_FIELD_OFFSET(Box, _impl_.min_), _Internal::kHasBitsOffset + 0, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kMessage | ::_fl::kTvTable)},
    // .TempoScripting.Vector Max = 2;
    {PROTOBUF_FIELD_OFFSET(Box, _impl_.max_), _Internal::kHasBitsOffset + 1, 1,
    (0 | ::_fl::kFcOptional | ::_fl::kMessage | ::_fl::kTvTable)},
  }}, {{
    {::_pbi::TcParser::GetTable<::TempoScripting::Vector>()},
    {::_pbi::TcParser::GetTable<::TempoScripting::Vector>()},
  }}, {{
  }},
};

::uint8_t* Box::_InternalSerialize(
    ::uint8_t* target,
    ::google::protobuf_tempo::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:TempoScripting.Box)
  ::uint32_t cached_has_bits = 0;
  (void)cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  // .TempoScripting.Vector Min = 1;
  if (cached_has_bits & 0x00000001u) {
    target = ::google::protobuf_tempo::internal::WireFormatLite::InternalWriteMessage(
        1, _Internal::min(this),
        _Internal::min(this).GetCachedSize(), target, stream);
  }

  // .TempoScripting.Vector Max = 2;
  if (cached_has_bits & 0x00000002u) {
    target = ::google::protobuf_tempo::internal::WireFormatLite::InternalWriteMessage(
        2, _Internal::max(this),
        _Internal::max(this).GetCachedSize(), target, stream);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target =
        ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
            _internal_metadata_.unknown_fields<::google::protobuf_tempo::UnknownFieldSet>(::google::protobuf_tempo::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:TempoScripting.Box)
  return target;
}

::size_t Box::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:TempoScripting.Box)
  ::size_t total_size = 0;

  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x00000003u) {
    // .TempoScripting.Vector Min = 1;
    if (cached_has_bits & 0x00000001u) {
      total_size +=
          1 + ::google::protobuf_tempo::internal::WireFormatLite::MessageSize(*_impl_.min_);
    }

    // .TempoScripting.Vector Max = 2;
    if (cached_has_bits & 0x00000002u) {
      total_size +=
          1 + ::google::protobuf_tempo::internal::WireFormatLite::MessageSize(*_impl_.max_);
    }

  }
  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::google::protobuf_tempo::Message::ClassData Box::_class_data_ = {
    Box::MergeImpl,
    nullptr,  // OnDemandRegisterArenaDtor
};
const ::google::protobuf_tempo::Message::ClassData* Box::GetClassData() const {
  return &_class_data_;
}

void Box::MergeImpl(::google::protobuf_tempo::Message& to_msg, const ::google::protobuf_tempo::Message& from_msg) {
  auto* const _this = static_cast<Box*>(&to_msg);
  auto& from = static_cast<const Box&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:TempoScripting.Box)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._impl_._has_bits_[0];
  if (cached_has_bits & 0x00000003u) {
    if (cached_has_bits & 0x00000001u) {
      _this->_internal_mutable_min()->::TempoScripting::Vector::MergeFrom(
          from._internal_min());
    }
    if (cached_has_bits & 0x00000002u) {
      _this->_internal_mutable_max()->::TempoScripting::Vector::MergeFrom(
          from._internal_max());
    }
  }
  _this->_internal_metadata_.MergeFrom<::google::protobuf_tempo::UnknownFieldSet>(from._internal_metadata_);
}

void Box::CopyFrom(const Box& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:TempoScripting.Box)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

PROTOBUF_NOINLINE bool Box::IsInitialized() const {
  return true;
}

::_pbi::CachedSize* Box::AccessCachedSize() const {
  return &_impl_._cached_size_;
}
void Box::InternalSwap(Box* PROTOBUF_RESTRICT other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_._has_bits_[0], other->_impl_._has_bits_[0]);
  ::google::protobuf_tempo::internal::memswap<
      PROTOBUF_FIELD_OFFSET(Box, _impl_.max_)
      + sizeof(Box::_impl_.max_)
      - PROTOBUF_FIELD_OFFSET(Box, _impl_.min_)>(
          reinterpret_cast<char*>(&_impl_.min_),
          reinterpret_cast<char*>(&other->_impl_.min_));
}

::google::protobuf_tempo::Metadata Box::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_TempoScripting_2fGeometry_2eproto_getter, &descriptor_table_TempoScripting_2fGeometry_2eproto_once,
      file_level_metadata_TempoScripting_2fGeometry_2eproto[4]);
}
// @@protoc_insertion_point(namespace_scope)
}  // namespace TempoScripting
namespace google {
namespace protobuf_tempo {
}  // namespace protobuf_tempo
}  // namespace google
// @@protoc_insertion_point(global_scope)
#include "google/protobuf/port_undef.inc"
