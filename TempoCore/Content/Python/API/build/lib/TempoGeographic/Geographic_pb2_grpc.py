# Generated by the gRPC Python protocol compiler plugin. DO NOT EDIT!
"""Client and server classes corresponding to protobuf-defined services."""
import grpc

from TempoGeographic import Geographic_pb2 as TempoGeographic_dot_Geographic__pb2
from TempoScripting import Empty_pb2 as TempoScripting_dot_Empty__pb2


class GeographicServiceStub(object):
    """Missing associated documentation comment in .proto file."""

    def __init__(self, channel):
        """Constructor.

        Args:
            channel: A grpc.Channel.
        """
        self.SetDate = channel.unary_unary(
                '/TempoGeographic.GeographicService/SetDate',
                request_serializer=TempoGeographic_dot_Geographic__pb2.Date.SerializeToString,
                response_deserializer=TempoScripting_dot_Empty__pb2.Empty.FromString,
                )
        self.SetTimeOfDay = channel.unary_unary(
                '/TempoGeographic.GeographicService/SetTimeOfDay',
                request_serializer=TempoGeographic_dot_Geographic__pb2.TimeOfDay.SerializeToString,
                response_deserializer=TempoScripting_dot_Empty__pb2.Empty.FromString,
                )
        self.SetDayCycleRelativeRate = channel.unary_unary(
                '/TempoGeographic.GeographicService/SetDayCycleRelativeRate',
                request_serializer=TempoGeographic_dot_Geographic__pb2.DayCycleRateRequest.SerializeToString,
                response_deserializer=TempoScripting_dot_Empty__pb2.Empty.FromString,
                )
        self.GetDateTime = channel.unary_unary(
                '/TempoGeographic.GeographicService/GetDateTime',
                request_serializer=TempoScripting_dot_Empty__pb2.Empty.SerializeToString,
                response_deserializer=TempoGeographic_dot_Geographic__pb2.DateTime.FromString,
                )
        self.SetGeographicReference = channel.unary_unary(
                '/TempoGeographic.GeographicService/SetGeographicReference',
                request_serializer=TempoGeographic_dot_Geographic__pb2.GeographicCoordinate.SerializeToString,
                response_deserializer=TempoScripting_dot_Empty__pb2.Empty.FromString,
                )


class GeographicServiceServicer(object):
    """Missing associated documentation comment in .proto file."""

    def SetDate(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def SetTimeOfDay(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def SetDayCycleRelativeRate(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def GetDateTime(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def SetGeographicReference(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')


def add_GeographicServiceServicer_to_server(servicer, server):
    rpc_method_handlers = {
            'SetDate': grpc.unary_unary_rpc_method_handler(
                    servicer.SetDate,
                    request_deserializer=TempoGeographic_dot_Geographic__pb2.Date.FromString,
                    response_serializer=TempoScripting_dot_Empty__pb2.Empty.SerializeToString,
            ),
            'SetTimeOfDay': grpc.unary_unary_rpc_method_handler(
                    servicer.SetTimeOfDay,
                    request_deserializer=TempoGeographic_dot_Geographic__pb2.TimeOfDay.FromString,
                    response_serializer=TempoScripting_dot_Empty__pb2.Empty.SerializeToString,
            ),
            'SetDayCycleRelativeRate': grpc.unary_unary_rpc_method_handler(
                    servicer.SetDayCycleRelativeRate,
                    request_deserializer=TempoGeographic_dot_Geographic__pb2.DayCycleRateRequest.FromString,
                    response_serializer=TempoScripting_dot_Empty__pb2.Empty.SerializeToString,
            ),
            'GetDateTime': grpc.unary_unary_rpc_method_handler(
                    servicer.GetDateTime,
                    request_deserializer=TempoScripting_dot_Empty__pb2.Empty.FromString,
                    response_serializer=TempoGeographic_dot_Geographic__pb2.DateTime.SerializeToString,
            ),
            'SetGeographicReference': grpc.unary_unary_rpc_method_handler(
                    servicer.SetGeographicReference,
                    request_deserializer=TempoGeographic_dot_Geographic__pb2.GeographicCoordinate.FromString,
                    response_serializer=TempoScripting_dot_Empty__pb2.Empty.SerializeToString,
            ),
    }
    generic_handler = grpc.method_handlers_generic_handler(
            'TempoGeographic.GeographicService', rpc_method_handlers)
    server.add_generic_rpc_handlers((generic_handler,))


 # This class is part of an EXPERIMENTAL API.
class GeographicService(object):
    """Missing associated documentation comment in .proto file."""

    @staticmethod
    def SetDate(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/TempoGeographic.GeographicService/SetDate',
            TempoGeographic_dot_Geographic__pb2.Date.SerializeToString,
            TempoScripting_dot_Empty__pb2.Empty.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def SetTimeOfDay(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/TempoGeographic.GeographicService/SetTimeOfDay',
            TempoGeographic_dot_Geographic__pb2.TimeOfDay.SerializeToString,
            TempoScripting_dot_Empty__pb2.Empty.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def SetDayCycleRelativeRate(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/TempoGeographic.GeographicService/SetDayCycleRelativeRate',
            TempoGeographic_dot_Geographic__pb2.DayCycleRateRequest.SerializeToString,
            TempoScripting_dot_Empty__pb2.Empty.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def GetDateTime(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/TempoGeographic.GeographicService/GetDateTime',
            TempoScripting_dot_Empty__pb2.Empty.SerializeToString,
            TempoGeographic_dot_Geographic__pb2.DateTime.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def SetGeographicReference(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/TempoGeographic.GeographicService/SetGeographicReference',
            TempoGeographic_dot_Geographic__pb2.GeographicCoordinate.SerializeToString,
            TempoScripting_dot_Empty__pb2.Empty.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)
