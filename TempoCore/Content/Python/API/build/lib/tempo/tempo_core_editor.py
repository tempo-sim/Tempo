# Warning: Autogenerated code do not edit

from tempo._tempo_context import tempo_context
from tempo import run_async
from curio.meta import awaitable
import asyncio


import TempoCoreEditor.TempoCoreEditor_pb2_grpc, TempoScripting.Empty_pb2
async def _play_in_editor(
) -> TempoScripting.Empty_pb2.Empty:
    stub = await tempo_context().get_stub(TempoCoreEditor.TempoCoreEditor_pb2_grpc.TempoCoreEditorServiceStub)
    request = TempoScripting.Empty_pb2.Empty(
    )
    return await stub.PlayInEditor(request)


def play_in_editor(
) -> TempoScripting.Empty_pb2.Empty:
    return run_async(_play_in_editor(
    ))


@awaitable(play_in_editor)
async def play_in_editor(
) -> TempoScripting.Empty_pb2.Empty:
    return await _play_in_editor(
    )

import TempoCoreEditor.TempoCoreEditor_pb2_grpc, TempoScripting.Empty_pb2
async def _simulate(
) -> TempoScripting.Empty_pb2.Empty:
    stub = await tempo_context().get_stub(TempoCoreEditor.TempoCoreEditor_pb2_grpc.TempoCoreEditorServiceStub)
    request = TempoScripting.Empty_pb2.Empty(
    )
    return await stub.Simulate(request)


def simulate(
) -> TempoScripting.Empty_pb2.Empty:
    return run_async(_simulate(
    ))


@awaitable(simulate)
async def simulate(
) -> TempoScripting.Empty_pb2.Empty:
    return await _simulate(
    )

import TempoCoreEditor.TempoCoreEditor_pb2_grpc, TempoScripting.Empty_pb2
async def _stop(
) -> TempoScripting.Empty_pb2.Empty:
    stub = await tempo_context().get_stub(TempoCoreEditor.TempoCoreEditor_pb2_grpc.TempoCoreEditorServiceStub)
    request = TempoScripting.Empty_pb2.Empty(
    )
    return await stub.Stop(request)


def stop(
) -> TempoScripting.Empty_pb2.Empty:
    return run_async(_stop(
    ))


@awaitable(stop)
async def stop(
) -> TempoScripting.Empty_pb2.Empty:
    return await _stop(
    )

import TempoCoreEditor.TempoCoreEditor_pb2, TempoCoreEditor.TempoCoreEditor_pb2_grpc, TempoScripting.Empty_pb2
async def _save_level(
    path: str = '',
    overwrite: bool = False
) -> TempoScripting.Empty_pb2.Empty:
    stub = await tempo_context().get_stub(TempoCoreEditor.TempoCoreEditor_pb2_grpc.TempoCoreEditorServiceStub)
    request = TempoCoreEditor.TempoCoreEditor_pb2.SaveLevelRequest(
        path=path,
        overwrite=overwrite
    )
    return await stub.SaveLevel(request)


def save_level(
    path: str = '',
    overwrite: bool = False
) -> TempoScripting.Empty_pb2.Empty:
    return run_async(_save_level(
        path=path,
        overwrite=overwrite
    ))


@awaitable(save_level)
async def save_level(
    path: str = '',
    overwrite: bool = False
) -> TempoScripting.Empty_pb2.Empty:
    return await _save_level(
        path=path,
        overwrite=overwrite
    )

import TempoCoreEditor.TempoCoreEditor_pb2, TempoCoreEditor.TempoCoreEditor_pb2_grpc, TempoScripting.Empty_pb2
async def _open_level(
    path: str = ''
) -> TempoScripting.Empty_pb2.Empty:
    stub = await tempo_context().get_stub(TempoCoreEditor.TempoCoreEditor_pb2_grpc.TempoCoreEditorServiceStub)
    request = TempoCoreEditor.TempoCoreEditor_pb2.OpenLevelRequest(
        path=path
    )
    return await stub.OpenLevel(request)


def open_level(
    path: str = ''
) -> TempoScripting.Empty_pb2.Empty:
    return run_async(_open_level(
        path=path
    ))


@awaitable(open_level)
async def open_level(
    path: str = ''
) -> TempoScripting.Empty_pb2.Empty:
    return await _open_level(
        path=path
    )

import TempoCoreEditor.TempoCoreEditor_pb2_grpc, TempoScripting.Empty_pb2
async def _new_level(
) -> TempoScripting.Empty_pb2.Empty:
    stub = await tempo_context().get_stub(TempoCoreEditor.TempoCoreEditor_pb2_grpc.TempoCoreEditorServiceStub)
    request = TempoScripting.Empty_pb2.Empty(
    )
    return await stub.NewLevel(request)


def new_level(
) -> TempoScripting.Empty_pb2.Empty:
    return run_async(_new_level(
    ))


@awaitable(new_level)
async def new_level(
) -> TempoScripting.Empty_pb2.Empty:
    return await _new_level(
    )

