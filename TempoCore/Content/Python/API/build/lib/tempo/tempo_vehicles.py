# Warning: Autogenerated code do not edit

from tempo._tempo_context import tempo_context
from tempo import run_async
from curio.meta import awaitable
import asyncio


import TempoVehicles.Driving_pb2_grpc, TempoVehicles.Driving_pb2, TempoScripting.Empty_pb2
async def _get_commandable_vehicles(
) -> TempoVehicles.Driving_pb2.CommandableVehiclesResponse:
    stub = await tempo_context().get_stub(TempoVehicles.Driving_pb2_grpc.DrivingServiceStub)
    request = TempoScripting.Empty_pb2.Empty(
    )
    return await stub.GetCommandableVehicles(request)


def get_commandable_vehicles(
) -> TempoVehicles.Driving_pb2.CommandableVehiclesResponse:
    return run_async(_get_commandable_vehicles(
    ))


@awaitable(get_commandable_vehicles)
async def get_commandable_vehicles(
) -> TempoVehicles.Driving_pb2.CommandableVehiclesResponse:
    return await _get_commandable_vehicles(
    )

import TempoVehicles.Driving_pb2_grpc, TempoVehicles.Driving_pb2, TempoScripting.Empty_pb2
async def _command_vehicle(
    vehicle_name: str = '',
    acceleration: float = 0.0,
    steering: float = 0.0
) -> TempoScripting.Empty_pb2.Empty:
    stub = await tempo_context().get_stub(TempoVehicles.Driving_pb2_grpc.DrivingServiceStub)
    request = TempoVehicles.Driving_pb2.DrivingCommandRequest(
        vehicle_name=vehicle_name,
        acceleration=acceleration,
        steering=steering
    )
    return await stub.CommandVehicle(request)


def command_vehicle(
    vehicle_name: str = '',
    acceleration: float = 0.0,
    steering: float = 0.0
) -> TempoScripting.Empty_pb2.Empty:
    return run_async(_command_vehicle(
        vehicle_name=vehicle_name,
        acceleration=acceleration,
        steering=steering
    ))


@awaitable(command_vehicle)
async def command_vehicle(
    vehicle_name: str = '',
    acceleration: float = 0.0,
    steering: float = 0.0
) -> TempoScripting.Empty_pb2.Empty:
    return await _command_vehicle(
        vehicle_name=vehicle_name,
        acceleration=acceleration,
        steering=steering
    )

