# Warning: Autogenerated code do not edit

from tempo._tempo_context import tempo_context
from tempo import run_async
from curio.meta import awaitable
import asyncio


import TempoLabels.Labels_pb2, TempoLabels.Labels_pb2_grpc, TempoScripting.Empty_pb2
async def _get_instance_to_semantic_id_map(
) -> TempoLabels.Labels_pb2.InstanceToSemanticIdMap:
    stub = await tempo_context().get_stub(TempoLabels.Labels_pb2_grpc.LabelServiceStub)
    request = TempoScripting.Empty_pb2.Empty(
    )
    return await stub.GetInstanceToSemanticIdMap(request)


def get_instance_to_semantic_id_map(
) -> TempoLabels.Labels_pb2.InstanceToSemanticIdMap:
    return run_async(_get_instance_to_semantic_id_map(
    ))


@awaitable(get_instance_to_semantic_id_map)
async def get_instance_to_semantic_id_map(
) -> TempoLabels.Labels_pb2.InstanceToSemanticIdMap:
    return await _get_instance_to_semantic_id_map(
    )

