# Generated by the gRPC Python protocol compiler plugin. DO NOT EDIT!
"""Client and server classes corresponding to protobuf-defined services."""
import grpc

from TempoCamera import Camera_pb2 as TempoCamera_dot_Camera__pb2
from TempoSensors import Sensors_pb2 as TempoSensors_dot_Sensors__pb2


class SensorServiceStub(object):
    """Missing associated documentation comment in .proto file."""

    def __init__(self, channel):
        """Constructor.

        Args:
            channel: A grpc.Channel.
        """
        self.GetAvailableSensors = channel.unary_unary(
                '/TempoSensors.SensorService/GetAvailableSensors',
                request_serializer=TempoSensors_dot_Sensors__pb2.AvailableSensorsRequest.SerializeToString,
                response_deserializer=TempoSensors_dot_Sensors__pb2.AvailableSensorsResponse.FromString,
                )
        self.StreamColorImages = channel.unary_stream(
                '/TempoSensors.SensorService/StreamColorImages',
                request_serializer=TempoCamera_dot_Camera__pb2.ColorImageRequest.SerializeToString,
                response_deserializer=TempoCamera_dot_Camera__pb2.ColorImage.FromString,
                )
        self.StreamDepthImages = channel.unary_stream(
                '/TempoSensors.SensorService/StreamDepthImages',
                request_serializer=TempoCamera_dot_Camera__pb2.DepthImageRequest.SerializeToString,
                response_deserializer=TempoCamera_dot_Camera__pb2.DepthImage.FromString,
                )
        self.StreamLabelImages = channel.unary_stream(
                '/TempoSensors.SensorService/StreamLabelImages',
                request_serializer=TempoCamera_dot_Camera__pb2.LabelImageRequest.SerializeToString,
                response_deserializer=TempoCamera_dot_Camera__pb2.LabelImage.FromString,
                )


class SensorServiceServicer(object):
    """Missing associated documentation comment in .proto file."""

    def GetAvailableSensors(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def StreamColorImages(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def StreamDepthImages(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def StreamLabelImages(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')


def add_SensorServiceServicer_to_server(servicer, server):
    rpc_method_handlers = {
            'GetAvailableSensors': grpc.unary_unary_rpc_method_handler(
                    servicer.GetAvailableSensors,
                    request_deserializer=TempoSensors_dot_Sensors__pb2.AvailableSensorsRequest.FromString,
                    response_serializer=TempoSensors_dot_Sensors__pb2.AvailableSensorsResponse.SerializeToString,
            ),
            'StreamColorImages': grpc.unary_stream_rpc_method_handler(
                    servicer.StreamColorImages,
                    request_deserializer=TempoCamera_dot_Camera__pb2.ColorImageRequest.FromString,
                    response_serializer=TempoCamera_dot_Camera__pb2.ColorImage.SerializeToString,
            ),
            'StreamDepthImages': grpc.unary_stream_rpc_method_handler(
                    servicer.StreamDepthImages,
                    request_deserializer=TempoCamera_dot_Camera__pb2.DepthImageRequest.FromString,
                    response_serializer=TempoCamera_dot_Camera__pb2.DepthImage.SerializeToString,
            ),
            'StreamLabelImages': grpc.unary_stream_rpc_method_handler(
                    servicer.StreamLabelImages,
                    request_deserializer=TempoCamera_dot_Camera__pb2.LabelImageRequest.FromString,
                    response_serializer=TempoCamera_dot_Camera__pb2.LabelImage.SerializeToString,
            ),
    }
    generic_handler = grpc.method_handlers_generic_handler(
            'TempoSensors.SensorService', rpc_method_handlers)
    server.add_generic_rpc_handlers((generic_handler,))


 # This class is part of an EXPERIMENTAL API.
class SensorService(object):
    """Missing associated documentation comment in .proto file."""

    @staticmethod
    def GetAvailableSensors(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/TempoSensors.SensorService/GetAvailableSensors',
            TempoSensors_dot_Sensors__pb2.AvailableSensorsRequest.SerializeToString,
            TempoSensors_dot_Sensors__pb2.AvailableSensorsResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def StreamColorImages(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_stream(request, target, '/TempoSensors.SensorService/StreamColorImages',
            TempoCamera_dot_Camera__pb2.ColorImageRequest.SerializeToString,
            TempoCamera_dot_Camera__pb2.ColorImage.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def StreamDepthImages(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_stream(request, target, '/TempoSensors.SensorService/StreamDepthImages',
            TempoCamera_dot_Camera__pb2.DepthImageRequest.SerializeToString,
            TempoCamera_dot_Camera__pb2.DepthImage.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def StreamLabelImages(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_stream(request, target, '/TempoSensors.SensorService/StreamLabelImages',
            TempoCamera_dot_Camera__pb2.LabelImageRequest.SerializeToString,
            TempoCamera_dot_Camera__pb2.LabelImage.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)
