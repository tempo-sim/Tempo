# Generated by the gRPC Python protocol compiler plugin. DO NOT EDIT!
"""Client and server classes corresponding to protobuf-defined services."""
import grpc

from TempoMapQuery import MapQueries_pb2 as TempoMapQuery_dot_MapQueries__pb2


class MapQueryServiceStub(object):
    """Missing associated documentation comment in .proto file."""

    def __init__(self, channel):
        """Constructor.

        Args:
            channel: A grpc.Channel.
        """
        self.GetLanes = channel.unary_unary(
                '/TempoMapQuery.MapQueryService/GetLanes',
                request_serializer=TempoMapQuery_dot_MapQueries__pb2.LaneDataRequest.SerializeToString,
                response_deserializer=TempoMapQuery_dot_MapQueries__pb2.LaneDataResponse.FromString,
                )
        self.GetLaneAccessibility = channel.unary_unary(
                '/TempoMapQuery.MapQueryService/GetLaneAccessibility',
                request_serializer=TempoMapQuery_dot_MapQueries__pb2.LaneAccessibilityRequest.SerializeToString,
                response_deserializer=TempoMapQuery_dot_MapQueries__pb2.LaneAccessibilityResponse.FromString,
                )
        self.StreamLaneAccessibility = channel.unary_stream(
                '/TempoMapQuery.MapQueryService/StreamLaneAccessibility',
                request_serializer=TempoMapQuery_dot_MapQueries__pb2.LaneAccessibilityRequest.SerializeToString,
                response_deserializer=TempoMapQuery_dot_MapQueries__pb2.LaneAccessibilityResponse.FromString,
                )
        self.GetZones = channel.unary_unary(
                '/TempoMapQuery.MapQueryService/GetZones',
                request_serializer=TempoMapQuery_dot_MapQueries__pb2.ZoneDataRequest.SerializeToString,
                response_deserializer=TempoMapQuery_dot_MapQueries__pb2.ZoneDataResponse.FromString,
                )


class MapQueryServiceServicer(object):
    """Missing associated documentation comment in .proto file."""

    def GetLanes(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def GetLaneAccessibility(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def StreamLaneAccessibility(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def GetZones(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')


def add_MapQueryServiceServicer_to_server(servicer, server):
    rpc_method_handlers = {
            'GetLanes': grpc.unary_unary_rpc_method_handler(
                    servicer.GetLanes,
                    request_deserializer=TempoMapQuery_dot_MapQueries__pb2.LaneDataRequest.FromString,
                    response_serializer=TempoMapQuery_dot_MapQueries__pb2.LaneDataResponse.SerializeToString,
            ),
            'GetLaneAccessibility': grpc.unary_unary_rpc_method_handler(
                    servicer.GetLaneAccessibility,
                    request_deserializer=TempoMapQuery_dot_MapQueries__pb2.LaneAccessibilityRequest.FromString,
                    response_serializer=TempoMapQuery_dot_MapQueries__pb2.LaneAccessibilityResponse.SerializeToString,
            ),
            'StreamLaneAccessibility': grpc.unary_stream_rpc_method_handler(
                    servicer.StreamLaneAccessibility,
                    request_deserializer=TempoMapQuery_dot_MapQueries__pb2.LaneAccessibilityRequest.FromString,
                    response_serializer=TempoMapQuery_dot_MapQueries__pb2.LaneAccessibilityResponse.SerializeToString,
            ),
            'GetZones': grpc.unary_unary_rpc_method_handler(
                    servicer.GetZones,
                    request_deserializer=TempoMapQuery_dot_MapQueries__pb2.ZoneDataRequest.FromString,
                    response_serializer=TempoMapQuery_dot_MapQueries__pb2.ZoneDataResponse.SerializeToString,
            ),
    }
    generic_handler = grpc.method_handlers_generic_handler(
            'TempoMapQuery.MapQueryService', rpc_method_handlers)
    server.add_generic_rpc_handlers((generic_handler,))


 # This class is part of an EXPERIMENTAL API.
class MapQueryService(object):
    """Missing associated documentation comment in .proto file."""

    @staticmethod
    def GetLanes(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/TempoMapQuery.MapQueryService/GetLanes',
            TempoMapQuery_dot_MapQueries__pb2.LaneDataRequest.SerializeToString,
            TempoMapQuery_dot_MapQueries__pb2.LaneDataResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def GetLaneAccessibility(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/TempoMapQuery.MapQueryService/GetLaneAccessibility',
            TempoMapQuery_dot_MapQueries__pb2.LaneAccessibilityRequest.SerializeToString,
            TempoMapQuery_dot_MapQueries__pb2.LaneAccessibilityResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def StreamLaneAccessibility(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_stream(request, target, '/TempoMapQuery.MapQueryService/StreamLaneAccessibility',
            TempoMapQuery_dot_MapQueries__pb2.LaneAccessibilityRequest.SerializeToString,
            TempoMapQuery_dot_MapQueries__pb2.LaneAccessibilityResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def GetZones(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/TempoMapQuery.MapQueryService/GetZones',
            TempoMapQuery_dot_MapQueries__pb2.ZoneDataRequest.SerializeToString,
            TempoMapQuery_dot_MapQueries__pb2.ZoneDataResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)
